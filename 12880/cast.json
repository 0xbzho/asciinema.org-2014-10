[[0.127686,{"lines":{"0":[["nermin >                                                                                                                                               ",{}]],"1":[["                                                                                                                                                       ",{}]],"2":[["                                                                                                                                                       ",{}]],"3":[["                                                                                                                                                       ",{}]],"4":[["                                                                                                                                                       ",{}]],"5":[["                                                                                                                                                       ",{}]],"6":[["                                                                                                                                                       ",{}]],"7":[["                                                                                                                                                       ",{}]],"8":[["                                                                                                                                                       ",{}]],"9":[["                                                                                                                                                       ",{}]],"10":[["                                                                                                                                                       ",{}]],"11":[["                                                                                                                                                       ",{}]],"12":[["                                                                                                                                                       ",{}]],"13":[["                                                                                                                                                       ",{}]],"14":[["                                                                                                                                                       ",{}]],"15":[["                                                                                                                                                       ",{}]],"16":[["                                                                                                                                                       ",{}]],"17":[["                                                                                                                                                       ",{}]],"18":[["                                                                                                                                                       ",{}]],"19":[["                                                                                                                                                       ",{}]],"20":[["                                                                                                                                                       ",{}]],"21":[["                                                                                                                                                       ",{}]],"22":[["                                                                                                                                                       ",{}]],"23":[["                                                                                                                                                       ",{}]],"24":[["                                                                                                                                                       ",{}]],"25":[["                                                                                                                                                       ",{}]],"26":[["                                                                                                                                                       ",{}]],"27":[["                                                                                                                                                       ",{}]],"28":[["                                                                                                                                                       ",{}]],"29":[["                                                                                                                                                       ",{}]],"30":[["                                                                                                                                                       ",{}]],"31":[["                                                                                                                                                       ",{}]],"32":[["                                                                                                                                                       ",{}]],"33":[["                                                                                                                                                       ",{}]],"34":[["                                                                                                                                                       ",{}]],"35":[["                                                                                                                                                       ",{}]],"36":[["                                                                                                                                                       ",{}]],"37":[["                                                                                                                                                       ",{}]],"38":[["                                                                                                                                                       ",{}]],"39":[["                                                                                                                                                       ",{}]],"40":[["                                                                                                                                                       ",{}]]},"cursor":{"x":9,"y":0,"visible":true}}],[0.508832,{"lines":{"0":[["nermin > t                                                                                                                                             ",{}]]},"cursor":{"x":10}}],[0.181333,{"lines":{"0":[["nermin > tm                                                                                                                                            ",{}]]},"cursor":{"x":11}}],[0.244015,{"lines":{"0":[["nermin > tmux                                                                                                                                          ",{}]]},"cursor":{"x":14}}],[0.38903,{"cursor":{"x":0,"y":1}}],[0.061768,{"lines":{"0":[["                                                                                                                                                       ",{}]],"40":[["[0] 0:bash*                                                                                                    \"nermin-SATELLITE-C55-A\" 19:03 10-Okt-14",{"fg":0,"bg":2}]]},"cursor":{"y":0}}],[1.112011,{"lines":{"0":[["nermin >                                                                                                                                               ",{}]]},"cursor":{"x":9}}],[0.926809,{}],[1.989637,{"lines":{"0":[["nermin > v                                                                                                                                             ",{}]]},"cursor":{"x":10}}],[0.177902,{"lines":{"0":[["nermin > vi                                                                                                                                            ",{}]]},"cursor":{"x":11}}],[1.146693,{"lines":{"0":[["nermin > vim                                                                                                                                           ",{}]]},"cursor":{"x":12}}],[0.537682,{"cursor":{"x":13}}],[0.7479479999999999,{"cursor":{"x":12}}],[0.176953,{"lines":{"0":[["nermin > vi                                                                                                                                            ",{}]]},"cursor":{"x":11}}],[0.135829,{"lines":{"0":[["nermin > v                                                                                                                                             ",{}]]},"cursor":{"x":10}}],[0.172071,{"lines":{"0":[["nermin >                                                                                                                                               ",{}]]},"cursor":{"x":9}}],[0.414991,{"lines":{"0":[["nermin > l                                                                                                                                             ",{}]]},"cursor":{"x":10}}],[0.141025,{"lines":{"0":[["nermin > ls                                                                                                                                            ",{}]]},"cursor":{"x":11}}],[0.285112,{"cursor":{"x":0,"y":1}}],[0.001813,{"lines":{"1":[["exec.c  primjer_1.c  primjer_2.c                                                                                                                       ",{}]],"2":[["nermin >                                                                                                                                               ",{}]]},"cursor":{"x":9,"y":2}}],[0.967153,{"lines":{"2":[["nermin > v                                                                                                                                             ",{}]]},"cursor":{"x":10}}],[0.174655,{"lines":{"2":[["nermin > vi                                                                                                                                            ",{}]]},"cursor":{"x":11}}],[0.288724,{"lines":{"2":[["nermin > vim                                                                                                                                           ",{}]]},"cursor":{"x":12}}],[0.155487,{"cursor":{"x":13}}],[0.301587,{"lines":{"2":[["nermin > vim p                                                                                                                                         ",{}]]},"cursor":{"x":14}}],[0.166001,{"lines":{"2":[["nermin > vim pr                                                                                                                                        ",{}]]},"cursor":{"x":15}}],[0.20324,{"lines":{"2":[["nermin > vim pri                                                                                                                                       ",{}]]},"cursor":{"x":16}}],[0.273548,{"lines":{"2":[["nermin > vim prim                                                                                                                                      ",{}]]},"cursor":{"x":17}}],[0.185252,{"lines":{"2":[["nermin > vim primjer_                                                                                                                                  ",{}]]},"cursor":{"x":21}}],[1.175355,{"lines":{"2":[["nermin > vim primjer_1                                                                                                                                 ",{}]]},"cursor":{"x":22}}],[0.37987,{"lines":{"2":[["nermin > vim primjer_1.c                                                                                                                               ",{}]]},"cursor":{"x":25}}],[0.684688,{"cursor":{"x":0,"y":3}}],[0.099116,{"lines":{"40":[["[0] 0:vim*                                                                                                     \"nermin-SATELLITE-C55-A\" 19:03 10-Okt-14",{"fg":0,"bg":2}]]}}],[1.212935,{"lines":{"0":[["                                                                                                                                                       ",{}]],"1":[["                                                                                                                                                       ",{}]],"2":[["                                                                                                                                                       ",{}]]}}],[0.013732,{"lines":{"39":[["\"primjer_1.c\" 19L, 559C                                                                                                                                ",{}]]},"cursor":{"x":23,"y":39,"visible":false}}],[0.096996,{"lines":{"0":[["  0 ",{"fg":3}],["#include",{"fg":5}],["<stdio.h>",{"fg":2}],["                                                                                                                                  ",{}]],"1":[["  1 ",{"fg":3}],["#include",{"fg":5}],["<unistd.h>",{"fg":2}],[" ",{}],["/* zaglavlje u kojem je deklarisana getpid() funkcija */",{"fg":1}],["                                                                        ",{}]],"2":[["  2 ",{"fg":3}],["#include",{"fg":5}],["<sys/types.h>",{"fg":2}],[" ",{}],["/* zaglavlje u kojem je definisan tip pid_t →  unsigned int */",{"fg":1}],["                                                               ",{}]],"3":[["  3 ",{"fg":3}],["int",{"fg":4,"bold":true}],[" main()                                                                                                                                         ",{}]],"4":[["  4 ",{"fg":3}],["{                                                                                                                                                  ",{}]],"5":[["  5 ",{"fg":3}],["  pid_t childPID;                                                                                                                                  ",{}]],"6":[["  6 ",{"fg":3}],["  pid_t mojPID = getpid();                                                                                                                         ",{}]],"7":[["  7 ",{"fg":3}],["  childPID = fork();                                                                                                                               ",{}]],"8":[["  8 ",{"fg":3}],["  ",{}],["if",{"fg":4,"bold":true}],["(childPID == -",{}],["1",{"fg":2}],[")                                                                                                                               ",{}]],"9":[["  9 ",{"fg":3}],["  {                                                                                                                                                ",{}]],"10":[[" 10 ",{"fg":3}],["    error(",{}],["\"Kreiranje procesa neuspjesno! :(\"",{"fg":2}],[");                                                                                                     ",{}]],"11":[[" 11 ",{"fg":3}],["    ",{}],["return",{"fg":4,"bold":true}],[" ",{}],["1",{"fg":2}],[";                                                                                                                                      ",{}]],"12":[[" 12 ",{"fg":3}],["  }                                                                                                                                                ",{}]],"13":[[" 13 ",{"fg":3}],["  ",{}],["if",{"fg":4,"bold":true}],[" (childPID == ",{}],["0",{"fg":2}],[")                                                                                                                               ",{}]],"14":[[" 14 ",{"fg":3}],["    printf(",{}],["\"Child proces sa PID = ",{"fg":2}],["%ld",{"fg":1,"bold":true}],[", ID = ",{"fg":2}],["%ld\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[", (",{}],["long",{"fg":4,"bold":true}],[")getpid(), (",{}],["long",{"fg":4,"bold":true}],[")mojPID);                                                                 ",{}]],"15":[[" 15 ",{"fg":3}],["  ",{}],["else",{"fg":4,"bold":true}],["                                                                                                                                             ",{}]],"16":[[" 16 ",{"fg":3}],["    printf(",{}],["\"Parent proces sa PID = ",{"fg":2}],["%ld",{"fg":1,"bold":true}],[", ID = ",{"fg":2}],["                                                                                                      ",{}]]},"cursor":{"x":49,"y":16}}],[0.001695,{"lines":{"16":[[" 16 ",{"fg":3}],["    printf(",{}],["\"Parent proces sa PID = ",{"fg":2}],["%ld",{"fg":1,"bold":true}],[", ID = ",{"fg":2}],["%ld\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[", (",{}],["long",{"fg":4,"bold":true}],[")getpid(), (",{}],["long",{"fg":4,"bold":true}],[")mojPID);                                                                ",{}]],"17":[[" 17 ",{"fg":3}],["  ",{}],["return",{"fg":4,"bold":true}],[" ",{}],["0",{"fg":2}],[";                                                                                                                                        ",{}]],"18":[[" 18 ",{"fg":3}],["}                                                                                                                                                  ",{}]],"19":[["~                                                                                                                                                      ",{"fg":4,"bold":true}]],"20":[["~                                                                                                                                                      ",{"fg":4,"bold":true}]],"21":[["~                                                                                                                                                      ",{"fg":4,"bold":true}]],"22":[["~                                                                                                                                                      ",{"fg":4,"bold":true}]],"23":[["~                                                                                                                                                      ",{"fg":4,"bold":true}]],"24":[["~                                                                                                                                                      ",{"fg":4,"bold":true}]],"25":[["~                                                                                                                                                      ",{"fg":4,"bold":true}]],"26":[["~                                                                                                                                                      ",{"fg":4,"bold":true}]],"27":[["~                                                                                                                                                      ",{"fg":4,"bold":true}]],"28":[["~                                                                                                                                                      ",{"fg":4,"bold":true}]],"29":[["~                                                                                                                                                      ",{"fg":4,"bold":true}]],"30":[["~                                                                                                                                                      ",{"fg":4,"bold":true}]],"31":[["~                                                                                                                                                      ",{"fg":4,"bold":true}]],"32":[["~                                                                                                                                                      ",{"fg":4,"bold":true}]],"33":[["~                                                                                                                                                      ",{"fg":4,"bold":true}]],"34":[["~                                                                                                                                                      ",{"fg":4,"bold":true}]],"35":[["~                                                                                                                                                      ",{"fg":4,"bold":true}]],"36":[["~                                                                                                                                                      ",{"fg":4,"bold":true}]],"37":[["~                                                                                                                                                      ",{"fg":4,"bold":true}]],"38":[["~                                                                                                                                                      ",{"fg":4,"bold":true}]],"39":[["\"primjer_1.c\" 19L, 559C                                                                                                              1,1           All ",{}]]},"cursor":{"x":4,"y":0,"visible":true}}],[5.48592,{"lines":{"0":[["  1 ",{"fg":3}],["#include",{"fg":5}],["<stdio.h>",{"fg":2}],["                                                                                                                                  ",{}]],"1":[["  0 ",{"fg":3}],["#include",{"fg":5}],["<unistd.h>",{"fg":2}],[" ",{}],["/* zaglavlje u kojem je deklarisana getpid() funkcija */",{"fg":1}],["                                                                        ",{}]],"2":[["  1 ",{"fg":3}],["#include",{"fg":5}],["<sys/types.h>",{"fg":2}],[" ",{}],["/* zaglavlje u kojem je definisan tip pid_t →  unsigned int */",{"fg":1}],["                                                               ",{}]],"3":[["  2 ",{"fg":3}],["int",{"fg":4,"bold":true}],[" main()                                                                                                                                         ",{}]],"4":[["  3 ",{"fg":3}],["{                                                                                                                                                  ",{}]],"5":[["  4 ",{"fg":3}],["  pid_t childPID;                                                                                                                                  ",{}]],"6":[["  5 ",{"fg":3}],["  pid_t mojPID = getpid();                                                                                                                         ",{}]],"7":[["  6 ",{"fg":3}],["  childPID = fork();                                                                                                                               ",{}]],"8":[["  7 ",{"fg":3}],["  ",{}],["if",{"fg":4,"bold":true}],["(childPID == -",{}],["1",{"fg":2}],[")                                                                                                                               ",{}]],"9":[["  8 ",{"fg":3}],["  {                                                                                                                                                ",{}]],"10":[["  9 ",{"fg":3}],["    error(",{}],["\"Kreiranje procesa neuspjesno! :(\"",{"fg":2}],[");                                                                                                     ",{}]],"11":[[" 10 ",{"fg":3}],["    ",{}],["return",{"fg":4,"bold":true}],[" ",{}],["1",{"fg":2}],[";                                                                                                                                      ",{}]],"12":[[" 11 ",{"fg":3}],["  }                                                                                                                                                ",{}]],"13":[[" 12 ",{"fg":3}],["  ",{}],["if",{"fg":4,"bold":true}],[" (childPID == ",{}],["0",{"fg":2}],[")                                                                                                                               ",{}]],"14":[[" 13 ",{"fg":3}],["    printf(",{}],["\"Child proces sa PID = ",{"fg":2}],["%ld",{"fg":1,"bold":true}],[", ID = ",{"fg":2}],["%ld\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[", (",{}],["long",{"fg":4,"bold":true}],[")getpid(), (",{}],["long",{"fg":4,"bold":true}],[")mojPID);                                                                 ",{}]],"15":[[" 14 ",{"fg":3}],["  ",{}],["else",{"fg":4,"bold":true}],["                                                                                                                                             ",{}]],"16":[[" 15 ",{"fg":3}],["    printf(",{}],["\"Parent proces sa PID = ",{"fg":2}],["%ld",{"fg":1,"bold":true}],[", ID = ",{"fg":2}],["%ld\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[", (",{}],["long",{"fg":4,"bold":true}],[")getpid(), (",{}],["long",{"fg":4,"bold":true}],[")mojPID);                                                                ",{}]],"17":[[" 16 ",{"fg":3}],["  ",{}],["return",{"fg":4,"bold":true}],[" ",{}],["0",{"fg":2}],[";                                                                                                                                        ",{}]],"18":[[" 17 ",{"fg":3}],["}                                                                                                                                                  ",{}]],"39":[["\"primjer_1.c\" 19L, 559C                                                                                                              2,1           All ",{}]]},"cursor":{"y":1}}],[3.637168,{"lines":{"0":[["  2 ",{"fg":3}],["#include",{"fg":5}],["<stdio.h>",{"fg":2}],["                                                                                                                                  ",{}]],"1":[["  1 ",{"fg":3}],["#include",{"fg":5}],["<unistd.h>",{"fg":2}],[" ",{}],["/* zaglavlje u kojem je deklarisana getpid() funkcija */",{"fg":1}],["                                                                        ",{}]],"2":[["  0 ",{"fg":3}],["#include",{"fg":5}],["<sys/types.h>",{"fg":2}],[" ",{}],["/* zaglavlje u kojem je definisan tip pid_t →  unsigned int */",{"fg":1}],["                                                               ",{}]],"3":[["  1 ",{"fg":3}],["int",{"fg":4,"bold":true}],[" main()                                                                                                                                         ",{}]],"4":[["  2 ",{"fg":3}],["{                                                                                                                                                  ",{}]],"5":[["  3 ",{"fg":3}],["  pid_t childPID;                                                                                                                                  ",{}]],"6":[["  4 ",{"fg":3}],["  pid_t mojPID = getpid();                                                                                                                         ",{}]],"7":[["  5 ",{"fg":3}],["  childPID = fork();                                                                                                                               ",{}]],"8":[["  6 ",{"fg":3}],["  ",{}],["if",{"fg":4,"bold":true}],["(childPID == -",{}],["1",{"fg":2}],[")                                                                                                                               ",{}]],"9":[["  7 ",{"fg":3}],["  {                                                                                                                                                ",{}]],"10":[["  8 ",{"fg":3}],["    error(",{}],["\"Kreiranje procesa neuspjesno! :(\"",{"fg":2}],[");                                                                                                     ",{}]],"11":[["  9 ",{"fg":3}],["    ",{}],["return",{"fg":4,"bold":true}],[" ",{}],["1",{"fg":2}],[";                                                                                                                                      ",{}]],"12":[[" 10 ",{"fg":3}],["  }                                                                                                                                                ",{}]],"13":[[" 11 ",{"fg":3}],["  ",{}],["if",{"fg":4,"bold":true}],[" (childPID == ",{}],["0",{"fg":2}],[")                                                                                                                               ",{}]],"14":[[" 12 ",{"fg":3}],["    printf(",{}],["\"Child proces sa PID = ",{"fg":2}],["%ld",{"fg":1,"bold":true}],[", ID = ",{"fg":2}],["%ld\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[", (",{}],["long",{"fg":4,"bold":true}],[")getpid(), (",{}],["long",{"fg":4,"bold":true}],[")mojPID);                                                                 ",{}]],"15":[[" 13 ",{"fg":3}],["  ",{}],["else",{"fg":4,"bold":true}],["                                                                                                                                             ",{}]],"16":[[" 14 ",{"fg":3}],["    printf(",{}],["\"Parent proces sa PID = ",{"fg":2}],["%ld",{"fg":1,"bold":true}],[", ID = ",{"fg":2}],["%ld\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[", (",{}],["long",{"fg":4,"bold":true}],[")getpid(), (",{}],["long",{"fg":4,"bold":true}],[")mojPID);                                                                ",{}]],"17":[[" 15 ",{"fg":3}],["  ",{}],["return",{"fg":4,"bold":true}],[" ",{}],["0",{"fg":2}],[";                                                                                                                                        ",{}]],"18":[[" 16 ",{"fg":3}],["}                                                                                                                                                  ",{}]],"39":[["\"primjer_1.c\" 19L, 559C                                                                                                              3,1           All ",{}]]},"cursor":{"y":2}}],[1.945743,{"lines":{"0":[["  3 ",{"fg":3}],["#include",{"fg":5}],["<stdio.h>",{"fg":2}],["                                                                                                                                  ",{}]],"1":[["  2 ",{"fg":3}],["#include",{"fg":5}],["<unistd.h>",{"fg":2}],[" ",{}],["/* zaglavlje u kojem je deklarisana getpid() funkcija */",{"fg":1}],["                                                                        ",{}]],"2":[["  1 ",{"fg":3}],["#include",{"fg":5}],["<sys/types.h>",{"fg":2}],[" ",{}],["/* zaglavlje u kojem je definisan tip pid_t →  unsigned int */",{"fg":1}],["                                                               ",{}]],"3":[["  0 ",{"fg":3}],["int",{"fg":4,"bold":true}],[" main()                                                                                                                                         ",{}]],"4":[["  1 ",{"fg":3}],["{                                                                                                                                                  ",{}]],"5":[["  2 ",{"fg":3}],["  pid_t childPID;                                                                                                                                  ",{}]],"6":[["  3 ",{"fg":3}],["  pid_t mojPID = getpid();                                                                                                                         ",{}]],"7":[["  4 ",{"fg":3}],["  childPID = fork();                                                                                                                               ",{}]],"8":[["  5 ",{"fg":3}],["  ",{}],["if",{"fg":4,"bold":true}],["(childPID == -",{}],["1",{"fg":2}],[")                                                                                                                               ",{}]],"9":[["  6 ",{"fg":3}],["  {                                                                                                                                                ",{}]],"10":[["  7 ",{"fg":3}],["    error(",{}],["\"Kreiranje procesa neuspjesno! :(\"",{"fg":2}],[");                                                                                                     ",{}]],"11":[["  8 ",{"fg":3}],["    ",{}],["return",{"fg":4,"bold":true}],[" ",{}],["1",{"fg":2}],[";                                                                                                                                      ",{}]],"12":[["  9 ",{"fg":3}],["  }                                                                                                                                                ",{}]],"13":[[" 10 ",{"fg":3}],["  ",{}],["if",{"fg":4,"bold":true}],[" (childPID == ",{}],["0",{"fg":2}],[")                                                                                                                               ",{}]],"14":[[" 11 ",{"fg":3}],["    printf(",{}],["\"Child proces sa PID = ",{"fg":2}],["%ld",{"fg":1,"bold":true}],[", ID = ",{"fg":2}],["%ld\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[", (",{}],["long",{"fg":4,"bold":true}],[")getpid(), (",{}],["long",{"fg":4,"bold":true}],[")mojPID);                                                                 ",{}]],"15":[[" 12 ",{"fg":3}],["  ",{}],["else",{"fg":4,"bold":true}],["                                                                                                                                             ",{}]],"16":[[" 13 ",{"fg":3}],["    printf(",{}],["\"Parent proces sa PID = ",{"fg":2}],["%ld",{"fg":1,"bold":true}],[", ID = ",{"fg":2}],["%ld\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[", (",{}],["long",{"fg":4,"bold":true}],[")getpid(), (",{}],["long",{"fg":4,"bold":true}],[")mojPID);                                                                ",{}]],"17":[[" 14 ",{"fg":3}],["  ",{}],["return",{"fg":4,"bold":true}],[" ",{}],["0",{"fg":2}],[";                                                                                                                                        ",{}]],"18":[[" 15 ",{"fg":3}],["}                                                                                                                                                  ",{}]],"39":[["\"primjer_1.c\" 19L, 559C                                                                                                              4,1           All ",{}]]},"cursor":{"y":3}}],[0.725376,{"lines":{"0":[["  4 ",{"fg":3}],["#include",{"fg":5}],["<stdio.h>",{"fg":2}],["                                                                                                                                  ",{}]],"1":[["  3 ",{"fg":3}],["#include",{"fg":5}],["<unistd.h>",{"fg":2}],[" ",{}],["/* zaglavlje u kojem je deklarisana getpid() funkcija */",{"fg":1}],["                                                                        ",{}]],"2":[["  2 ",{"fg":3}],["#include",{"fg":5}],["<sys/types.h>",{"fg":2}],[" ",{}],["/* zaglavlje u kojem je definisan tip pid_t →  unsigned int */",{"fg":1}],["                                                               ",{}]],"3":[["  1 ",{"fg":3}],["int",{"fg":4,"bold":true}],[" main()                                                                                                                                         ",{}]],"4":[["  0 ",{"fg":3}],["{",{"bg":6}],["                                                                                                                                                  ",{}]],"5":[["  1 ",{"fg":3}],["  pid_t childPID;                                                                                                                                  ",{}]],"6":[["  2 ",{"fg":3}],["  pid_t mojPID = getpid();                                                                                                                         ",{}]],"7":[["  3 ",{"fg":3}],["  childPID = fork();                                                                                                                               ",{}]],"8":[["  4 ",{"fg":3}],["  ",{}],["if",{"fg":4,"bold":true}],["(childPID == -",{}],["1",{"fg":2}],[")                                                                                                                               ",{}]],"9":[["  5 ",{"fg":3}],["  {                                                                                                                                                ",{}]],"10":[["  6 ",{"fg":3}],["    error(",{}],["\"Kreiranje procesa neuspjesno! :(\"",{"fg":2}],[");                                                                                                     ",{}]],"11":[["  7 ",{"fg":3}],["    ",{}],["return",{"fg":4,"bold":true}],[" ",{}],["1",{"fg":2}],[";                                                                                                                                      ",{}]],"12":[["  8 ",{"fg":3}],["  }                                                                                                                                                ",{}]],"13":[["  9 ",{"fg":3}],["  ",{}],["if",{"fg":4,"bold":true}],[" (childPID == ",{}],["0",{"fg":2}],[")                                                                                                                               ",{}]],"14":[[" 10 ",{"fg":3}],["    printf(",{}],["\"Child proces sa PID = ",{"fg":2}],["%ld",{"fg":1,"bold":true}],[", ID = ",{"fg":2}],["%ld\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[", (",{}],["long",{"fg":4,"bold":true}],[")getpid(), (",{}],["long",{"fg":4,"bold":true}],[")mojPID);                                                                 ",{}]],"15":[[" 11 ",{"fg":3}],["  ",{}],["else",{"fg":4,"bold":true}],["                                                                                                                                             ",{}]],"16":[[" 12 ",{"fg":3}],["    printf(",{}],["\"Parent proces sa PID = ",{"fg":2}],["%ld",{"fg":1,"bold":true}],[", ID = ",{"fg":2}],["%ld\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[", (",{}],["long",{"fg":4,"bold":true}],[")getpid(), (",{}],["long",{"fg":4,"bold":true}],[")mojPID);                                                                ",{}]],"17":[[" 13 ",{"fg":3}],["  ",{}],["return",{"fg":4,"bold":true}],[" ",{}],["0",{"fg":2}],[";                                                                                                                                        ",{}]],"18":[[" 14 ",{"fg":3}],["}",{"bg":6}],["                                                                                                                                                  ",{}]],"39":[["\"primjer_1.c\" 19L, 559C                                                                                                              5,1           All ",{}]]},"cursor":{"y":4}}],[0.235365,{"lines":{"0":[["  5 ",{"fg":3}],["#include",{"fg":5}],["<stdio.h>",{"fg":2}],["                                                                                                                                  ",{}]],"1":[["  4 ",{"fg":3}],["#include",{"fg":5}],["<unistd.h>",{"fg":2}],[" ",{}],["/* zaglavlje u kojem je deklarisana getpid() funkcija */",{"fg":1}],["                                                                        ",{}]],"2":[["  3 ",{"fg":3}],["#include",{"fg":5}],["<sys/types.h>",{"fg":2}],[" ",{}],["/* zaglavlje u kojem je definisan tip pid_t →  unsigned int */",{"fg":1}],["                                                               ",{}]],"3":[["  2 ",{"fg":3}],["int",{"fg":4,"bold":true}],[" main()                                                                                                                                         ",{}]],"4":[["  1 ",{"fg":3}],["{                                                                                                                                                  ",{}]],"5":[["  0 ",{"fg":3}],["  pid_t childPID;                                                                                                                                  ",{}]],"6":[["  1 ",{"fg":3}],["  pid_t mojPID = getpid();                                                                                                                         ",{}]],"7":[["  2 ",{"fg":3}],["  childPID = fork();                                                                                                                               ",{}]],"8":[["  3 ",{"fg":3}],["  ",{}],["if",{"fg":4,"bold":true}],["(childPID == -",{}],["1",{"fg":2}],[")                                                                                                                               ",{}]],"9":[["  4 ",{"fg":3}],["  {                                                                                                                                                ",{}]],"10":[["  5 ",{"fg":3}],["    error(",{}],["\"Kreiranje procesa neuspjesno! :(\"",{"fg":2}],[");                                                                                                     ",{}]],"11":[["  6 ",{"fg":3}],["    ",{}],["return",{"fg":4,"bold":true}],[" ",{}],["1",{"fg":2}],[";                                                                                                                                      ",{}]],"12":[["  7 ",{"fg":3}],["  }                                                                                                                                                ",{}]],"13":[["  8 ",{"fg":3}],["  ",{}],["if",{"fg":4,"bold":true}],[" (childPID == ",{}],["0",{"fg":2}],[")                                                                                                                               ",{}]],"14":[["  9 ",{"fg":3}],["    printf(",{}],["\"Child proces sa PID = ",{"fg":2}],["%ld",{"fg":1,"bold":true}],[", ID = ",{"fg":2}],["%ld\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[", (",{}],["long",{"fg":4,"bold":true}],[")getpid(), (",{}],["long",{"fg":4,"bold":true}],[")mojPID);                                                                 ",{}]],"15":[[" 10 ",{"fg":3}],["  ",{}],["else",{"fg":4,"bold":true}],["                                                                                                                                             ",{}]],"16":[[" 11 ",{"fg":3}],["    printf(",{}],["\"Parent proces sa PID = ",{"fg":2}],["%ld",{"fg":1,"bold":true}],[", ID = ",{"fg":2}],["%ld\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[", (",{}],["long",{"fg":4,"bold":true}],[")getpid(), (",{}],["long",{"fg":4,"bold":true}],[")mojPID);                                                                ",{}]],"17":[[" 12 ",{"fg":3}],["  ",{}],["return",{"fg":4,"bold":true}],[" ",{}],["0",{"fg":2}],[";                                                                                                                                        ",{}]],"18":[[" 13 ",{"fg":3}],["}                                                                                                                                                  ",{}]],"39":[["\"primjer_1.c\" 19L, 559C                                                                                                              6,1           All ",{}]]},"cursor":{"y":5}}],[3.015634,{"lines":{"0":[["  6 ",{"fg":3}],["#include",{"fg":5}],["<stdio.h>",{"fg":2}],["                                                                                                                                  ",{}]],"1":[["  5 ",{"fg":3}],["#include",{"fg":5}],["<unistd.h>",{"fg":2}],[" ",{}],["/* zaglavlje u kojem je deklarisana getpid() funkcija */",{"fg":1}],["                                                                        ",{}]],"2":[["  4 ",{"fg":3}],["#include",{"fg":5}],["<sys/types.h>",{"fg":2}],[" ",{}],["/* zaglavlje u kojem je definisan tip pid_t →  unsigned int */",{"fg":1}],["                                                               ",{}]],"3":[["  3 ",{"fg":3}],["int",{"fg":4,"bold":true}],[" main()                                                                                                                                         ",{}]],"4":[["  2 ",{"fg":3}],["{                                                                                                                                                  ",{}]],"5":[["  1 ",{"fg":3}],["  pid_t childPID;                                                                                                                                  ",{}]],"6":[["  0 ",{"fg":3}],["  pid_t mojPID = getpid();                                                                                                                         ",{}]],"7":[["  1 ",{"fg":3}],["  childPID = fork();                                                                                                                               ",{}]],"8":[["  2 ",{"fg":3}],["  ",{}],["if",{"fg":4,"bold":true}],["(childPID == -",{}],["1",{"fg":2}],[")                                                                                                                               ",{}]],"9":[["  3 ",{"fg":3}],["  {                                                                                                                                                ",{}]],"10":[["  4 ",{"fg":3}],["    error(",{}],["\"Kreiranje procesa neuspjesno! :(\"",{"fg":2}],[");                                                                                                     ",{}]],"11":[["  5 ",{"fg":3}],["    ",{}],["return",{"fg":4,"bold":true}],[" ",{}],["1",{"fg":2}],[";                                                                                                                                      ",{}]]},"cursor":{"y":6}}],[0.003751,{"lines":{"12":[["  6 ",{"fg":3}],["  }                                                                                                                                                ",{}]],"13":[["  7 ",{"fg":3}],["  ",{}],["if",{"fg":4,"bold":true}],[" (childPID == ",{}],["0",{"fg":2}],[")                                                                                                                               ",{}]],"14":[["  8 ",{"fg":3}],["    printf(",{}],["\"Child proces sa PID = ",{"fg":2}],["%ld",{"fg":1,"bold":true}],[", ID = ",{"fg":2}],["%ld\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[", (",{}],["long",{"fg":4,"bold":true}],[")getpid(), (",{}],["long",{"fg":4,"bold":true}],[")mojPID);                                                                 ",{}]],"15":[["  9 ",{"fg":3}],["  ",{}],["else",{"fg":4,"bold":true}],["                                                                                                                                             ",{}]],"16":[[" 10 ",{"fg":3}],["    printf(",{}],["\"Parent proces sa PID = ",{"fg":2}],["%ld",{"fg":1,"bold":true}],[", ID = ",{"fg":2}],["%ld\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[", (",{}],["long",{"fg":4,"bold":true}],[")getpid(), (",{}],["long",{"fg":4,"bold":true}],[")mojPID);                                                                ",{}]],"17":[[" 11 ",{"fg":3}],["  ",{}],["return",{"fg":4,"bold":true}],[" ",{}],["0",{"fg":2}],[";                                                                                                                                        ",{}]],"18":[[" 12 ",{"fg":3}],["}                                                                                                                                                  ",{}]],"39":[["\"primjer_1.c\" 19L, 559C                                                                                                              7,1           All ",{}]]}}],[0.516394,{"lines":{"0":[["  7 ",{"fg":3}],["#include",{"fg":5}],["<stdio.h>",{"fg":2}],["                                                                                                                                  ",{}]],"1":[["  6 ",{"fg":3}],["#include",{"fg":5}],["<unistd.h>",{"fg":2}],[" ",{}],["/* zaglavlje u kojem je deklarisana getpid() funkcija */",{"fg":1}],["                                                                        ",{}]],"2":[["  5 ",{"fg":3}],["#include",{"fg":5}],["<sys/types.h>",{"fg":2}],[" ",{}],["/* zaglavlje u kojem je definisan tip pid_t →  unsigned int */",{"fg":1}],["                                                               ",{}]],"3":[["  4 ",{"fg":3}],["int",{"fg":4,"bold":true}],[" main()                                                                                                                                         ",{}]],"4":[["  3 ",{"fg":3}],["{                                                                                                                                                  ",{}]],"5":[["  2 ",{"fg":3}],["  pid_t childPID;                                                                                                                                  ",{}]],"6":[["  1 ",{"fg":3}],["  pid_t mojPID = getpid();                                                                                                                         ",{}]],"7":[["  0 ",{"fg":3}],["  childPID = fork();                                                                                                                               ",{}]],"8":[["  1 ",{"fg":3}],["  ",{}],["if",{"fg":4,"bold":true}],["(childPID == -",{}],["1",{"fg":2}],[")                                                                                                                               ",{}]],"9":[["  2 ",{"fg":3}],["  {                                                                                                                                                ",{}]],"10":[["  3 ",{"fg":3}],["    error(",{}],["\"Kreiranje procesa neuspjesno! :(\"",{"fg":2}],[");                                                                                                     ",{}]],"11":[["  4 ",{"fg":3}],["    ",{}],["return",{"fg":4,"bold":true}],[" ",{}],["1",{"fg":2}],[";                                                                                                                                      ",{}]],"12":[["  5 ",{"fg":3}],["  }                                                                                                                                                ",{}]],"13":[["  6 ",{"fg":3}],["  ",{}],["if",{"fg":4,"bold":true}],[" (childPID == ",{}],["0",{"fg":2}],[")                                                                                                                               ",{}]],"14":[["  7 ",{"fg":3}],["    printf(",{}],["\"Child proces sa PID = ",{"fg":2}],["%ld",{"fg":1,"bold":true}],[", ID = ",{"fg":2}],["%ld\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[", (",{}],["long",{"fg":4,"bold":true}],[")getpid(), (",{}],["long",{"fg":4,"bold":true}],[")mojPID);                                                                 ",{}]],"15":[["  8 ",{"fg":3}],["  ",{}],["else",{"fg":4,"bold":true}],["                                                                                                                                             ",{}]],"16":[["  9 ",{"fg":3}],["    printf(",{}],["\"Parent proces sa PID = ",{"fg":2}],["%ld",{"fg":1,"bold":true}],[", ID = ",{"fg":2}],["%ld\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[", (",{}],["long",{"fg":4,"bold":true}],[")getpid(), (",{}],["long",{"fg":4,"bold":true}],[")mojPID);                                                                ",{}]],"17":[[" 10 ",{"fg":3}],["  ",{}],["return",{"fg":4,"bold":true}],[" ",{}],["0",{"fg":2}],[";                                                                                                                                        ",{}]],"18":[[" 11 ",{"fg":3}],["}                                                                                                                                                  ",{}]],"39":[["\"primjer_1.c\" 19L, 559C                                                                                                              8,1           All ",{}]]},"cursor":{"y":7}}],[1.591814,{"lines":{"7":[["  0 ",{"fg":3}],[" ",{}],[" childPID = fork(); ",{"inverse":true}],["                                                                                                                              ",{}]],"39":[["-- VISUAL LINE --",{"bold":true}],["                                                                                                                    8,1           All ",{}]]}}],[4.689497,{"lines":{"7":[["  0 ",{"fg":3}],["  childPID = fork();                                                                                                                               ",{}]],"39":[[":                                                                                                                                                      ",{}]]},"cursor":{"x":1,"y":39}}],[0.487904,{"lines":{"39":[[":s                                                                                                                                                     ",{}]]},"cursor":{"x":2}}],[0.640325,{"lines":{"39":[[":                                                                                                                                                      ",{}]]},"cursor":{"x":1}}],[0.143596,{"lines":{"39":[[":v                                                                                                                                                     ",{}]]},"cursor":{"x":2}}],[0.162068,{"lines":{"39":[[":vs                                                                                                                                                    ",{}]]},"cursor":{"x":3}}],[0.203598,{"lines":{"39":[[":vsp                                                                                                                                                   ",{}]]},"cursor":{"x":4}}],[0.5741270000000001,{"cursor":{"x":0}}],[0.011159,{"lines":{"0":[["  7 ",{"fg":3}],["#include",{"fg":5}],["<stdio.h>",{"fg":2}],["                                                      ",{}],["|",{"inverse":true}],["  7 ",{"fg":3}],["#include",{"fg":5}],["<stdio.h>",{"fg":2}],["                                                      ",{}]],"1":[["  6 ",{"fg":3}],["#include",{"fg":5}],["<unistd.h>",{"fg":2}],[" ",{}],["/* zaglavlje u kojem je deklarisana getpid() funkcij",{"fg":1}],["|",{"inverse":true}],["  6 ",{"fg":3}],["#include",{"fg":5}],["<unistd.h>",{"fg":2}],[" ",{}],["/* zaglavlje u kojem je deklarisana getpid() funkcij",{"fg":1}]],"2":[["    ",{"fg":3}],["a */",{"fg":1}],["                                                                   ",{}],["|",{"inverse":true}],["    ",{"fg":3}],["a */",{"fg":1}],["                                                                   ",{}]],"3":[["  5 ",{"fg":3}],["#include",{"fg":5}],["<sys/types.h>",{"fg":2}],[" ",{}],["/* zaglavlje u kojem je definisan tip pid_t →  un",{"fg":1}],["|",{"inverse":true}],["  5 ",{"fg":3}],["#include",{"fg":5}],["<sys/types.h>",{"fg":2}],[" ",{}],["/* zaglavlje u kojem je definisan tip pid_t →  un",{"fg":1}]],"4":[["    ",{"fg":3}],["signed int */",{"fg":1}],["                                                          ",{}],["|",{"inverse":true}],["    ",{"fg":3}],["signed int */",{"fg":1}],["                                                          ",{}]],"5":[["  4 ",{"fg":3}],["int",{"fg":4,"bold":true}],[" main()                                                             ",{}],["|",{"inverse":true}],["  4 ",{"fg":3}],["int",{"fg":4,"bold":true}],[" main()                                                             ",{}]],"6":[["  3 ",{"fg":3}],["{                                                                      ",{}],["|",{"inverse":true}],["  3 ",{"fg":3}],["{                                                                      ",{}]],"7":[["  2 ",{"fg":3}],["  pid_t childPID;                                                      ",{}],["|",{"inverse":true}],["  2 ",{"fg":3}],["  pid_t childPID;                                                      ",{}]],"8":[["  1 ",{"fg":3}],["  pid_t mojPID = getpid();                                             ",{}],["|",{"inverse":true}],["  1 ",{"fg":3}],["  pid_t mojPID = getpid();                                             ",{}]],"9":[["  0 ",{"fg":3}],["  childPID = fork();                                                   ",{}],["|",{"inverse":true}],["  0 ",{"fg":3}],["  childPID = fork();                                                   ",{}]],"10":[["  1 ",{"fg":3}],["  ",{}],["if",{"fg":4,"bold":true}],["(childPID == -",{}],["1",{"fg":2}],[")                                                   ",{}],["|",{"inverse":true}],["  1 ",{"fg":3}],["  ",{}],["if",{"fg":4,"bold":true}],["(childPID == -",{}],["1",{"fg":2}],[")                                                   ",{}]],"11":[["  2 ",{"fg":3}],["  {                                                                    ",{}],["|",{"inverse":true}],["  2 ",{"fg":3}],["  {                                                                    ",{}]],"12":[["  3 ",{"fg":3}],["    error(",{}],["\"Kreiranje procesa neuspjesno! :(\"",{"fg":2}],[");                         ",{}],["|",{"inverse":true}],["  3 ",{"fg":3}],["    error(",{}],["\"Kreiranje procesa neuspjesno! :(\"",{"fg":2}],[");                         ",{}]],"13":[["  4 ",{"fg":3}],["    ",{}],["return",{"fg":4,"bold":true}],[" ",{}],["1",{"fg":2}],[";                                                          ",{}],["|",{"inverse":true}],["  4 ",{"fg":3}],["    ",{}],["return",{"fg":4,"bold":true}],[" ",{}],["1",{"fg":2}],[";                                                          ",{}]],"14":[["  5 ",{"fg":3}],["  }                                                                    ",{}],["|",{"inverse":true}],["  5 ",{"fg":3}],["  }                                                                    ",{}]],"15":[["  6 ",{"fg":3}],["  ",{}],["if",{"fg":4,"bold":true}],[" (childPID == ",{}],["0",{"fg":2}],[")                                                   ",{}],["|",{"inverse":true}],["  6 ",{"fg":3}],["  ",{}],["if",{"fg":4,"bold":true}],[" (childPID == ",{}],["0",{"fg":2}],[")                                                   ",{}]],"16":[["  7 ",{"fg":3}],["    printf(",{}],["\"Child proces sa PID = ",{"fg":2}],["%ld",{"fg":1,"bold":true}],[", ID = ",{"fg":2}],["%ld\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[", (",{}],["long",{"fg":4,"bold":true}],[")getpid(), (",{}],["lo",{"fg":4,"bold":true}],["|",{"inverse":true}],["  7 ",{"fg":3}],["    printf(",{}],["\"Child proces sa PID = ",{"fg":2}],["%ld",{"fg":1,"bold":true}],[", ID = ",{"fg":2}],["%ld\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[", (",{}],["long",{"fg":4,"bold":true}],[")getpid(), (",{}],["lo",{"fg":4,"bold":true}]],"17":[["    ",{"fg":3}],["ng",{"fg":4,"bold":true}],[")mojPID);                                                            ",{}],["|",{"inverse":true}],["    ",{"fg":3}],["ng",{"fg":4,"bold":true}],[")mojPID);                                                            ",{}]],"18":[["  8 ",{"fg":3}],["  ",{}],["else",{"fg":4,"bold":true}],["                                                                 ",{}],["|",{"inverse":true}],["  8 ",{"fg":3}],["  ",{}],["else",{"fg":4,"bold":true}],["                                                                 ",{}]],"19":[["  9 ",{"fg":3}],["    printf(",{}],["\"Parent proces sa PID = ",{"fg":2}],["%ld",{"fg":1,"bold":true}],[", ID = ",{"fg":2}],["%ld\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[", (",{}],["long",{"fg":4,"bold":true}],[")getpid(), (",{}],["l",{"fg":4,"bold":true}],["|",{"inverse":true}],["  9 ",{"fg":3}],["    printf(",{}],["\"Parent proces sa PID = ",{"fg":2}],["%ld",{"fg":1,"bold":true}],[", ID = ",{"fg":2}],["%ld\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[", (",{}],["long",{"fg":4,"bold":true}],[")getpid(), (",{}],["l",{"fg":4,"bold":true}]],"20":[["    ",{"fg":3}],["ong",{"fg":4,"bold":true}],[")mojPID);                                                           ",{}],["|",{"inverse":true}],["    ",{"fg":3}],["ong",{"fg":4,"bold":true}],[")mojPID);                                                           ",{}]],"21":[[" 10 ",{"fg":3}],["  ",{}],["return",{"fg":4,"bold":true}],[" ",{}],["0",{"fg":2}],[";                                                            ",{}],["|",{"inverse":true}],[" 10 ",{"fg":3}],["  ",{}],["return",{"fg":4,"bold":true}],[" ",{}],["0",{"fg":2}],[";                                                            ",{}]],"22":[[" 11 ",{"fg":3}],["}                                                                      ",{}],["|",{"inverse":true}],[" 11 ",{"fg":3}],["}                                                                      ",{}]],"23":[["~                                                                          ",{"fg":4,"bold":true}],["|",{"inverse":true}],["~                                                                          ",{"fg":4,"bold":true}]],"24":[["~                                                                          ",{"fg":4,"bold":true}],["|",{"inverse":true}],["~                                                                          ",{"fg":4,"bold":true}]],"25":[["~                                                                          ",{"fg":4,"bold":true}],["|",{"inverse":true}],["~                                                                          ",{"fg":4,"bold":true}]],"26":[["~                                                                          ",{"fg":4,"bold":true}],["|",{"inverse":true}],["~                                                                          ",{"fg":4,"bold":true}]],"27":[["~                                                                          ",{"fg":4,"bold":true}],["|",{"inverse":true}],["~                                                                          ",{"fg":4,"bold":true}]],"28":[["~                                                                          ",{"fg":4,"bold":true}],["|",{"inverse":true}],["~                                                                          ",{"fg":4,"bold":true}]],"29":[["~                                                                          ",{"fg":4,"bold":true}],["|",{"inverse":true}],["~                                                                          ",{"fg":4,"bold":true}]],"30":[["~                                                                          ",{"fg":4,"bold":true}],["|",{"inverse":true}],["~                                                                          ",{"fg":4,"bold":true}]],"31":[["~                                                                          ",{"fg":4,"bold":true}],["|",{"inverse":true}],["~                                                                          ",{"fg":4,"bold":true}]],"32":[["~                                                                          ",{"fg":4,"bold":true}],["|",{"inverse":true}],["~                                                                          ",{"fg":4,"bold":true}]],"33":[["~                                                                          ",{"fg":4,"bold":true}],["|",{"inverse":true}],["~                                                                          ",{"fg":4,"bold":true}]],"34":[["~                                                                          ",{"fg":4,"bold":true}],["|",{"inverse":true}],["~                                                                          ",{"fg":4,"bold":true}]],"35":[["~                                                                          ",{"fg":4,"bold":true}],["|",{"inverse":true}],["~                                                                          ",{"fg":4,"bold":true}]],"36":[["~                                                                          ",{"fg":4,"bold":true}],["|",{"inverse":true}],["~                                                                          ",{"fg":4,"bold":true}]],"37":[["~                                                                          ",{"fg":4,"bold":true}],["|",{"inverse":true}],["~                                                                          ",{"fg":4,"bold":true}]],"38":[["primjer_1.c                                              8,1            All ",{"fg":3,"bg":4,"bold":true}],["primjer_1.c                                              8,1            All",{"fg":0,"bg":4}]]},"cursor":{"x":4,"y":9}}],[1.081068,{"lines":{"9":[["  0 ",{"fg":3}],[" ",{}],[" childPID = fork(); ",{"inverse":true}],["                                                  ",{}],["|",{"inverse":true}],["  0 ",{"fg":3}],["  childPID = fork(); ",{"inverse":true}],["                                                  ",{}]],"39":[["-- VISUAL LINE --",{"bold":true}],["                                                                                                                                      ",{}]]}}],[7.357949,{"lines":{"9":[["  0 ",{"fg":3}],["  childPID = fork();                                                   ",{}],["|",{"inverse":true}],["  0 ",{"fg":3}],["  childPID = fork();                                                   ",{}]],"39":[["                                                                                                                                                       ",{}]]}}],[0.095636,{"lines":{"38":[["primjer_1.c                                              8,21           All ",{"fg":3,"bg":4,"bold":true}],["primjer_1.c                                              8,1            All",{"fg":0,"bg":4}]],"39":[["-- INSERT --",{"bold":true}],["                                                                                                                                           ",{}]]},"cursor":{"x":24}}],[1.494393,{"lines":{"38":[["primjer_1.c [+]                                          8,22           All ",{"fg":3,"bg":4,"bold":true}],["primjer_1.c [+]                                          8,1            All",{"fg":0,"bg":4}]]},"cursor":{"x":25}}],[0.295401,{"lines":{"9":[["  0 ",{"fg":3}],["  childPID = fork(); /                                                 ",{}],["|",{"inverse":true}],["  0 ",{"fg":3}],["  childPID = fork(); /                                                 ",{}]],"38":[["primjer_1.c [+]                                          8,23           All ",{"fg":3,"bg":4,"bold":true}],["primjer_1.c [+]                                          8,1            All",{"fg":0,"bg":4}]]},"cursor":{"x":26}}],[0.1912,{"lines":{"9":[["  0 ",{"fg":3}],["  childPID = fork(); ",{}],["//",{"fg":1}],["                                                ",{}],["|",{"inverse":true}],["  0 ",{"fg":3}],["  childPID = fork(); ",{}],["//",{"fg":1}],["                                                ",{}]],"38":[["primjer_1.c [+]                                          8,24           All ",{"fg":3,"bg":4,"bold":true}],["primjer_1.c [+]                                          8,1            All",{"fg":0,"bg":4}]]},"cursor":{"x":27}}],[0.363007,{"lines":{"9":[["  0 ",{"fg":3}],["  childPID = fork(); ",{}],["// ",{"fg":1}],["                                               ",{}],["|",{"inverse":true}],["  0 ",{"fg":3}],["  childPID = fork(); ",{}],["// ",{"fg":1}],["                                               ",{}]],"38":[["primjer_1.c [+]                                          8,25           All ",{"fg":3,"bg":4,"bold":true}],["primjer_1.c [+]                                          8,1            All",{"fg":0,"bg":4}]]},"cursor":{"x":28}}],[1.208125,{"lines":{"9":[["  0 ",{"fg":3}],["  childPID = fork(); ",{}],["// f",{"fg":1}],["                                              ",{}],["|",{"inverse":true}],["  0 ",{"fg":3}],["  childPID = fork(); ",{}],["// f",{"fg":1}],["                                              ",{}]],"38":[["primjer_1.c [+]                                          8,26           All ",{"fg":3,"bg":4,"bold":true}],["primjer_1.c [+]                                          8,1            All",{"fg":0,"bg":4}]]},"cursor":{"x":29}}],[0.323434,{"lines":{"9":[["  0 ",{"fg":3}],["  childPID = fork(); ",{}],["// f-",{"fg":1}],["                                             ",{}],["|",{"inverse":true}],["  0 ",{"fg":3}],["  childPID = fork(); ",{}],["// f-",{"fg":1}],["                                             ",{}]],"38":[["primjer_1.c [+]                                          8,27           All ",{"fg":3,"bg":4,"bold":true}],["primjer_1.c [+]                                          8,1            All",{"fg":0,"bg":4}]]},"cursor":{"x":30}}],[0.280793,{"lines":{"9":[["  0 ",{"fg":3}],["  childPID = fork(); ",{}],["// f-j",{"fg":1}],["                                            ",{}],["|",{"inverse":true}],["  0 ",{"fg":3}],["  childPID = fork(); ",{}],["// f-j",{"fg":1}],["                                            ",{}]],"38":[["primjer_1.c [+]                                          8,28           All ",{"fg":3,"bg":4,"bold":true}],["primjer_1.c [+]                                          8,1            All",{"fg":0,"bg":4}]]},"cursor":{"x":31}}],[0.096126,{"lines":{"9":[["  0 ",{"fg":3}],["  childPID = fork(); ",{}],["// f-ja",{"fg":1}],["                                           ",{}],["|",{"inverse":true}],["  0 ",{"fg":3}],["  childPID = fork(); ",{}],["// f-ja",{"fg":1}],["                                           ",{}]],"38":[["primjer_1.c [+]                                          8,29           All ",{"fg":3,"bg":4,"bold":true}],["primjer_1.c [+]                                          8,1            All",{"fg":0,"bg":4}]]},"cursor":{"x":32}}],[0.241148,{"lines":{"9":[["  0 ",{"fg":3}],["  childPID = fork(); ",{}],["// f-ja ",{"fg":1}],["                                          ",{}],["|",{"inverse":true}],["  0 ",{"fg":3}],["  childPID = fork(); ",{}],["// f-ja ",{"fg":1}],["                                          ",{}]],"38":[["primjer_1.c [+]                                          8,30           All ",{"fg":3,"bg":4,"bold":true}],["primjer_1.c [+]                                          8,1            All",{"fg":0,"bg":4}]]},"cursor":{"x":33}}],[0.284532,{"lines":{"9":[["  0 ",{"fg":3}],["  childPID = fork(); ",{}],["// f-ja f",{"fg":1}],["                                         ",{}],["|",{"inverse":true}],["  0 ",{"fg":3}],["  childPID = fork(); ",{}],["// f-ja f",{"fg":1}],["                                         ",{}]],"38":[["primjer_1.c [+]                                          8,31           All ",{"fg":3,"bg":4,"bold":true}],["primjer_1.c [+]                                          8,1            All",{"fg":0,"bg":4}]]},"cursor":{"x":34}}],[0.075807,{"lines":{"9":[["  0 ",{"fg":3}],["  childPID = fork(); ",{}],["// f-ja fo",{"fg":1}],["                                        ",{}],["|",{"inverse":true}],["  0 ",{"fg":3}],["  childPID = fork(); ",{}],["// f-ja fo",{"fg":1}],["                                        ",{}]],"38":[["primjer_1.c [+]                                          8,32           All ",{"fg":3,"bg":4,"bold":true}],["primjer_1.c [+]                                          8,1            All",{"fg":0,"bg":4}]]},"cursor":{"x":35}}],[0.290079,{"lines":{"9":[["  0 ",{"fg":3}],["  childPID = fork(); ",{}],["// f-ja for",{"fg":1}],["                                       ",{}],["|",{"inverse":true}],["  0 ",{"fg":3}],["  childPID = fork(); ",{}],["// f-ja for",{"fg":1}],["                                       ",{}]],"38":[["primjer_1.c [+]                                          8,33           All ",{"fg":3,"bg":4,"bold":true}],["primjer_1.c [+]                                          8,1            All",{"fg":0,"bg":4}]]},"cursor":{"x":36}}],[0.203243,{"lines":{"9":[["  0 ",{"fg":3}],["  childPID = fork(); ",{}],["// f-ja fork",{"fg":1}],["                                      ",{}],["|",{"inverse":true}],["  0 ",{"fg":3}],["  childPID = fork(); ",{}],["// f-ja fork",{"fg":1}],["                                      ",{}]],"38":[["primjer_1.c [+]                                          8,34           All ",{"fg":3,"bg":4,"bold":true}],["primjer_1.c [+]                                          8,1            All",{"fg":0,"bg":4}]]},"cursor":{"x":37}}],[0.432539,{"lines":{"9":[["  0 ",{"fg":3}],["  childPID = fork(); ",{}],["// f-ja fork ",{"fg":1}],["                                     ",{}],["|",{"inverse":true}],["  0 ",{"fg":3}],["  childPID = fork(); ",{}],["// f-ja fork ",{"fg":1}],["                                     ",{}]],"38":[["primjer_1.c [+]                                          8,35           All ",{"fg":3,"bg":4,"bold":true}],["primjer_1.c [+]                                          8,1            All",{"fg":0,"bg":4}]]},"cursor":{"x":38}}],[3.742285,{"lines":{"9":[["  0 ",{"fg":3}],["  childPID = fork(); ",{}],["// f-ja fork v",{"fg":1}],["                                    ",{}],["|",{"inverse":true}],["  0 ",{"fg":3}],["  childPID = fork(); ",{}],["// f-ja fork v",{"fg":1}],["                                    ",{}]],"38":[["primjer_1.c [+]                                          8,36           All ",{"fg":3,"bg":4,"bold":true}],["primjer_1.c [+]                                          8,1            All",{"fg":0,"bg":4}]]},"cursor":{"x":39}}],[0.469861,{"lines":{"9":[["  0 ",{"fg":3}],["  childPID = fork(); ",{}],["// f-ja fork vr",{"fg":1}],["                                   ",{}],["|",{"inverse":true}],["  0 ",{"fg":3}],["  childPID = fork(); ",{}],["// f-ja fork vr",{"fg":1}],["                                   ",{}]],"38":[["primjer_1.c [+]                                          8,37           All ",{"fg":3,"bg":4,"bold":true}],["primjer_1.c [+]                                          8,1            All",{"fg":0,"bg":4}]]},"cursor":{"x":40}}],[0.144766,{"lines":{"9":[["  0 ",{"fg":3}],["  childPID = fork(); ",{}],["// f-ja fork vra",{"fg":1}],["                                  ",{}],["|",{"inverse":true}],["  0 ",{"fg":3}],["  childPID = fork(); ",{}],["// f-ja fork vra",{"fg":1}],["                                  ",{}]],"38":[["primjer_1.c [+]                                          8,38           All ",{"fg":3,"bg":4,"bold":true}],["primjer_1.c [+]                                          8,1            All",{"fg":0,"bg":4}]]},"cursor":{"x":41}}],[0.348448,{"lines":{"9":[["  0 ",{"fg":3}],["  childPID = fork(); ",{}],["// f-ja fork vrac",{"fg":1}],["                                 ",{}],["|",{"inverse":true}],["  0 ",{"fg":3}],["  childPID = fork(); ",{}],["// f-ja fork vrac",{"fg":1}],["                                 ",{}]],"38":[["primjer_1.c [+]                                          8,39           All ",{"fg":3,"bg":4,"bold":true}],["primjer_1.c [+]                                          8,1            All",{"fg":0,"bg":4}]]},"cursor":{"x":42}}],[0.127583,{"lines":{"9":[["  0 ",{"fg":3}],["  childPID = fork(); ",{}],["// f-ja fork vraca",{"fg":1}],["                                ",{}],["|",{"inverse":true}],["  0 ",{"fg":3}],["  childPID = fork(); ",{}],["// f-ja fork vraca",{"fg":1}],["                                ",{}]],"38":[["primjer_1.c [+]                                          8,40           All ",{"fg":3,"bg":4,"bold":true}],["primjer_1.c [+]                                          8,1            All",{"fg":0,"bg":4}]]},"cursor":{"x":43}}],[0.433901,{"lines":{"9":[["  0 ",{"fg":3}],["  childPID = fork(); ",{}],["// f-ja fork vraca ",{"fg":1}],["                               ",{}],["|",{"inverse":true}],["  0 ",{"fg":3}],["  childPID = fork(); ",{}],["// f-ja fork vraca ",{"fg":1}],["                               ",{}]],"38":[["primjer_1.c [+]                                          8,41           All ",{"fg":3,"bg":4,"bold":true}],["primjer_1.c [+]                                          8,1            All",{"fg":0,"bg":4}]]},"cursor":{"x":44}}],[0.059498,{"lines":{"40":[["[0] 0:vim*                                                                                                     \"nermin-SATELLITE-C55-A\" 19:04 10-Okt-14",{"fg":0,"bg":2}]]}}],[0.693929,{"lines":{"9":[["  0 ",{"fg":3}],["  childPID = fork(); ",{}],["// f-ja fork vraca -",{"fg":1}],["                              ",{}],["|",{"inverse":true}],["  0 ",{"fg":3}],["  childPID = fork(); ",{}],["// f-ja fork vraca -",{"fg":1}],["                              ",{}]],"38":[["primjer_1.c [+]                                          8,42           All ",{"fg":3,"bg":4,"bold":true}],["primjer_1.c [+]                                          8,1            All",{"fg":0,"bg":4}]]},"cursor":{"x":45}}],[0.196896,{"lines":{"9":[["  0 ",{"fg":3}],["  childPID = fork(); ",{}],["// f-ja fork vraca -1",{"fg":1}],["                             ",{}],["|",{"inverse":true}],["  0 ",{"fg":3}],["  childPID = fork(); ",{}],["// f-ja fork vraca -1",{"fg":1}],["                             ",{}]],"38":[["primjer_1.c [+]                                          8,43           All ",{"fg":3,"bg":4,"bold":true}],["primjer_1.c [+]                                          8,1            All",{"fg":0,"bg":4}]]},"cursor":{"x":46}}],[0.361002,{"lines":{"9":[["  0 ",{"fg":3}],["  childPID = fork(); ",{}],["// f-ja fork vraca -1 ",{"fg":1}],["                            ",{}],["|",{"inverse":true}],["  0 ",{"fg":3}],["  childPID = fork(); ",{}],["// f-ja fork vraca -1 ",{"fg":1}],["                            ",{}]],"38":[["primjer_1.c [+]                                          8,44           All ",{"fg":3,"bg":4,"bold":true}],["primjer_1.c [+]                                          8,1            All",{"fg":0,"bg":4}]]},"cursor":{"x":47}}],[1.272351,{"lines":{"9":[["  0 ",{"fg":3}],["  childPID = fork(); ",{}],["// f-ja fork vraca -1 u",{"fg":1}],["                           ",{}],["|",{"inverse":true}],["  0 ",{"fg":3}],["  childPID = fork(); ",{}],["// f-ja fork vraca -1 u",{"fg":1}],["                           ",{}]],"38":[["primjer_1.c [+]                                          8,45           All ",{"fg":3,"bg":4,"bold":true}],["primjer_1.c [+]                                          8,1            All",{"fg":0,"bg":4}]]},"cursor":{"x":48}}],[0.30069,{"lines":{"9":[["  0 ",{"fg":3}],["  childPID = fork(); ",{}],["// f-ja fork vraca -1 uk",{"fg":1}],["                          ",{}],["|",{"inverse":true}],["  0 ",{"fg":3}],["  childPID = fork(); ",{}],["// f-ja fork vraca -1 uk",{"fg":1}],["                          ",{}]],"38":[["primjer_1.c [+]                                          8,46           All ",{"fg":3,"bg":4,"bold":true}],["primjer_1.c [+]                                          8,1            All",{"fg":0,"bg":4}]]},"cursor":{"x":49}}],[0.25738,{"lines":{"9":[["  0 ",{"fg":3}],["  childPID = fork(); ",{}],["// f-ja fork vraca -1 uko",{"fg":1}],["                         ",{}],["|",{"inverse":true}],["  0 ",{"fg":3}],["  childPID = fork(); ",{}],["// f-ja fork vraca -1 uko",{"fg":1}],["                         ",{}]],"38":[["primjer_1.c [+]                                          8,47           All ",{"fg":3,"bg":4,"bold":true}],["primjer_1.c [+]                                          8,1            All",{"fg":0,"bg":4}]]},"cursor":{"x":50}}],[0.230942,{"lines":{"9":[["  0 ",{"fg":3}],["  childPID = fork(); ",{}],["// f-ja fork vraca -1 ukol",{"fg":1}],["                        ",{}],["|",{"inverse":true}],["  0 ",{"fg":3}],["  childPID = fork(); ",{}],["// f-ja fork vraca -1 ukol",{"fg":1}],["                        ",{}]],"38":[["primjer_1.c [+]                                          8,48           All ",{"fg":3,"bg":4,"bold":true}],["primjer_1.c [+]                                          8,1            All",{"fg":0,"bg":4}]]},"cursor":{"x":51}}],[0.237445,{"lines":{"9":[["  0 ",{"fg":3}],["  childPID = fork(); ",{}],["// f-ja fork vraca -1 ukoli",{"fg":1}],["                       ",{}],["|",{"inverse":true}],["  0 ",{"fg":3}],["  childPID = fork(); ",{}],["// f-ja fork vraca -1 ukoli",{"fg":1}],["                       ",{}]],"38":[["primjer_1.c [+]                                          8,49           All ",{"fg":3,"bg":4,"bold":true}],["primjer_1.c [+]                                          8,1            All",{"fg":0,"bg":4}]]},"cursor":{"x":52}}],[0.205685,{"lines":{"9":[["  0 ",{"fg":3}],["  childPID = fork(); ",{}],["// f-ja fork vraca -1 ukolik",{"fg":1}],["                      ",{}],["|",{"inverse":true}],["  0 ",{"fg":3}],["  childPID = fork(); ",{}],["// f-ja fork vraca -1 ukolik",{"fg":1}],["                      ",{}]],"38":[["primjer_1.c [+]                                          8,50           All ",{"fg":3,"bg":4,"bold":true}],["primjer_1.c [+]                                          8,1            All",{"fg":0,"bg":4}]]},"cursor":{"x":53}}],[0.209554,{"lines":{"9":[["  0 ",{"fg":3}],["  childPID = fork(); ",{}],["// f-ja fork vraca -1 ukoliko",{"fg":1}],["                     ",{}],["|",{"inverse":true}],["  0 ",{"fg":3}],["  childPID = fork(); ",{}],["// f-ja fork vraca -1 ukoliko",{"fg":1}],["                     ",{}]],"38":[["primjer_1.c [+]                                          8,51           All ",{"fg":3,"bg":4,"bold":true}],["primjer_1.c [+]                                          8,1            All",{"fg":0,"bg":4}]]},"cursor":{"x":54}}],[0.19095,{"lines":{"9":[["  0 ",{"fg":3}],["  childPID = fork(); ",{}],["// f-ja fork vraca -1 ukoliko ",{"fg":1}],["                    ",{}],["|",{"inverse":true}],["  0 ",{"fg":3}],["  childPID = fork(); ",{}],["// f-ja fork vraca -1 ukoliko ",{"fg":1}],["                    ",{}]],"38":[["primjer_1.c [+]                                          8,52           All ",{"fg":3,"bg":4,"bold":true}],["primjer_1.c [+]                                          8,1            All",{"fg":0,"bg":4}]]},"cursor":{"x":55}}],[0.238042,{"lines":{"9":[["  0 ",{"fg":3}],["  childPID = fork(); ",{}],["// f-ja fork vraca -1 ukoliko j",{"fg":1}],["                   ",{}],["|",{"inverse":true}],["  0 ",{"fg":3}],["  childPID = fork(); ",{}],["// f-ja fork vraca -1 ukoliko j",{"fg":1}],["                   ",{}]],"38":[["primjer_1.c [+]                                          8,53           All ",{"fg":3,"bg":4,"bold":true}],["primjer_1.c [+]                                          8,1            All",{"fg":0,"bg":4}]]},"cursor":{"x":56}}],[0.140604,{"lines":{"9":[["  0 ",{"fg":3}],["  childPID = fork(); ",{}],["// f-ja fork vraca -1 ukoliko je",{"fg":1}],["                  ",{}],["|",{"inverse":true}],["  0 ",{"fg":3}],["  childPID = fork(); ",{}],["// f-ja fork vraca -1 ukoliko je",{"fg":1}],["                  ",{}]],"38":[["primjer_1.c [+]                                          8,54           All ",{"fg":3,"bg":4,"bold":true}],["primjer_1.c [+]                                          8,1            All",{"fg":0,"bg":4}]]},"cursor":{"x":57}}],[0.253434,{"lines":{"9":[["  0 ",{"fg":3}],["  childPID = fork(); ",{}],["// f-ja fork vraca -1 ukoliko je ",{"fg":1}],["                 ",{}],["|",{"inverse":true}],["  0 ",{"fg":3}],["  childPID = fork(); ",{}],["// f-ja fork vraca -1 ukoliko je ",{"fg":1}],["                 ",{}]],"38":[["primjer_1.c [+]                                          8,55           All ",{"fg":3,"bg":4,"bold":true}],["primjer_1.c [+]                                          8,1            All",{"fg":0,"bg":4}]]},"cursor":{"x":58}}],[0.841318,{"lines":{"9":[["  0 ",{"fg":3}],["  childPID = fork(); ",{}],["// f-ja fork vraca -1 ukoliko je g",{"fg":1}],["                ",{}],["|",{"inverse":true}],["  0 ",{"fg":3}],["  childPID = fork(); ",{}],["// f-ja fork vraca -1 ukoliko je g",{"fg":1}],["                ",{}]],"38":[["primjer_1.c [+]                                          8,56           All ",{"fg":3,"bg":4,"bold":true}],["primjer_1.c [+]                                          8,1            All",{"fg":0,"bg":4}]]},"cursor":{"x":59}}],[0.313178,{"lines":{"9":[["  0 ",{"fg":3}],["  childPID = fork(); ",{}],["// f-ja fork vraca -1 ukoliko je gr",{"fg":1}],["               ",{}],["|",{"inverse":true}],["  0 ",{"fg":3}],["  childPID = fork(); ",{}],["// f-ja fork vraca -1 ukoliko je gr",{"fg":1}],["               ",{}]],"38":[["primjer_1.c [+]                                          8,57           All ",{"fg":3,"bg":4,"bold":true}],["primjer_1.c [+]                                          8,1            All",{"fg":0,"bg":4}]]},"cursor":{"x":60}}],[0.152866,{"lines":{"9":[["  0 ",{"fg":3}],["  childPID = fork(); ",{}],["// f-ja fork vraca -1 ukoliko je gre",{"fg":1}],["              ",{}],["|",{"inverse":true}],["  0 ",{"fg":3}],["  childPID = fork(); ",{}],["// f-ja fork vraca -1 ukoliko je gre",{"fg":1}],["              ",{}]],"38":[["primjer_1.c [+]                                          8,58           All ",{"fg":3,"bg":4,"bold":true}],["primjer_1.c [+]                                          8,1            All",{"fg":0,"bg":4}]]},"cursor":{"x":61}}],[0.260806,{"lines":{"9":[["  0 ",{"fg":3}],["  childPID = fork(); ",{}],["// f-ja fork vraca -1 ukoliko je gres",{"fg":1}],["             ",{}],["|",{"inverse":true}],["  0 ",{"fg":3}],["  childPID = fork(); ",{}],["// f-ja fork vraca -1 ukoliko je gres",{"fg":1}],["             ",{}]],"38":[["primjer_1.c [+]                                          8,59           All ",{"fg":3,"bg":4,"bold":true}],["primjer_1.c [+]                                          8,1            All",{"fg":0,"bg":4}]]},"cursor":{"x":62}}],[0.161898,{"lines":{"9":[["  0 ",{"fg":3}],["  childPID = fork(); ",{}],["// f-ja fork vraca -1 ukoliko je gresk",{"fg":1}],["            ",{}],["|",{"inverse":true}],["  0 ",{"fg":3}],["  childPID = fork(); ",{}],["// f-ja fork vraca -1 ukoliko je gresk",{"fg":1}],["            ",{}]],"38":[["primjer_1.c [+]                                          8,60           All ",{"fg":3,"bg":4,"bold":true}],["primjer_1.c [+]                                          8,1            All",{"fg":0,"bg":4}]]},"cursor":{"x":63}}],[0.056883,{"lines":{"9":[["  0 ",{"fg":3}],["  childPID = fork(); ",{}],["// f-ja fork vraca -1 ukoliko je greska",{"fg":1}],["           ",{}],["|",{"inverse":true}],["  0 ",{"fg":3}],["  childPID = fork(); ",{}],["// f-ja fork vraca -1 ukoliko je greska",{"fg":1}],["           ",{}]],"38":[["primjer_1.c [+]                                          8,61           All ",{"fg":3,"bg":4,"bold":true}],["primjer_1.c [+]                                          8,1            All",{"fg":0,"bg":4}]]},"cursor":{"x":64}}],[0.744054,{"lines":{"38":[["primjer_1.c [+]                                          8,60           All ",{"fg":3,"bg":4,"bold":true}],["primjer_1.c [+]                                          8,1            All",{"fg":0,"bg":4}]]},"cursor":{"x":63}}],[0.495635,{"lines":{"38":[["primjer_1.c [+]                                          8,59           All ",{"fg":3,"bg":4,"bold":true}],["primjer_1.c [+]                                          8,1            All",{"fg":0,"bg":4}]]},"cursor":{"x":62}}],[0.035649,{"lines":{"38":[["primjer_1.c [+]                                          8,58           All ",{"fg":3,"bg":4,"bold":true}],["primjer_1.c [+]                                          8,1            All",{"fg":0,"bg":4}]]},"cursor":{"x":61}}],[0.028528,{"lines":{"38":[["primjer_1.c [+]                                          8,57           All ",{"fg":3,"bg":4,"bold":true}],["primjer_1.c [+]                                          8,1            All",{"fg":0,"bg":4}]]},"cursor":{"x":60}}],[0.030691,{"lines":{"38":[["primjer_1.c [+]                                          8,56           All ",{"fg":3,"bg":4,"bold":true}],["primjer_1.c [+]                                          8,1            All",{"fg":0,"bg":4}]]},"cursor":{"x":59}}],[0.030237,{"lines":{"38":[["primjer_1.c [+]                                          8,55           All ",{"fg":3,"bg":4,"bold":true}],["primjer_1.c [+]                                          8,1            All",{"fg":0,"bg":4}]]},"cursor":{"x":58}}],[0.02777,{"lines":{"38":[["primjer_1.c [+]                                          8,54           All ",{"fg":3,"bg":4,"bold":true}],["primjer_1.c [+]                                          8,1            All",{"fg":0,"bg":4}]]},"cursor":{"x":57}}],[0.032474,{"lines":{"38":[["primjer_1.c [+]                                          8,53           All ",{"fg":3,"bg":4,"bold":true}],["primjer_1.c [+]                                          8,1            All",{"fg":0,"bg":4}]]},"cursor":{"x":56}}],[0.032713,{"lines":{"38":[["primjer_1.c [+]                                          8,52           All ",{"fg":3,"bg":4,"bold":true}],["primjer_1.c [+]                                          8,1            All",{"fg":0,"bg":4}]]},"cursor":{"x":55}}],[0.036191,{"lines":{"38":[["primjer_1.c [+]                                          8,51           All ",{"fg":3,"bg":4,"bold":true}],["primjer_1.c [+]                                          8,1            All",{"fg":0,"bg":4}]]},"cursor":{"x":54}}],[0.031878,{"lines":{"38":[["primjer_1.c [+]                                          8,50           All ",{"fg":3,"bg":4,"bold":true}],["primjer_1.c [+]                                          8,1            All",{"fg":0,"bg":4}]]},"cursor":{"x":53}}],[0.033256,{"lines":{"38":[["primjer_1.c [+]                                          8,49           All ",{"fg":3,"bg":4,"bold":true}],["primjer_1.c [+]                                          8,1            All",{"fg":0,"bg":4}]]},"cursor":{"x":52}}],[0.0295,{"lines":{"38":[["primjer_1.c [+]                                          8,48           All ",{"fg":3,"bg":4,"bold":true}],["primjer_1.c [+]                                          8,1            All",{"fg":0,"bg":4}]]},"cursor":{"x":51}}],[0.032957,{"lines":{"38":[["primjer_1.c [+]                                          8,47           All ",{"fg":3,"bg":4,"bold":true}],["primjer_1.c [+]                                          8,1            All",{"fg":0,"bg":4}]]},"cursor":{"x":50}}],[0.032757,{"lines":{"38":[["primjer_1.c [+]                                          8,46           All ",{"fg":3,"bg":4,"bold":true}],["primjer_1.c [+]                                          8,1            All",{"fg":0,"bg":4}]]},"cursor":{"x":49}}],[0.028638,{"lines":{"38":[["primjer_1.c [+]                                          8,45           All ",{"fg":3,"bg":4,"bold":true}],["primjer_1.c [+]                                          8,1            All",{"fg":0,"bg":4}]]},"cursor":{"x":48}}],[0.034861,{"lines":{"38":[["primjer_1.c [+]                                          8,44           All ",{"fg":3,"bg":4,"bold":true}],["primjer_1.c [+]                                          8,1            All",{"fg":0,"bg":4}]]},"cursor":{"x":47}}],[0.024556,{"lines":{"38":[["primjer_1.c [+]                                          8,43           All ",{"fg":3,"bg":4,"bold":true}],["primjer_1.c [+]                                          8,1            All",{"fg":0,"bg":4}]]},"cursor":{"x":46}}],[0.035052,{"lines":{"38":[["primjer_1.c [+]                                          8,42           All ",{"fg":3,"bg":4,"bold":true}],["primjer_1.c [+]                                          8,1            All",{"fg":0,"bg":4}]]},"cursor":{"x":45}}],[0.028107,{"lines":{"38":[["primjer_1.c [+]                                          8,41           All ",{"fg":3,"bg":4,"bold":true}],["primjer_1.c [+]                                          8,1            All",{"fg":0,"bg":4}]]},"cursor":{"x":44}}],[0.032277,{"lines":{"38":[["primjer_1.c [+]                                          8,40           All ",{"fg":3,"bg":4,"bold":true}],["primjer_1.c [+]                                          8,1            All",{"fg":0,"bg":4}]]},"cursor":{"x":43}}],[0.028099,{"lines":{"38":[["primjer_1.c [+]                                          8,39           All ",{"fg":3,"bg":4,"bold":true}],["primjer_1.c [+]                                          8,1            All",{"fg":0,"bg":4}]]},"cursor":{"x":42}}],[0.032539,{"lines":{"38":[["primjer_1.c [+]                                          8,38           All ",{"fg":3,"bg":4,"bold":true}],["primjer_1.c [+]                                          8,1            All",{"fg":0,"bg":4}]]},"cursor":{"x":41}}],[0.03195,{"lines":{"38":[["primjer_1.c [+]                                          8,37           All ",{"fg":3,"bg":4,"bold":true}],["primjer_1.c [+]                                          8,1            All",{"fg":0,"bg":4}]]},"cursor":{"x":40}}],[0.028353,{"lines":{"38":[["primjer_1.c [+]                                          8,36           All ",{"fg":3,"bg":4,"bold":true}],["primjer_1.c [+]                                          8,1            All",{"fg":0,"bg":4}]]},"cursor":{"x":39}}],[0.035512,{"lines":{"38":[["primjer_1.c [+]                                          8,35           All ",{"fg":3,"bg":4,"bold":true}],["primjer_1.c [+]                                          8,1            All",{"fg":0,"bg":4}]]},"cursor":{"x":38}}],[0.026266,{"lines":{"38":[["primjer_1.c [+]                                          8,34           All ",{"fg":3,"bg":4,"bold":true}],["primjer_1.c [+]                                          8,1            All",{"fg":0,"bg":4}]]},"cursor":{"x":37}}],[0.034121,{"lines":{"38":[["primjer_1.c [+]                                          8,33           All ",{"fg":3,"bg":4,"bold":true}],["primjer_1.c [+]                                          8,1            All",{"fg":0,"bg":4}]]},"cursor":{"x":36}}],[0.028409,{"lines":{"38":[["primjer_1.c [+]                                          8,32           All ",{"fg":3,"bg":4,"bold":true}],["primjer_1.c [+]                                          8,1            All",{"fg":0,"bg":4}]]},"cursor":{"x":35}}],[0.034518,{"lines":{"38":[["primjer_1.c [+]                                          8,31           All ",{"fg":3,"bg":4,"bold":true}],["primjer_1.c [+]                                          8,1            All",{"fg":0,"bg":4}]]},"cursor":{"x":34}}],[0.029378,{"lines":{"38":[["primjer_1.c [+]                                          8,30           All ",{"fg":3,"bg":4,"bold":true}],["primjer_1.c [+]                                          8,1            All",{"fg":0,"bg":4}]]},"cursor":{"x":33}}],[0.033055,{"lines":{"38":[["primjer_1.c [+]                                          8,29           All ",{"fg":3,"bg":4,"bold":true}],["primjer_1.c [+]                                          8,1            All",{"fg":0,"bg":4}]]},"cursor":{"x":32}}],[0.031966,{"lines":{"38":[["primjer_1.c [+]                                          8,28           All ",{"fg":3,"bg":4,"bold":true}],["primjer_1.c [+]                                          8,1            All",{"fg":0,"bg":4}]]},"cursor":{"x":31}}],[0.030989,{"lines":{"38":[["primjer_1.c [+]                                          8,27           All ",{"fg":3,"bg":4,"bold":true}],["primjer_1.c [+]                                          8,1            All",{"fg":0,"bg":4}]]},"cursor":{"x":30}}],[0.029941,{"lines":{"38":[["primjer_1.c [+]                                          8,26           All ",{"fg":3,"bg":4,"bold":true}],["primjer_1.c [+]                                          8,1            All",{"fg":0,"bg":4}]]},"cursor":{"x":29}}],[0.145539,{"lines":{"38":[["primjer_1.c [+]                                          8,25           All ",{"fg":3,"bg":4,"bold":true}],["primjer_1.c [+]                                          8,1            All",{"fg":0,"bg":4}]]},"cursor":{"x":28}}],[0.167316,{"lines":{"38":[["primjer_1.c [+]                                          8,24           All ",{"fg":3,"bg":4,"bold":true}],["primjer_1.c [+]                                          8,1            All",{"fg":0,"bg":4}]]},"cursor":{"x":27}}],[0.159143,{"lines":{"38":[["primjer_1.c [+]                                          8,23           All ",{"fg":3,"bg":4,"bold":true}],["primjer_1.c [+]                                          8,1            All",{"fg":0,"bg":4}]]},"cursor":{"x":26}}],[0.160665,{"lines":{"38":[["primjer_1.c [+]                                          8,22           All ",{"fg":3,"bg":4,"bold":true}],["primjer_1.c [+]                                          8,1            All",{"fg":0,"bg":4}]]},"cursor":{"x":25}}],[1.013825,{"lines":{"0":[["  8 ",{"fg":3}],["#include",{"fg":5}],["<stdio.h>",{"fg":2}],["                                                      ",{}],["|",{"inverse":true}],["  7 ",{"fg":3}],["#include",{"fg":5}],["<stdio.h>",{"fg":2}],["                                                      ",{}]],"1":[["  7 ",{"fg":3}],["#include",{"fg":5}],["<unistd.h>",{"fg":2}],[" ",{}],["/* zaglavlje u kojem je deklarisana getpid() funkcij",{"fg":1}],["|",{"inverse":true}],["  6 ",{"fg":3}],["#include",{"fg":5}],["<unistd.h>",{"fg":2}],[" ",{}],["/* zaglavlje u kojem je deklarisana getpid() funkcij",{"fg":1}]],"3":[["  6 ",{"fg":3}],["#include",{"fg":5}],["<sys/types.h>",{"fg":2}],[" ",{}],["/* zaglavlje u kojem je definisan tip pid_t →  un",{"fg":1}],["|",{"inverse":true}],["  5 ",{"fg":3}],["#include",{"fg":5}],["<sys/types.h>",{"fg":2}],[" ",{}],["/* zaglavlje u kojem je definisan tip pid_t →  un",{"fg":1}]],"5":[["  5 ",{"fg":3}],["int",{"fg":4,"bold":true}],[" main()                                                             ",{}],["|",{"inverse":true}],["  4 ",{"fg":3}],["int",{"fg":4,"bold":true}],[" main()                                                             ",{}]],"6":[["  4 ",{"fg":3}],["{                                                                      ",{}],["|",{"inverse":true}],["  3 ",{"fg":3}],["{                                                                      ",{}]],"7":[["  3 ",{"fg":3}],["  pid_t childPID;                                                      ",{}],["|",{"inverse":true}],["  2 ",{"fg":3}],["  pid_t childPID;                                                      ",{}]],"8":[["  2 ",{"fg":3}],["  pid_t mojPID = getpid();                                             ",{}],["|",{"inverse":true}],["  1 ",{"fg":3}],["  pid_t mojPID = getpid();                                             ",{}]],"10":[["                                                                           ",{}],["|",{"inverse":true}],["  1 ",{"fg":3}],["  ",{}],["if",{"fg":4,"bold":true}],["(childPID == -",{}],["1",{"fg":2}],[")                                                   ",{}]],"11":[["  1 ",{"fg":3}],["  ",{}],["if",{"fg":4,"bold":true}],["(childPID == -",{}],["1",{"fg":2}],[")                                                   ",{}],["|",{"inverse":true}],["  2 ",{"fg":3}],["  {                                                                    ",{}]],"12":[["  2 ",{"fg":3}],["  {                                                                    ",{}],["|",{"inverse":true}],["  3 ",{"fg":3}],["    error(",{}],["\"Kreiranje procesa neuspjesno! :(\"",{"fg":2}],[");                         ",{}]],"13":[["  3 ",{"fg":3}],["    error(",{}],["\"Kreiranje procesa neuspjesno! :(\"",{"fg":2}],[");                         ",{}],["|",{"inverse":true}],["  4 ",{"fg":3}],["    ",{}],["return",{"fg":4,"bold":true}],[" ",{}],["1",{"fg":2}],[";                                                          ",{}]],"14":[["  4 ",{"fg":3}],["    ",{}],["return",{"fg":4,"bold":true}],[" ",{}],["1",{"fg":2}],[";                                                          ",{}],["|",{"inverse":true}],["  5 ",{"fg":3}],["  }                                                                    ",{}]],"15":[["  5 ",{"fg":3}],["  }                                                                    ",{}],["|",{"inverse":true}],["  6 ",{"fg":3}],["  ",{}],["if",{"fg":4,"bold":true}],[" (childPID == ",{}],["0",{"fg":2}],[")                                                   ",{}]],"16":[["  6 ",{"fg":3}],["  ",{}],["if",{"fg":4,"bold":true}],[" (childPID == ",{}],["0",{"fg":2}],[")                                                   ",{}],["|",{"inverse":true}],["  7 ",{"fg":3}],["    printf(",{}],["\"Child proces sa PID = ",{"fg":2}],["%ld",{"fg":1,"bold":true}],[", ID = ",{"fg":2}],["%ld\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[", (",{}],["long",{"fg":4,"bold":true}],[")getpid(), (",{}],["lo",{"fg":4,"bold":true}]],"17":[["  7 ",{"fg":3}],["    printf(",{}],["\"Child proces sa PID = ",{"fg":2}],["%ld",{"fg":1,"bold":true}],[", ID = ",{"fg":2}],["%ld\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[", (",{}],["long",{"fg":4,"bold":true}],[")getpid(), (",{}],["lo",{"fg":4,"bold":true}],["|",{"inverse":true}],["    ",{"fg":3}],["ng",{"fg":4,"bold":true}],[")mojPID);                                                            ",{}]],"18":[["    ",{"fg":3}],["ng",{"fg":4,"bold":true}],[")mojPID);                                                            ",{}],["|",{"inverse":true}],["  8 ",{"fg":3}],["  ",{}],["else",{"fg":4,"bold":true}],["                                                                 ",{}]]},"cursor":{"x":1,"y":19}}],[0.008867,{"lines":{"9":[["  1 ",{"fg":3}],["  childPID = fork();                                                   ",{}],["|",{"inverse":true}],["  0 ",{"fg":3}],["  childPID = fork();                                                   ",{}]],"10":[["  0 ",{"fg":3}],["  ",{}],["// f-ja fork vraca -1 ukoliko je greska",{"fg":1}],["                              ",{}],["|",{"inverse":true}],["  1 ",{"fg":3}],["  ",{}],["// f-ja fork vraca -1 ukoliko je greska",{"fg":1}],["                              ",{}]],"11":[["  1 ",{"fg":3}],["  ",{}],["if",{"fg":4,"bold":true}],["(childPID == -",{}],["1",{"fg":2}],[")                                                   ",{}],["|",{"inverse":true}],["  2 ",{"fg":3}],["  ",{}],["if",{"fg":4,"bold":true}],["(childPID == -",{}],["1",{"fg":2}],[")                                                   ",{}]],"12":[["  2 ",{"fg":3}],["  {                                                                    ",{}],["|",{"inverse":true}],["  3 ",{"fg":3}],["  {                                                                    ",{}]],"13":[["  3 ",{"fg":3}],["    error(",{}],["\"Kreiranje procesa neuspjesno! :(\"",{"fg":2}],[");                         ",{}],["|",{"inverse":true}],["  4 ",{"fg":3}],["    error(",{}],["\"Kreiranje procesa neuspjesno! :(\"",{"fg":2}],[");                         ",{}]],"14":[["  4 ",{"fg":3}],["    ",{}],["return",{"fg":4,"bold":true}],[" ",{}],["1",{"fg":2}],[";                                                          ",{}],["|",{"inverse":true}],["  5 ",{"fg":3}],["    ",{}],["return",{"fg":4,"bold":true}],[" ",{}],["1",{"fg":2}],[";                                                          ",{}]],"15":[["  5 ",{"fg":3}],["  }                                                                    ",{}],["|",{"inverse":true}],["  6 ",{"fg":3}],["  }                                                                    ",{}]],"16":[["  6 ",{"fg":3}],["  ",{}],["if",{"fg":4,"bold":true}],[" (childPID == ",{}],["0",{"fg":2}],[")                                                   ",{}],["|",{"inverse":true}],["  7 ",{"fg":3}],["  ",{}],["if",{"fg":4,"bold":true}],[" (childPID == ",{}],["0",{"fg":2}],[")                                                   ",{}]],"17":[["  7 ",{"fg":3}],["    printf(",{}],["\"Child proces sa PID = ",{"fg":2}],["%ld",{"fg":1,"bold":true}],[", ID = ",{"fg":2}],["%ld\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[", (",{}],["long",{"fg":4,"bold":true}],[")getpid(), (",{}],["lo",{"fg":4,"bold":true}],["|",{"inverse":true}],["  8 ",{"fg":3}],["    printf(",{}],["\"Child proces sa PID = ",{"fg":2}],["%ld",{"fg":1,"bold":true}],[", ID = ",{"fg":2}],["%ld\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[", (",{}],["long",{"fg":4,"bold":true}],[")getpid(), (",{}],["lo",{"fg":4,"bold":true}]],"18":[["    ",{"fg":3}],["ng",{"fg":4,"bold":true}],[")mojPID);                                                            ",{}],["|",{"inverse":true}],["    ",{"fg":3}],["ng",{"fg":4,"bold":true}],[")mojPID);                                                            ",{}]],"19":[["  8 ",{"fg":3}],["  ",{}],["else",{"fg":4,"bold":true}],["                                                                 ",{}],["|",{"inverse":true}],["  9 ",{"fg":3}],["  ",{}],["else",{"fg":4,"bold":true}],["                                                                 ",{}]],"20":[["  9 ",{"fg":3}],["    printf(",{}],["\"Parent proces sa PID = ",{"fg":2}],["%ld",{"fg":1,"bold":true}],[", ID = ",{"fg":2}],["%ld\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[", (",{}],["long",{"fg":4,"bold":true}],[")getpid(), (",{}],["l",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 10 ",{"fg":3}],["    printf(",{}],["\"Parent proces sa PID = ",{"fg":2}],["%ld",{"fg":1,"bold":true}],[", ID = ",{"fg":2}],["%ld\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[", (",{}],["long",{"fg":4,"bold":true}],[")getpid(), (",{}],["l",{"fg":4,"bold":true}]],"21":[["    ",{"fg":3}],["ong",{"fg":4,"bold":true}],[")mojPID);                                                           ",{}],["|",{"inverse":true}],["    ",{"fg":3}],["ong",{"fg":4,"bold":true}],[")mojPID);                                                           ",{}]],"22":[[" 10 ",{"fg":3}],["  ",{}],["return",{"fg":4,"bold":true}],[" ",{}],["0",{"fg":2}],[";                                                            ",{}],["|",{"inverse":true}],[" 11 ",{"fg":3}],["  ",{}],["return",{"fg":4,"bold":true}],[" ",{}],["0",{"fg":2}],[";                                                            ",{}]],"23":[[" 11 ",{"fg":3}],["}                                                                      ",{}],["|",{"inverse":true}],[" 12 ",{"fg":3}],["}                                                                      ",{}]],"38":[["primjer_1.c [+]                                          9,3            All ",{"fg":3,"bg":4,"bold":true}],["primjer_1.c [+]                                          8,1            All",{"fg":0,"bg":4}]]},"cursor":{"x":6,"y":10}}],[2.407971,{"lines":{"0":[["  9 ",{"fg":3}],["#include",{"fg":5}],["<stdio.h>",{"fg":2}],["                                                      ",{}],["|",{"inverse":true}],["  7 ",{"fg":3}],["#include",{"fg":5}],["<stdio.h>",{"fg":2}],["                                                      ",{}]],"1":[["  8 ",{"fg":3}],["#include",{"fg":5}],["<unistd.h>",{"fg":2}],[" ",{}],["/* zaglavlje u kojem je deklarisana getpid() funkcij",{"fg":1}],["|",{"inverse":true}],["  6 ",{"fg":3}],["#include",{"fg":5}],["<unistd.h>",{"fg":2}],[" ",{}],["/* zaglavlje u kojem je deklarisana getpid() funkcij",{"fg":1}]],"3":[["  7 ",{"fg":3}],["#include",{"fg":5}],["<sys/types.h>",{"fg":2}],[" ",{}],["/* zaglavlje u kojem je definisan tip pid_t →  un",{"fg":1}],["|",{"inverse":true}],["  5 ",{"fg":3}],["#include",{"fg":5}],["<sys/types.h>",{"fg":2}],[" ",{}],["/* zaglavlje u kojem je definisan tip pid_t →  un",{"fg":1}]],"5":[["  6 ",{"fg":3}],["int",{"fg":4,"bold":true}],[" main()                                                             ",{}],["|",{"inverse":true}],["  4 ",{"fg":3}],["int",{"fg":4,"bold":true}],[" main()                                                             ",{}]],"6":[["  5 ",{"fg":3}],["{                                                                      ",{}],["|",{"inverse":true}],["  3 ",{"fg":3}],["{                                                                      ",{}]],"7":[["  4 ",{"fg":3}],["  pid_t childPID;                                                      ",{}],["|",{"inverse":true}],["  2 ",{"fg":3}],["  pid_t childPID;                                                      ",{}]],"8":[["  3 ",{"fg":3}],["  pid_t mojPID = getpid();                                             ",{}],["|",{"inverse":true}],["  1 ",{"fg":3}],["  pid_t mojPID = getpid();                                             ",{}]],"9":[["  2 ",{"fg":3}],["  childPID = fork();                                                   ",{}],["|",{"inverse":true}],["  0 ",{"fg":3}],["  childPID = fork();                                                   ",{}]],"10":[["  1 ",{"fg":3}],["  ",{}],["// f-ja fork vraca -1 ukoliko je greska",{"fg":1}],["                              ",{}],["|",{"inverse":true}],["  1 ",{"fg":3}],["  ",{}],["// f-ja fork vraca -1 ukoliko je greska",{"fg":1}],["                              ",{}]],"11":[["                                                                           ",{}],["|",{"inverse":true}],["  2 ",{"fg":3}],["  ",{}],["if",{"fg":4,"bold":true}],["(childPID == -",{}],["1",{"fg":2}],[")                                                   ",{}]],"12":[["  1 ",{"fg":3}],["  ",{}],["if",{"fg":4,"bold":true}],["(childPID == -",{}],["1",{"fg":2}],[")                                                   ",{}],["|",{"inverse":true}],["  3 ",{"fg":3}],["  {                                                                    ",{}]],"13":[["  2 ",{"fg":3}],["  {                                                                    ",{}],["|",{"inverse":true}],["  4 ",{"fg":3}],["    error(",{}],["\"Kreiranje procesa neuspjesno! :(\"",{"fg":2}],[");                         ",{}]],"14":[["  3 ",{"fg":3}],["    error(",{}],["\"Kreiranje procesa neuspjesno! :(\"",{"fg":2}],[");                         ",{}],["|",{"inverse":true}],["  5 ",{"fg":3}],["    ",{}],["return",{"fg":4,"bold":true}],[" ",{}],["1",{"fg":2}],[";                                                          ",{}]],"15":[["  4 ",{"fg":3}],["    ",{}],["return",{"fg":4,"bold":true}],[" ",{}],["1",{"fg":2}],[";                                                          ",{}],["|",{"inverse":true}],["  6 ",{"fg":3}],["  }                                                                    ",{}]],"16":[["  5 ",{"fg":3}],["  }                                                                    ",{}],["|",{"inverse":true}],["  7 ",{"fg":3}],["  ",{}],["if",{"fg":4,"bold":true}],[" (childPID == ",{}],["0",{"fg":2}],[")                                                   ",{}]],"17":[["  6 ",{"fg":3}],["  ",{}],["if",{"fg":4,"bold":true}],[" (childPID == ",{}],["0",{"fg":2}],[")                                                   ",{}],["|",{"inverse":true}],["  8 ",{"fg":3}],["    printf(",{}],["\"Child proces sa PID = ",{"fg":2}],["%ld",{"fg":1,"bold":true}],[", ID = ",{"fg":2}],["%ld\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[", (",{}],["long",{"fg":4,"bold":true}],[")getpid(), (",{}],["lo",{"fg":4,"bold":true}]],"18":[["  7 ",{"fg":3}],["    printf(",{}],["\"Child proces sa PID = ",{"fg":2}],["%ld",{"fg":1,"bold":true}],[", ID = ",{"fg":2}],["%ld\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[", (",{}],["long",{"fg":4,"bold":true}],[")getpid(), (",{}],["lo",{"fg":4,"bold":true}],["|",{"inverse":true}],["    ",{"fg":3}],["ng",{"fg":4,"bold":true}],[")mojPID);                                                            ",{}]],"19":[["    ",{"fg":3}],["ng",{"fg":4,"bold":true}],[")mojPID                                                              ",{}],["|",{"inverse":true}],["  9 ",{"fg":3}],["  ",{}],["else",{"fg":4,"bold":true}],["                                                                 ",{}]],"38":[["primjer_1.c [+]                                          9,2            All ",{"fg":3,"bg":4,"bold":true}],["primjer_1.c [+]                                          8,1            All",{"fg":0,"bg":4}]]},"cursor":{"x":13,"y":19}}],[0.000225,{"lines":{"11":[["  0 ",{"fg":3}],["  ",{}],["// ",{"fg":1}],["                                                                  ",{}],["|",{"inverse":true}],["  2 ",{"fg":3}],["  ",{}],["// ",{"fg":1}],["                                                                  ",{}]],"12":[["  1 ",{"fg":3}],["  ",{}],["if",{"fg":4,"bold":true}],["(childPID == -",{}],["1",{"fg":2}],[")                                                   ",{}],["|",{"inverse":true}],["  3 ",{"fg":3}],["  ",{}],["if",{"fg":4,"bold":true}],["(childPID == -",{}],["1",{"fg":2}],[")                                                   ",{}]],"13":[["  2 ",{"fg":3}],["  {                                                                    ",{}],["|",{"inverse":true}],["  4 ",{"fg":3}],["  {                                                                    ",{}]],"14":[["  3 ",{"fg":3}],["    error(",{}],["\"Kreiranje procesa neuspjesno! :(\"",{"fg":2}],[");                         ",{}],["|",{"inverse":true}],["  5 ",{"fg":3}],["    error(",{}],["\"Kreiranje procesa neuspjesno! :(\"",{"fg":2}],[");                         ",{}]],"15":[["  4 ",{"fg":3}],["    ",{}],["return",{"fg":4,"bold":true}],[" ",{}],["1",{"fg":2}],[";                                                          ",{}],["|",{"inverse":true}],["  6 ",{"fg":3}],["    ",{}],["return",{"fg":4,"bold":true}],[" ",{}],["1",{"fg":2}],[";                                                          ",{}]],"16":[["  5 ",{"fg":3}],["  }                                                                    ",{}],["|",{"inverse":true}],["  7 ",{"fg":3}],["  }                                                                    ",{}]],"17":[["  6 ",{"fg":3}],["  ",{}],["if",{"fg":4,"bold":true}],[" (childPID == ",{}],["0",{"fg":2}],[")                                                   ",{}],["|",{"inverse":true}],["  8 ",{"fg":3}],["  ",{}],["if",{"fg":4,"bold":true}],[" (childPID == ",{}],["0",{"fg":2}],[")                                                   ",{}]],"18":[["  7 ",{"fg":3}],["    printf(",{}],["\"Child proces sa PID = ",{"fg":2}],["%ld",{"fg":1,"bold":true}],[", ID = ",{"fg":2}],["%ld\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[", (",{}],["long",{"fg":4,"bold":true}],[")getpid(), (",{}],["lo",{"fg":4,"bold":true}],["|",{"inverse":true}],["  9 ",{"fg":3}],["    printf(",{}],["\"Child proces sa PID = ",{"fg":2}],["%ld",{"fg":1,"bold":true}],[", ID = ",{"fg":2}],["%ld\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[", (",{}],["long",{"fg":4,"bold":true}],[")getpid(), (",{}],["lo",{"fg":4,"bold":true}]],"19":[["    ",{"fg":3}],["ng",{"fg":4,"bold":true}],[")mojPID);                                                            ",{}],["|",{"inverse":true}],["    ",{"fg":3}],["ng",{"fg":4,"bold":true}],[")mojPID);                                                            ",{}]],"20":[["  8 ",{"fg":3}],["  ",{}],["else",{"fg":4,"bold":true}],["                                                                 ",{}],["|",{"inverse":true}],[" 10 ",{"fg":3}],["  ",{}],["else",{"fg":4,"bold":true}],["                                                                 ",{}]],"21":[["  9 ",{"fg":3}],["    printf(",{}],["\"Parent proces sa PID = ",{"fg":2}],["%ld",{"fg":1,"bold":true}],[", ID = ",{"fg":2}],["%ld\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[", (",{}],["long",{"fg":4,"bold":true}],[")getpid(), (",{}],["l",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 11 ",{"fg":3}],["    printf(",{}],["\"Parent proces sa PID = ",{"fg":2}],["%ld",{"fg":1,"bold":true}],[", ID = ",{"fg":2}],["%ld\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[", (",{}],["long",{"fg":4,"bold":true}],[")getpid(), (",{}],["l",{"fg":4,"bold":true}]],"22":[["    ",{"fg":3}],["ong",{"fg":4,"bold":true}],[")mojPID);                                                           ",{}],["|",{"inverse":true}],["    ",{"fg":3}],["ong",{"fg":4,"bold":true}],[")mojPID);                                                           ",{}]],"23":[[" 10 ",{"fg":3}],["  ",{}],["return",{"fg":4,"bold":true}],[" ",{}],["0",{"fg":2}],[";                                                            ",{}],["|",{"inverse":true}],[" 12 ",{"fg":3}],["  ",{}],["return",{"fg":4,"bold":true}],[" ",{}],["0",{"fg":2}],[";                                                            ",{}]],"24":[[" 11 ",{"fg":3}],["}                                                                      ",{}],["|",{"inverse":true}],[" 13 ",{"fg":3}],["}                                                                      ",{}]],"38":[["primjer_1.c [+]                                          10,6           All ",{"fg":3,"bg":4,"bold":true}],["primjer_1.c [+]                                          8,1            All",{"fg":0,"bg":4}]]},"cursor":{"x":9,"y":11}}],[3.570011,{"lines":{"11":[["  0 ",{"fg":3}],["  ",{}],["// 0",{"fg":1}],["                                                                 ",{}],["|",{"inverse":true}],["  2 ",{"fg":3}],["  ",{}],["// 0",{"fg":1}],["                                                                 ",{}]],"38":[["primjer_1.c [+]                                          10,7           All ",{"fg":3,"bg":4,"bold":true}],["primjer_1.c [+]                                          8,1            All",{"fg":0,"bg":4}]]},"cursor":{"x":10}}],[0.229313,{"lines":{"11":[["  0 ",{"fg":3}],["  ",{}],["// 0 ",{"fg":1}],["                                                                ",{}],["|",{"inverse":true}],["  2 ",{"fg":3}],["  ",{}],["// 0 ",{"fg":1}],["                                                                ",{}]],"38":[["primjer_1.c [+]                                          10,8           All ",{"fg":3,"bg":4,"bold":true}],["primjer_1.c [+]                                          8,1            All",{"fg":0,"bg":4}]]},"cursor":{"x":11}}],[2.246593,{"lines":{"11":[["  0 ",{"fg":3}],["  ",{}],["// 0 u",{"fg":1}],["                                                               ",{}],["|",{"inverse":true}],["  2 ",{"fg":3}],["  ",{}],["// 0 u",{"fg":1}],["                                                               ",{}]],"38":[["primjer_1.c [+]                                          10,9           All ",{"fg":3,"bg":4,"bold":true}],["primjer_1.c [+]                                          8,1            All",{"fg":0,"bg":4}]]},"cursor":{"x":12}}],[0.263957,{"lines":{"11":[["  0 ",{"fg":3}],["  ",{}],["// 0 u ",{"fg":1}],["                                                              ",{}],["|",{"inverse":true}],["  2 ",{"fg":3}],["  ",{}],["// 0 u ",{"fg":1}],["                                                              ",{}]],"38":[["primjer_1.c [+]                                          10,10          All ",{"fg":3,"bg":4,"bold":true}],["primjer_1.c [+]                                          8,1            All",{"fg":0,"bg":4}]]},"cursor":{"x":13}}],[0.385672,{"lines":{"11":[["  0 ",{"fg":3}],["  ",{}],["// 0 u k",{"fg":1}],["                                                             ",{}],["|",{"inverse":true}],["  2 ",{"fg":3}],["  ",{}],["// 0 u k",{"fg":1}],["                                                             ",{}]],"38":[["primjer_1.c [+]                                          10,11          All ",{"fg":3,"bg":4,"bold":true}],["primjer_1.c [+]                                          8,1            All",{"fg":0,"bg":4}]]},"cursor":{"x":14}}],[0.234389,{"lines":{"11":[["  0 ",{"fg":3}],["  ",{}],["// 0 u kr",{"fg":1}],["                                                            ",{}],["|",{"inverse":true}],["  2 ",{"fg":3}],["  ",{}],["// 0 u kr",{"fg":1}],["                                                            ",{}]],"38":[["primjer_1.c [+]                                          10,12          All ",{"fg":3,"bg":4,"bold":true}],["primjer_1.c [+]                                          8,1            All",{"fg":0,"bg":4}]]},"cursor":{"x":15}}],[0.08100400000000001,{"lines":{"11":[["  0 ",{"fg":3}],["  ",{}],["// 0 u kre",{"fg":1}],["                                                           ",{}],["|",{"inverse":true}],["  2 ",{"fg":3}],["  ",{}],["// 0 u kre",{"fg":1}],["                                                           ",{}]],"38":[["primjer_1.c [+]                                          10,13          All ",{"fg":3,"bg":4,"bold":true}],["primjer_1.c [+]                                          8,1            All",{"fg":0,"bg":4}]]},"cursor":{"x":16}}],[0.179564,{"lines":{"11":[["  0 ",{"fg":3}],["  ",{}],["// 0 u krei",{"fg":1}],["                                                          ",{}],["|",{"inverse":true}],["  2 ",{"fg":3}],["  ",{}],["// 0 u krei",{"fg":1}],["                                                          ",{}]],"38":[["primjer_1.c [+]                                          10,14          All ",{"fg":3,"bg":4,"bold":true}],["primjer_1.c [+]                                          8,1            All",{"fg":0,"bg":4}]]},"cursor":{"x":17}}],[0.166137,{"lines":{"11":[["  0 ",{"fg":3}],["  ",{}],["// 0 u kreir",{"fg":1}],["                                                         ",{}],["|",{"inverse":true}],["  2 ",{"fg":3}],["  ",{}],["// 0 u kreir",{"fg":1}],["                                                         ",{}]],"38":[["primjer_1.c [+]                                          10,15          All ",{"fg":3,"bg":4,"bold":true}],["primjer_1.c [+]                                          8,1            All",{"fg":0,"bg":4}]]},"cursor":{"x":18}}],[0.129063,{"lines":{"11":[["  0 ",{"fg":3}],["  ",{}],["// 0 u kreira",{"fg":1}],["                                                        ",{}],["|",{"inverse":true}],["  2 ",{"fg":3}],["  ",{}],["// 0 u kreira",{"fg":1}],["                                                        ",{}]],"38":[["primjer_1.c [+]                                          10,16          All ",{"fg":3,"bg":4,"bold":true}],["primjer_1.c [+]                                          8,1            All",{"fg":0,"bg":4}]]},"cursor":{"x":19}}],[0.12334,{"lines":{"11":[["  0 ",{"fg":3}],["  ",{}],["// 0 u kreiran",{"fg":1}],["                                                       ",{}],["|",{"inverse":true}],["  2 ",{"fg":3}],["  ",{}],["// 0 u kreiran",{"fg":1}],["                                                       ",{}]],"38":[["primjer_1.c [+]                                          10,17          All ",{"fg":3,"bg":4,"bold":true}],["primjer_1.c [+]                                          8,1            All",{"fg":0,"bg":4}]]},"cursor":{"x":20}}],[0.21199,{"lines":{"11":[["  0 ",{"fg":3}],["  ",{}],["// 0 u kreirano",{"fg":1}],["                                                      ",{}],["|",{"inverse":true}],["  2 ",{"fg":3}],["  ",{}],["// 0 u kreirano",{"fg":1}],["                                                      ",{}]],"38":[["primjer_1.c [+]                                          10,18          All ",{"fg":3,"bg":4,"bold":true}],["primjer_1.c [+]                                          8,1            All",{"fg":0,"bg":4}]]},"cursor":{"x":21}}],[0.242957,{"lines":{"11":[["  0 ",{"fg":3}],["  ",{}],["// 0 u kreiranom",{"fg":1}],["                                                     ",{}],["|",{"inverse":true}],["  2 ",{"fg":3}],["  ",{}],["// 0 u kreiranom",{"fg":1}],["                                                     ",{}]],"38":[["primjer_1.c [+]                                          10,19          All ",{"fg":3,"bg":4,"bold":true}],["primjer_1.c [+]                                          8,1            All",{"fg":0,"bg":4}]]},"cursor":{"x":22}}],[0.182951,{"lines":{"11":[["  0 ",{"fg":3}],["  ",{}],["// 0 u kreiranom ",{"fg":1}],["                                                    ",{}],["|",{"inverse":true}],["  2 ",{"fg":3}],["  ",{}],["// 0 u kreiranom ",{"fg":1}],["                                                    ",{}]],"38":[["primjer_1.c [+]                                          10,20          All ",{"fg":3,"bg":4,"bold":true}],["primjer_1.c [+]                                          8,1            All",{"fg":0,"bg":4}]]},"cursor":{"x":23}}],[3.224452,{"lines":{"11":[["  0 ",{"fg":3}],["  ",{}],["// 0 u kreiranom c",{"fg":1}],["                                                   ",{}],["|",{"inverse":true}],["  2 ",{"fg":3}],["  ",{}],["// 0 u kreiranom c",{"fg":1}],["                                                   ",{}]],"38":[["primjer_1.c [+]                                          10,21          All ",{"fg":3,"bg":4,"bold":true}],["primjer_1.c [+]                                          8,1            All",{"fg":0,"bg":4}]]},"cursor":{"x":24}}],[0.406846,{"lines":{"11":[["  0 ",{"fg":3}],["  ",{}],["// 0 u kreiranom ch",{"fg":1}],["                                                  ",{}],["|",{"inverse":true}],["  2 ",{"fg":3}],["  ",{}],["// 0 u kreiranom ch",{"fg":1}],["                                                  ",{}]],"38":[["primjer_1.c [+]                                          10,22          All ",{"fg":3,"bg":4,"bold":true}],["primjer_1.c [+]                                          8,1            All",{"fg":0,"bg":4}]]},"cursor":{"x":25}}],[0.12512,{"lines":{"11":[["  0 ",{"fg":3}],["  ",{}],["// 0 u kreiranom chi",{"fg":1}],["                                                 ",{}],["|",{"inverse":true}],["  2 ",{"fg":3}],["  ",{}],["// 0 u kreiranom chi",{"fg":1}],["                                                 ",{}]],"38":[["primjer_1.c [+]                                          10,23          All ",{"fg":3,"bg":4,"bold":true}],["primjer_1.c [+]                                          8,1            All",{"fg":0,"bg":4}]]},"cursor":{"x":26}}],[0.363069,{"lines":{"11":[["  0 ",{"fg":3}],["  ",{}],["// 0 u kreiranom chil",{"fg":1}],["                                                ",{}],["|",{"inverse":true}],["  2 ",{"fg":3}],["  ",{}],["// 0 u kreiranom chil",{"fg":1}],["                                                ",{}]],"38":[["primjer_1.c [+]                                          10,24          All ",{"fg":3,"bg":4,"bold":true}],["primjer_1.c [+]                                          8,1            All",{"fg":0,"bg":4}]]},"cursor":{"x":27}}],[0.36442,{"lines":{"11":[["  0 ",{"fg":3}],["  ",{}],["// 0 u kreiranom child",{"fg":1}],["                                               ",{}],["|",{"inverse":true}],["  2 ",{"fg":3}],["  ",{}],["// 0 u kreiranom child",{"fg":1}],["                                               ",{}]],"38":[["primjer_1.c [+]                                          10,25          All ",{"fg":3,"bg":4,"bold":true}],["primjer_1.c [+]                                          8,1            All",{"fg":0,"bg":4}]]},"cursor":{"x":28}}],[0.287832,{"lines":{"11":[["  0 ",{"fg":3}],["  ",{}],["// 0 u kreiranom child ",{"fg":1}],["                                              ",{}],["|",{"inverse":true}],["  2 ",{"fg":3}],["  ",{}],["// 0 u kreiranom child ",{"fg":1}],["                                              ",{}]],"38":[["primjer_1.c [+]                                          10,26          All ",{"fg":3,"bg":4,"bold":true}],["primjer_1.c [+]                                          8,1            All",{"fg":0,"bg":4}]]},"cursor":{"x":29}}],[0.181524,{"lines":{"11":[["  0 ",{"fg":3}],["  ",{}],["// 0 u kreiranom child p",{"fg":1}],["                                             ",{}],["|",{"inverse":true}],["  2 ",{"fg":3}],["  ",{}],["// 0 u kreiranom child p",{"fg":1}],["                                             ",{}]],"38":[["primjer_1.c [+]                                          10,27          All ",{"fg":3,"bg":4,"bold":true}],["primjer_1.c [+]                                          8,1            All",{"fg":0,"bg":4}]]},"cursor":{"x":30}}],[0.256807,{"lines":{"11":[["  0 ",{"fg":3}],["  ",{}],["// 0 u kreiranom child pr",{"fg":1}],["                                            ",{}],["|",{"inverse":true}],["  2 ",{"fg":3}],["  ",{}],["// 0 u kreiranom child pr",{"fg":1}],["                                            ",{}]],"38":[["primjer_1.c [+]                                          10,28          All ",{"fg":3,"bg":4,"bold":true}],["primjer_1.c [+]                                          8,1            All",{"fg":0,"bg":4}]]},"cursor":{"x":31}}],[0.12812,{"lines":{"11":[["  0 ",{"fg":3}],["  ",{}],["// 0 u kreiranom child pro",{"fg":1}],["                                           ",{}],["|",{"inverse":true}],["  2 ",{"fg":3}],["  ",{}],["// 0 u kreiranom child pro",{"fg":1}],["                                           ",{}]],"38":[["primjer_1.c [+]                                          10,29          All ",{"fg":3,"bg":4,"bold":true}],["primjer_1.c [+]                                          8,1            All",{"fg":0,"bg":4}]]},"cursor":{"x":32}}],[0.267416,{"lines":{"11":[["  0 ",{"fg":3}],["  ",{}],["// 0 u kreiranom child proc",{"fg":1}],["                                          ",{}],["|",{"inverse":true}],["  2 ",{"fg":3}],["  ",{}],["// 0 u kreiranom child proc",{"fg":1}],["                                          ",{}]],"38":[["primjer_1.c [+]                                          10,30          All ",{"fg":3,"bg":4,"bold":true}],["primjer_1.c [+]                                          8,1            All",{"fg":0,"bg":4}]]},"cursor":{"x":33}}],[0.29902,{"lines":{"11":[["  0 ",{"fg":3}],["  ",{}],["// 0 u kreiranom child proce",{"fg":1}],["                                         ",{}],["|",{"inverse":true}],["  2 ",{"fg":3}],["  ",{}],["// 0 u kreiranom child proce",{"fg":1}],["                                         ",{}]],"38":[["primjer_1.c [+]                                          10,31          All ",{"fg":3,"bg":4,"bold":true}],["primjer_1.c [+]                                          8,1            All",{"fg":0,"bg":4}]]},"cursor":{"x":34}}],[0.299332,{"lines":{"11":[["  0 ",{"fg":3}],["  ",{}],["// 0 u kreiranom child proces",{"fg":1}],["                                        ",{}],["|",{"inverse":true}],["  2 ",{"fg":3}],["  ",{}],["// 0 u kreiranom child proces",{"fg":1}],["                                        ",{}]],"38":[["primjer_1.c [+]                                          10,32          All ",{"fg":3,"bg":4,"bold":true}],["primjer_1.c [+]                                          8,1            All",{"fg":0,"bg":4}]]},"cursor":{"x":35}}],[0.369618,{"lines":{"11":[["  0 ",{"fg":3}],["  ",{}],["// 0 u kreiranom child proces-",{"fg":1}],["                                       ",{}],["|",{"inverse":true}],["  2 ",{"fg":3}],["  ",{}],["// 0 u kreiranom child proces-",{"fg":1}],["                                       ",{}]],"38":[["primjer_1.c [+]                                          10,33          All ",{"fg":3,"bg":4,"bold":true}],["primjer_1.c [+]                                          8,1            All",{"fg":0,"bg":4}]]},"cursor":{"x":36}}],[0.3693,{"lines":{"11":[["  0 ",{"fg":3}],["  ",{}],["// 0 u kreiranom child proces-u",{"fg":1}],["                                      ",{}],["|",{"inverse":true}],["  2 ",{"fg":3}],["  ",{}],["// 0 u kreiranom child proces-u",{"fg":1}],["                                      ",{}]],"38":[["primjer_1.c [+]                                          10,34          All ",{"fg":3,"bg":4,"bold":true}],["primjer_1.c [+]                                          8,1            All",{"fg":0,"bg":4}]]},"cursor":{"x":37}}],[0.632082,{"lines":{"0":[[" 10 ",{"fg":3}],["#include",{"fg":5}],["<stdio.h>",{"fg":2}],["                                                      ",{}],["|",{"inverse":true}],["  7 ",{"fg":3}],["#include",{"fg":5}],["<stdio.h>",{"fg":2}],["                                                      ",{}]],"1":[["  9 ",{"fg":3}],["#include",{"fg":5}],["<unistd.h>",{"fg":2}],[" ",{}],["/* zaglavlje u kojem je deklarisana getpid() funkcij",{"fg":1}],["|",{"inverse":true}],["  6 ",{"fg":3}],["#include",{"fg":5}],["<unistd.h>",{"fg":2}],[" ",{}],["/* zaglavlje u kojem je deklarisana getpid() funkcij",{"fg":1}]],"3":[["  8 ",{"fg":3}],["#include",{"fg":5}],["<sys/types.h>",{"fg":2}],[" ",{}],["/* zaglavlje u kojem je definisan tip pid_t →  un",{"fg":1}],["|",{"inverse":true}],["  5 ",{"fg":3}],["#include",{"fg":5}],["<sys/types.h>",{"fg":2}],[" ",{}],["/* zaglavlje u kojem je definisan tip pid_t →  un",{"fg":1}]],"5":[["  7 ",{"fg":3}],["int",{"fg":4,"bold":true}],[" main()                                                             ",{}],["|",{"inverse":true}],["  4 ",{"fg":3}],["int",{"fg":4,"bold":true}],[" main()                                                             ",{}]],"6":[["  6 ",{"fg":3}],["{                                                                      ",{}],["|",{"inverse":true}],["  3 ",{"fg":3}],["{                                                                      ",{}]],"7":[["  5 ",{"fg":3}],["  pid_t childPID;                                                      ",{}],["|",{"inverse":true}],["  2 ",{"fg":3}],["  pid_t childPID;                                                      ",{}]],"8":[["  4 ",{"fg":3}],["  pid_t mojPID = getpid();                                             ",{}],["|",{"inverse":true}],["  1 ",{"fg":3}],["  pid_t mojPID = getpid();                                             ",{}]],"9":[["  3 ",{"fg":3}],["  childPID = fork();                                                   ",{}],["|",{"inverse":true}],["  0 ",{"fg":3}],["  childPID = fork();                                                   ",{}]],"10":[["  2 ",{"fg":3}],["  ",{}],["// f-ja fork vraca -1 ukoliko je greska",{"fg":1}],["                              ",{}],["|",{"inverse":true}],["  1 ",{"fg":3}],["  ",{}],["// f-ja fork vraca -1 ukoliko je greska",{"fg":1}],["                              ",{}]],"12":[["                                                                           ",{}],["|",{"inverse":true}],["  3 ",{"fg":3}],["  ",{}],["if",{"fg":4,"bold":true}],["(childPID == -",{}],["1",{"fg":2}],[")                                                   ",{}]],"13":[["  1 ",{"fg":3}],["  ",{}],["if",{"fg":4,"bold":true}],["(childPID == -",{}],["1",{"fg":2}],[")                                                   ",{}],["|",{"inverse":true}],["  4 ",{"fg":3}],["  {                                                                    ",{}]],"14":[["  2 ",{"fg":3}],["  {                                                                    ",{}],["|",{"inverse":true}],["  5 ",{"fg":3}],["    error(",{}],["\"Kreiranje procesa neuspjesno! :(\"",{"fg":2}],[");                         ",{}]],"15":[["  3 ",{"fg":3}],["    error(",{}],["\"Kreiranje procesa neuspjesno! :(\"",{"fg":2}],[");                         ",{}],["|",{"inverse":true}],["  6 ",{"fg":3}],["    ",{}],["return",{"fg":4,"bold":true}],[" ",{}],["1",{"fg":2}],[";                                                          ",{}]],"16":[["  4 ",{"fg":3}],["    ",{}],["return",{"fg":4,"bold":true}],[" ",{}],["1",{"fg":2}],[";                                                          ",{}],["|",{"inverse":true}],["  7 ",{"fg":3}],["  }                                                                    ",{}]],"17":[["  5 ",{"fg":3}],["  }                                                                    ",{}],["|",{"inverse":true}],["  8 ",{"fg":3}],["  ",{}],["if",{"fg":4,"bold":true}],[" (childPID == ",{}],["0",{"fg":2}],[")                                                   ",{}]],"18":[["  6 ",{"fg":3}],["  ",{}],["if",{"fg":4,"bold":true}],[" (childPID == ",{}],["0",{"fg":2}],[")                                                   ",{}],["|",{"inverse":true}],["  9 ",{"fg":3}],["    printf(",{}],["\"Child proces sa PID = ",{"fg":2}],["%ld",{"fg":1,"bold":true}],[", ID = ",{"fg":2}],["%ld\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[", (",{}],["long",{"fg":4,"bold":true}],[")getpid(), (",{}],["lo",{"fg":4,"bold":true}]],"19":[["  7 ",{"fg":3}],["    printf(",{}],["\"Child proces sa PID = ",{"fg":2}],["%ld",{"fg":1,"bold":true}],[", ID = ",{"fg":2}],["%ld\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[", (",{}],["long",{"fg":4,"bold":true}],[")getpid(), (",{}],["lo",{"fg":4,"bold":true}],["|",{"inverse":true}],["    ",{"fg":3}],["ng",{"fg":4,"bold":true}],[")mojPID);                                                            ",{}]],"20":[["    ",{"fg":3}],["ng",{"fg":4,"bold":true}],[")mojPID);                                                            ",{}],["|",{"inverse":true}],[" 10 ",{"fg":3}],["  ",{}],["else",{"fg":4,"bold":true}],["                                                                 ",{}]]},"cursor":{"x":73,"y":20}}],[0.009535,{"lines":{"11":[["  1 ",{"fg":3}],["  ",{}],["// 0 u kreiranom child proces-u",{"fg":1}],["                                      ",{}],["|",{"inverse":true}],["  2 ",{"fg":3}],["  ",{}],["// 0 u kreiranom child proces-u",{"fg":1}],["                                      ",{}]],"12":[["  0 ",{"fg":3}],["  ",{}],["// ",{"fg":1}],["                                                                  ",{}],["|",{"inverse":true}],["  3 ",{"fg":3}],["  ",{}],["// ",{"fg":1}],["                                                                  ",{}]],"13":[["  1 ",{"fg":3}],["  ",{}],["if",{"fg":4,"bold":true}],["(childPID == -",{}],["1",{"fg":2}],[")                                                   ",{}],["|",{"inverse":true}],["  4 ",{"fg":3}],["  ",{}],["if",{"fg":4,"bold":true}],["(childPID == -",{}],["1",{"fg":2}],[")                                                   ",{}]],"14":[["  2 ",{"fg":3}],["  {                                                                    ",{}],["|",{"inverse":true}],["  5 ",{"fg":3}],["  {                                                                    ",{}]],"15":[["  3 ",{"fg":3}],["    error(",{}],["\"Kreiranje procesa neuspjesno! :(\"",{"fg":2}],[");                         ",{}],["|",{"inverse":true}],["  6 ",{"fg":3}],["    error(",{}],["\"Kreiranje procesa neuspjesno! :(\"",{"fg":2}],[");                         ",{}]],"16":[["  4 ",{"fg":3}],["    ",{}],["return",{"fg":4,"bold":true}],[" ",{}],["1",{"fg":2}],[";                                                          ",{}],["|",{"inverse":true}],["  7 ",{"fg":3}],["    ",{}],["return",{"fg":4,"bold":true}],[" ",{}],["1",{"fg":2}],[";                                                          ",{}]],"17":[["  5 ",{"fg":3}],["  }                                                                    ",{}],["|",{"inverse":true}],["  8 ",{"fg":3}],["  }                                                                    ",{}]],"18":[["  6 ",{"fg":3}],["  ",{}],["if",{"fg":4,"bold":true}],[" (childPID == ",{}],["0",{"fg":2}],[")                                                   ",{}],["|",{"inverse":true}],["  9 ",{"fg":3}],["  ",{}],["if",{"fg":4,"bold":true}],[" (childPID == ",{}],["0",{"fg":2}],[")                                                   ",{}]],"19":[["  7 ",{"fg":3}],["    printf(",{}],["\"Child proces sa PID = ",{"fg":2}],["%ld",{"fg":1,"bold":true}],[", ID = ",{"fg":2}],["%ld\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[", (",{}],["long",{"fg":4,"bold":true}],[")getpid(), (",{}],["lo",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 10 ",{"fg":3}],["    printf(",{}],["\"Child proces sa PID = ",{"fg":2}],["%ld",{"fg":1,"bold":true}],[", ID = ",{"fg":2}],["%ld\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[", (",{}],["long",{"fg":4,"bold":true}],[")getpid(), (",{}],["lo",{"fg":4,"bold":true}]],"20":[["    ",{"fg":3}],["ng",{"fg":4,"bold":true}],[")mojPID);                                                            ",{}],["|",{"inverse":true}],["    ",{"fg":3}],["ng",{"fg":4,"bold":true}],[")mojPID);                                                            ",{}]],"21":[["  8 ",{"fg":3}],["  ",{}],["else",{"fg":4,"bold":true}],["                                                                 ",{}],["|",{"inverse":true}],[" 11 ",{"fg":3}],["  ",{}],["else",{"fg":4,"bold":true}],["                                                                 ",{}]],"22":[["  9 ",{"fg":3}],["    printf(",{}],["\"Parent proces sa PID = ",{"fg":2}],["%ld",{"fg":1,"bold":true}],[", ID = ",{"fg":2}],["%ld\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[", (",{}],["long",{"fg":4,"bold":true}],[")getpid(), (",{}],["l",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 12 ",{"fg":3}],["    printf(",{}],["\"Parent proces sa PID = ",{"fg":2}],["%ld",{"fg":1,"bold":true}],[", ID = ",{"fg":2}],["%ld\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[", (",{}],["long",{"fg":4,"bold":true}],[")getpid(), (",{}],["l",{"fg":4,"bold":true}]],"23":[["    ",{"fg":3}],["ong",{"fg":4,"bold":true}],[")mojPID);                                                           ",{}],["|",{"inverse":true}],["    ",{"fg":3}],["ong",{"fg":4,"bold":true}],[")mojPID);                                                           ",{}]],"24":[[" 10 ",{"fg":3}],["  ",{}],["return",{"fg":4,"bold":true}],[" ",{}],["0",{"fg":2}],[";                                                            ",{}],["|",{"inverse":true}],[" 13 ",{"fg":3}],["  ",{}],["return",{"fg":4,"bold":true}],[" ",{}],["0",{"fg":2}],[";                                                            ",{}]],"25":[[" 11 ",{"fg":3}],["}                                                                      ",{}],["|",{"inverse":true}],[" 14 ",{"fg":3}],["}                                                                      ",{}]],"38":[["primjer_1.c [+]                                          11,6           All ",{"fg":3,"bg":4,"bold":true}],["primjer_1.c [+]                                          8,1            All",{"fg":0,"bg":4}]]},"cursor":{"x":9,"y":12}}],[0.640849,{"lines":{"12":[["  0 ",{"fg":3}],["  ",{}],["// 1",{"fg":1}],["                                                                 ",{}],["|",{"inverse":true}],["  3 ",{"fg":3}],["  ",{}],["// 1",{"fg":1}],["                                                                 ",{}]],"38":[["primjer_1.c [+]                                          11,7           All ",{"fg":3,"bg":4,"bold":true}],["primjer_1.c [+]                                          8,1            All",{"fg":0,"bg":4}]]},"cursor":{"x":10}}],[0.310798,{"lines":{"12":[["  0 ",{"fg":3}],["  ",{}],["// 1 ",{"fg":1}],["                                                                ",{}],["|",{"inverse":true}],["  3 ",{"fg":3}],["  ",{}],["// 1 ",{"fg":1}],["                                                                ",{}]],"38":[["primjer_1.c [+]                                          11,8           All ",{"fg":3,"bg":4,"bold":true}],["primjer_1.c [+]                                          8,1            All",{"fg":0,"bg":4}]]},"cursor":{"x":11}}],[0.388052,{"lines":{"12":[["  0 ",{"fg":3}],["  ",{}],["// 1 u",{"fg":1}],["                                                               ",{}],["|",{"inverse":true}],["  3 ",{"fg":3}],["  ",{}],["// 1 u",{"fg":1}],["                                                               ",{}]],"38":[["primjer_1.c [+]                                          11,9           All ",{"fg":3,"bg":4,"bold":true}],["primjer_1.c [+]                                          8,1            All",{"fg":0,"bg":4}]]},"cursor":{"x":12}}],[0.360182,{"lines":{"12":[["  0 ",{"fg":3}],["  ",{}],["// 1 u ",{"fg":1}],["                                                              ",{}],["|",{"inverse":true}],["  3 ",{"fg":3}],["  ",{}],["// 1 u ",{"fg":1}],["                                                              ",{}]],"38":[["primjer_1.c [+]                                          11,10          All ",{"fg":3,"bg":4,"bold":true}],["primjer_1.c [+]                                          8,1            All",{"fg":0,"bg":4}]]},"cursor":{"x":13}}],[0.863494,{"lines":{"12":[["  0 ",{"fg":3}],["  ",{}],["// 1 u p",{"fg":1}],["                                                             ",{}],["|",{"inverse":true}],["  3 ",{"fg":3}],["  ",{}],["// 1 u p",{"fg":1}],["                                                             ",{}]],"38":[["primjer_1.c [+]                                          11,11          All ",{"fg":3,"bg":4,"bold":true}],["primjer_1.c [+]                                          8,1            All",{"fg":0,"bg":4}]]},"cursor":{"x":14}}],[0.134347,{"lines":{"12":[["  0 ",{"fg":3}],["  ",{}],["// 1 u pa",{"fg":1}],["                                                            ",{}],["|",{"inverse":true}],["  3 ",{"fg":3}],["  ",{}],["// 1 u pa",{"fg":1}],["                                                            ",{}]],"38":[["primjer_1.c [+]                                          11,12          All ",{"fg":3,"bg":4,"bold":true}],["primjer_1.c [+]                                          8,1            All",{"fg":0,"bg":4}]]},"cursor":{"x":15}}],[0.550515,{"lines":{"12":[["  0 ",{"fg":3}],["  ",{}],["// 1 u par",{"fg":1}],["                                                           ",{}],["|",{"inverse":true}],["  3 ",{"fg":3}],["  ",{}],["// 1 u par",{"fg":1}],["                                                           ",{}]],"38":[["primjer_1.c [+]                                          11,13          All ",{"fg":3,"bg":4,"bold":true}],["primjer_1.c [+]                                          8,1            All",{"fg":0,"bg":4}]]},"cursor":{"x":16}}],[0.579413,{"lines":{"12":[["  0 ",{"fg":3}],["  ",{}],["// 1 u pare",{"fg":1}],["                                                          ",{}],["|",{"inverse":true}],["  3 ",{"fg":3}],["  ",{}],["// 1 u pare",{"fg":1}],["                                                          ",{}]],"38":[["primjer_1.c [+]                                          11,14          All ",{"fg":3,"bg":4,"bold":true}],["primjer_1.c [+]                                          8,1            All",{"fg":0,"bg":4}]]},"cursor":{"x":17}}],[0.266278,{"lines":{"12":[["  0 ",{"fg":3}],["  ",{}],["// 1 u paren",{"fg":1}],["                                                         ",{}],["|",{"inverse":true}],["  3 ",{"fg":3}],["  ",{}],["// 1 u paren",{"fg":1}],["                                                         ",{}]],"38":[["primjer_1.c [+]                                          11,15          All ",{"fg":3,"bg":4,"bold":true}],["primjer_1.c [+]                                          8,1            All",{"fg":0,"bg":4}]]},"cursor":{"x":18}}],[0.155279,{"lines":{"12":[["  0 ",{"fg":3}],["  ",{}],["// 1 u parent",{"fg":1}],["                                                        ",{}],["|",{"inverse":true}],["  3 ",{"fg":3}],["  ",{}],["// 1 u parent",{"fg":1}],["                                                        ",{}]],"38":[["primjer_1.c [+]                                          11,16          All ",{"fg":3,"bg":4,"bold":true}],["primjer_1.c [+]                                          8,1            All",{"fg":0,"bg":4}]]},"cursor":{"x":19}}],[0.557527,{"lines":{"12":[["  0 ",{"fg":3}],["  ",{}],["// 1 u parent ",{"fg":1}],["                                                       ",{}],["|",{"inverse":true}],["  3 ",{"fg":3}],["  ",{}],["// 1 u parent ",{"fg":1}],["                                                       ",{}]],"38":[["primjer_1.c [+]                                          11,17          All ",{"fg":3,"bg":4,"bold":true}],["primjer_1.c [+]                                          8,1            All",{"fg":0,"bg":4}]]},"cursor":{"x":20}}],[0.554284,{"lines":{"12":[["  0 ",{"fg":3}],["  ",{}],["// 1 u parent p",{"fg":1}],["                                                      ",{}],["|",{"inverse":true}],["  3 ",{"fg":3}],["  ",{}],["// 1 u parent p",{"fg":1}],["                                                      ",{}]],"38":[["primjer_1.c [+]                                          11,18          All ",{"fg":3,"bg":4,"bold":true}],["primjer_1.c [+]                                          8,1            All",{"fg":0,"bg":4}]]},"cursor":{"x":21}}],[0.123225,{"lines":{"12":[["  0 ",{"fg":3}],["  ",{}],["// 1 u parent pr",{"fg":1}],["                                                     ",{}],["|",{"inverse":true}],["  3 ",{"fg":3}],["  ",{}],["// 1 u parent pr",{"fg":1}],["                                                     ",{}]],"38":[["primjer_1.c [+]                                          11,19          All ",{"fg":3,"bg":4,"bold":true}],["primjer_1.c [+]                                          8,1            All",{"fg":0,"bg":4}]]},"cursor":{"x":22}}],[0.234059,{"lines":{"12":[["  0 ",{"fg":3}],["  ",{}],["// 1 u parent pro",{"fg":1}],["                                                    ",{}],["|",{"inverse":true}],["  3 ",{"fg":3}],["  ",{}],["// 1 u parent pro",{"fg":1}],["                                                    ",{}]],"38":[["primjer_1.c [+]                                          11,20          All ",{"fg":3,"bg":4,"bold":true}],["primjer_1.c [+]                                          8,1            All",{"fg":0,"bg":4}]]},"cursor":{"x":23}}],[0.765833,{"lines":{"12":[["  0 ",{"fg":3}],["  ",{}],["// 1 u parent proc",{"fg":1}],["                                                   ",{}],["|",{"inverse":true}],["  3 ",{"fg":3}],["  ",{}],["// 1 u parent proc",{"fg":1}],["                                                   ",{}]],"38":[["primjer_1.c [+]                                          11,21          All ",{"fg":3,"bg":4,"bold":true}],["primjer_1.c [+]                                          8,1            All",{"fg":0,"bg":4}]]},"cursor":{"x":24}}],[0.209587,{"lines":{"12":[["  0 ",{"fg":3}],["  ",{}],["// 1 u parent proce",{"fg":1}],["                                                  ",{}],["|",{"inverse":true}],["  3 ",{"fg":3}],["  ",{}],["// 1 u parent proce",{"fg":1}],["                                                  ",{}]],"38":[["primjer_1.c [+]                                          11,22          All ",{"fg":3,"bg":4,"bold":true}],["primjer_1.c [+]                                          8,1            All",{"fg":0,"bg":4}]]},"cursor":{"x":25}}],[0.298733,{"lines":{"12":[["  0 ",{"fg":3}],["  ",{}],["// 1 u parent proces",{"fg":1}],["                                                 ",{}],["|",{"inverse":true}],["  3 ",{"fg":3}],["  ",{}],["// 1 u parent proces",{"fg":1}],["                                                 ",{}]],"38":[["primjer_1.c [+]                                          11,23          All ",{"fg":3,"bg":4,"bold":true}],["primjer_1.c [+]                                          8,1            All",{"fg":0,"bg":4}]]},"cursor":{"x":26}}],[0.348582,{"lines":{"12":[["  0 ",{"fg":3}],["  ",{}],["// 1 u parent procesu",{"fg":1}],["                                                ",{}],["|",{"inverse":true}],["  3 ",{"fg":3}],["  ",{}],["// 1 u parent procesu",{"fg":1}],["                                                ",{}]],"38":[["primjer_1.c [+]                                          11,24          All ",{"fg":3,"bg":4,"bold":true}],["primjer_1.c [+]                                          8,1            All",{"fg":0,"bg":4}]]},"cursor":{"x":27}}],[0.195933,{"lines":{"12":[["  0 ",{"fg":3}],["  ",{}],["// 1 u parent procesu ",{"fg":1}],["                                               ",{}],["|",{"inverse":true}],["  3 ",{"fg":3}],["  ",{}],["// 1 u parent procesu ",{"fg":1}],["                                               ",{}]],"38":[["primjer_1.c [+]                                          11,25          All ",{"fg":3,"bg":4,"bold":true}],["primjer_1.c [+]                                          8,1            All",{"fg":0,"bg":4}]]},"cursor":{"x":28}}],[0.214978,{"lines":{"12":[["  0 ",{"fg":3}],["  ",{}],["// 1 u parent procesu k",{"fg":1}],["                                              ",{}],["|",{"inverse":true}],["  3 ",{"fg":3}],["  ",{}],["// 1 u parent procesu k",{"fg":1}],["                                              ",{}]],"38":[["primjer_1.c [+]                                          11,26          All ",{"fg":3,"bg":4,"bold":true}],["primjer_1.c [+]                                          8,1            All",{"fg":0,"bg":4}]]},"cursor":{"x":29}}],[0.225348,{"lines":{"12":[["  0 ",{"fg":3}],["  ",{}],["// 1 u parent procesu ko",{"fg":1}],["                                             ",{}],["|",{"inverse":true}],["  3 ",{"fg":3}],["  ",{}],["// 1 u parent procesu ko",{"fg":1}],["                                             ",{}]],"38":[["primjer_1.c [+]                                          11,27          All ",{"fg":3,"bg":4,"bold":true}],["primjer_1.c [+]                                          8,1            All",{"fg":0,"bg":4}]]},"cursor":{"x":30}}],[0.296533,{"lines":{"12":[["  0 ",{"fg":3}],["  ",{}],["// 1 u parent procesu koj",{"fg":1}],["                                            ",{}],["|",{"inverse":true}],["  3 ",{"fg":3}],["  ",{}],["// 1 u parent procesu koj",{"fg":1}],["                                            ",{}]],"38":[["primjer_1.c [+]                                          11,28          All ",{"fg":3,"bg":4,"bold":true}],["primjer_1.c [+]                                          8,1            All",{"fg":0,"bg":4}]]},"cursor":{"x":31}}],[0.55688,{"lines":{"12":[["  0 ",{"fg":3}],["  ",{}],["// 1 u parent procesu koji",{"fg":1}],["                                           ",{}],["|",{"inverse":true}],["  3 ",{"fg":3}],["  ",{}],["// 1 u parent procesu koji",{"fg":1}],["                                           ",{}]],"38":[["primjer_1.c [+]                                          11,29          All ",{"fg":3,"bg":4,"bold":true}],["primjer_1.c [+]                                          8,1            All",{"fg":0,"bg":4}]]},"cursor":{"x":32}}],[0.181553,{"lines":{"12":[["  0 ",{"fg":3}],["  ",{}],["// 1 u parent procesu koji ",{"fg":1}],["                                          ",{}],["|",{"inverse":true}],["  3 ",{"fg":3}],["  ",{}],["// 1 u parent procesu koji ",{"fg":1}],["                                          ",{}]],"38":[["primjer_1.c [+]                                          11,30          All ",{"fg":3,"bg":4,"bold":true}],["primjer_1.c [+]                                          8,1            All",{"fg":0,"bg":4}]]},"cursor":{"x":33}}],[0.188216,{"lines":{"12":[["  0 ",{"fg":3}],["  ",{}],["// 1 u parent procesu koji j",{"fg":1}],["                                         ",{}],["|",{"inverse":true}],["  3 ",{"fg":3}],["  ",{}],["// 1 u parent procesu koji j",{"fg":1}],["                                         ",{}]],"38":[["primjer_1.c [+]                                          11,31          All ",{"fg":3,"bg":4,"bold":true}],["primjer_1.c [+]                                          8,1            All",{"fg":0,"bg":4}]]},"cursor":{"x":34}}],[0.107852,{"lines":{"12":[["  0 ",{"fg":3}],["  ",{}],["// 1 u parent procesu koji je",{"fg":1}],["                                        ",{}],["|",{"inverse":true}],["  3 ",{"fg":3}],["  ",{}],["// 1 u parent procesu koji je",{"fg":1}],["                                        ",{}]],"38":[["primjer_1.c [+]                                          11,32          All ",{"fg":3,"bg":4,"bold":true}],["primjer_1.c [+]                                          8,1            All",{"fg":0,"bg":4}]]},"cursor":{"x":35}}],[0.183965,{"lines":{"12":[["  0 ",{"fg":3}],["  ",{}],["// 1 u parent procesu koji je ",{"fg":1}],["                                       ",{}],["|",{"inverse":true}],["  3 ",{"fg":3}],["  ",{}],["// 1 u parent procesu koji je ",{"fg":1}],["                                       ",{}]],"38":[["primjer_1.c [+]                                          11,33          All ",{"fg":3,"bg":4,"bold":true}],["primjer_1.c [+]                                          8,1            All",{"fg":0,"bg":4}]]},"cursor":{"x":36}}],[0.22211,{"lines":{"12":[["  0 ",{"fg":3}],["  ",{}],["// 1 u parent procesu koji je p",{"fg":1}],["                                      ",{}],["|",{"inverse":true}],["  3 ",{"fg":3}],["  ",{}],["// 1 u parent procesu koji je p",{"fg":1}],["                                      ",{}]],"38":[["primjer_1.c [+]                                          11,34          All ",{"fg":3,"bg":4,"bold":true}],["primjer_1.c [+]                                          8,1            All",{"fg":0,"bg":4}]]},"cursor":{"x":37}}],[0.475966,{"lines":{"12":[["  0 ",{"fg":3}],["  ",{}],["// 1 u parent procesu koji je po",{"fg":1}],["                                     ",{}],["|",{"inverse":true}],["  3 ",{"fg":3}],["  ",{}],["// 1 u parent procesu koji je po",{"fg":1}],["                                     ",{}]],"38":[["primjer_1.c [+]                                          11,35          All ",{"fg":3,"bg":4,"bold":true}],["primjer_1.c [+]                                          8,1            All",{"fg":0,"bg":4}]]},"cursor":{"x":38}}],[0.32826,{"lines":{"12":[["  0 ",{"fg":3}],["  ",{}],["// 1 u parent procesu koji je poz",{"fg":1}],["                                    ",{}],["|",{"inverse":true}],["  3 ",{"fg":3}],["  ",{}],["// 1 u parent procesu koji je poz",{"fg":1}],["                                    ",{}]],"38":[["primjer_1.c [+]                                          11,36          All ",{"fg":3,"bg":4,"bold":true}],["primjer_1.c [+]                                          8,1            All",{"fg":0,"bg":4}]]},"cursor":{"x":39}}],[0.396432,{"lines":{"12":[["  0 ",{"fg":3}],["  ",{}],["// 1 u parent procesu koji je pozv",{"fg":1}],["                                   ",{}],["|",{"inverse":true}],["  3 ",{"fg":3}],["  ",{}],["// 1 u parent procesu koji je pozv",{"fg":1}],["                                   ",{}]],"38":[["primjer_1.c [+]                                          11,37          All ",{"fg":3,"bg":4,"bold":true}],["primjer_1.c [+]                                          8,1            All",{"fg":0,"bg":4}]]},"cursor":{"x":40}}],[0.131217,{"lines":{"12":[["  0 ",{"fg":3}],["  ",{}],["// 1 u parent procesu koji je pozva",{"fg":1}],["                                  ",{}],["|",{"inverse":true}],["  3 ",{"fg":3}],["  ",{}],["// 1 u parent procesu koji je pozva",{"fg":1}],["                                  ",{}]],"38":[["primjer_1.c [+]                                          11,38          All ",{"fg":3,"bg":4,"bold":true}],["primjer_1.c [+]                                          8,1            All",{"fg":0,"bg":4}]]},"cursor":{"x":41}}],[0.205077,{"lines":{"12":[["  0 ",{"fg":3}],["  ",{}],["// 1 u parent procesu koji je pozvao",{"fg":1}],["                                 ",{}],["|",{"inverse":true}],["  3 ",{"fg":3}],["  ",{}],["// 1 u parent procesu koji je pozvao",{"fg":1}],["                                 ",{}]],"38":[["primjer_1.c [+]                                          11,39          All ",{"fg":3,"bg":4,"bold":true}],["primjer_1.c [+]                                          8,1            All",{"fg":0,"bg":4}]]},"cursor":{"x":42}}],[0.3128,{"lines":{"12":[["  0 ",{"fg":3}],["  ",{}],["// 1 u parent procesu koji je pozvao ",{"fg":1}],["                                ",{}],["|",{"inverse":true}],["  3 ",{"fg":3}],["  ",{}],["// 1 u parent procesu koji je pozvao ",{"fg":1}],["                                ",{}]],"38":[["primjer_1.c [+]                                          11,40          All ",{"fg":3,"bg":4,"bold":true}],["primjer_1.c [+]                                          8,1            All",{"fg":0,"bg":4}]]},"cursor":{"x":43}}],[1.114519,{"lines":{"12":[["  0 ",{"fg":3}],["  ",{}],["// 1 u parent procesu koji je pozvao f",{"fg":1}],["                               ",{}],["|",{"inverse":true}],["  3 ",{"fg":3}],["  ",{}],["// 1 u parent procesu koji je pozvao f",{"fg":1}],["                               ",{}]],"38":[["primjer_1.c [+]                                          11,41          All ",{"fg":3,"bg":4,"bold":true}],["primjer_1.c [+]                                          8,1            All",{"fg":0,"bg":4}]]},"cursor":{"x":44}}],[0.236728,{"lines":{"12":[["  0 ",{"fg":3}],["  ",{}],["// 1 u parent procesu koji je pozvao fo",{"fg":1}],["                              ",{}],["|",{"inverse":true}],["  3 ",{"fg":3}],["  ",{}],["// 1 u parent procesu koji je pozvao fo",{"fg":1}],["                              ",{}]],"38":[["primjer_1.c [+]                                          11,42          All ",{"fg":3,"bg":4,"bold":true}],["primjer_1.c [+]                                          8,1            All",{"fg":0,"bg":4}]]},"cursor":{"x":45}}],[0.195436,{"lines":{"12":[["  0 ",{"fg":3}],["  ",{}],["// 1 u parent procesu koji je pozvao for",{"fg":1}],["                             ",{}],["|",{"inverse":true}],["  3 ",{"fg":3}],["  ",{}],["// 1 u parent procesu koji je pozvao for",{"fg":1}],["                             ",{}]],"38":[["primjer_1.c [+]                                          11,43          All ",{"fg":3,"bg":4,"bold":true}],["primjer_1.c [+]                                          8,1            All",{"fg":0,"bg":4}]]},"cursor":{"x":46}}],[0.13314,{"lines":{"12":[["  0 ",{"fg":3}],["  ",{}],["// 1 u parent procesu koji je pozvao fork",{"fg":1}],["                            ",{}],["|",{"inverse":true}],["  3 ",{"fg":3}],["  ",{}],["// 1 u parent procesu koji je pozvao fork",{"fg":1}],["                            ",{}]],"38":[["primjer_1.c [+]                                          11,44          All ",{"fg":3,"bg":4,"bold":true}],["primjer_1.c [+]                                          8,1            All",{"fg":0,"bg":4}]]},"cursor":{"x":47}}],[0.12331,{"lines":{"12":[["  0 ",{"fg":3}],["  ",{}],["// 1 u parent procesu koji je pozvao fork ",{"fg":1}],["                           ",{}],["|",{"inverse":true}],["  3 ",{"fg":3}],["  ",{}],["// 1 u parent procesu koji je pozvao fork ",{"fg":1}],["                           ",{}]],"38":[["primjer_1.c [+]                                          11,45          All ",{"fg":3,"bg":4,"bold":true}],["primjer_1.c [+]                                          8,1            All",{"fg":0,"bg":4}]]},"cursor":{"x":48}}],[0.383939,{"lines":{"12":[["  0 ",{"fg":3}],["  ",{}],["// 1 u parent procesu koji je pozvao fork f",{"fg":1}],["                          ",{}],["|",{"inverse":true}],["  3 ",{"fg":3}],["  ",{}],["// 1 u parent procesu koji je pozvao fork f",{"fg":1}],["                          ",{}]],"38":[["primjer_1.c [+]                                          11,46          All ",{"fg":3,"bg":4,"bold":true}],["primjer_1.c [+]                                          8,1            All",{"fg":0,"bg":4}]]},"cursor":{"x":49}}],[0.408883,{"lines":{"12":[["  0 ",{"fg":3}],["  ",{}],["// 1 u parent procesu koji je pozvao fork f-",{"fg":1}],["                         ",{}],["|",{"inverse":true}],["  3 ",{"fg":3}],["  ",{}],["// 1 u parent procesu koji je pozvao fork f-",{"fg":1}],["                         ",{}]],"38":[["primjer_1.c [+]                                          11,47          All ",{"fg":3,"bg":4,"bold":true}],["primjer_1.c [+]                                          8,1            All",{"fg":0,"bg":4}]]},"cursor":{"x":50}}],[0.418172,{"lines":{"12":[["  0 ",{"fg":3}],["  ",{}],["// 1 u parent procesu koji je pozvao fork f-j",{"fg":1}],["                        ",{}],["|",{"inverse":true}],["  3 ",{"fg":3}],["  ",{}],["// 1 u parent procesu koji je pozvao fork f-j",{"fg":1}],["                        ",{}]],"38":[["primjer_1.c [+]                                          11,48          All ",{"fg":3,"bg":4,"bold":true}],["primjer_1.c [+]                                          8,1            All",{"fg":0,"bg":4}]]},"cursor":{"x":51}}],[0.239619,{"lines":{"12":[["  0 ",{"fg":3}],["  ",{}],["// 1 u parent procesu koji je pozvao fork f-ju",{"fg":1}],["                       ",{}],["|",{"inverse":true}],["  3 ",{"fg":3}],["  ",{}],["// 1 u parent procesu koji je pozvao fork f-ju",{"fg":1}],["                       ",{}]],"38":[["primjer_1.c [+]                                          11,49          All ",{"fg":3,"bg":4,"bold":true}],["primjer_1.c [+]                                          8,1            All",{"fg":0,"bg":4}]]},"cursor":{"x":52}}],[1.217788,{"lines":{"39":[["                                                                                                                                                       ",{}]]},"cursor":{"x":51}}],[1.002743,{"lines":{"38":[["primjer_1.c [+]                                          11,48          All ",{"fg":3,"bg":4,"bold":true}],["primjer_1.c [+]                                          8,1            All",{"fg":0,"bg":4}]]}}],[1.762479,{"lines":{"0":[[" 11 ",{"fg":3}],["#include",{"fg":5}],["<stdio.h>",{"fg":2}],["                                                      ",{}],["|",{"inverse":true}],["  7 ",{"fg":3}],["#include",{"fg":5}],["<stdio.h>",{"fg":2}],["                                                      ",{}]],"1":[[" 10 ",{"fg":3}],["#include",{"fg":5}],["<unistd.h>",{"fg":2}],[" ",{}],["/* zaglavlje u kojem je deklarisana getpid() funkcij",{"fg":1}],["|",{"inverse":true}],["  6 ",{"fg":3}],["#include",{"fg":5}],["<unistd.h>",{"fg":2}],[" ",{}],["/* zaglavlje u kojem je deklarisana getpid() funkcij",{"fg":1}]],"3":[["  9 ",{"fg":3}],["#include",{"fg":5}],["<sys/types.h>",{"fg":2}],[" ",{}],["/* zaglavlje u kojem je definisan tip pid_t →  un",{"fg":1}],["|",{"inverse":true}],["  5 ",{"fg":3}],["#include",{"fg":5}],["<sys/types.h>",{"fg":2}],[" ",{}],["/* zaglavlje u kojem je definisan tip pid_t →  un",{"fg":1}]],"5":[["  8 ",{"fg":3}],["int",{"fg":4,"bold":true}],[" main()                                                             ",{}],["|",{"inverse":true}],["  4 ",{"fg":3}],["int",{"fg":4,"bold":true}],[" main()                                                             ",{}]],"6":[["  7 ",{"fg":3}],["{                                                                      ",{}],["|",{"inverse":true}],["  3 ",{"fg":3}],["{                                                                      ",{}]],"7":[["  6 ",{"fg":3}],["  pid_t childPID;                                                      ",{}],["|",{"inverse":true}],["  2 ",{"fg":3}],["  pid_t childPID;                                                      ",{}]],"8":[["  5 ",{"fg":3}],["  pid_t mojPID = getpid();                                             ",{}],["|",{"inverse":true}],["  1 ",{"fg":3}],["  pid_t mojPID = getpid();                                             ",{}]],"9":[["  4 ",{"fg":3}],["  childPID = fork();                                                   ",{}],["|",{"inverse":true}],["  0 ",{"fg":3}],["  childPID = fork();                                                   ",{}]],"10":[["  3 ",{"fg":3}],["  ",{}],["// f-ja fork vraca -1 ukoliko je greska",{"fg":1}],["                              ",{}],["|",{"inverse":true}],["  1 ",{"fg":3}],["  ",{}],["// f-ja fork vraca -1 ukoliko je greska",{"fg":1}],["                              ",{}]],"11":[["  2 ",{"fg":3}],["  ",{}],["// 0 u kreiranom child proces-u",{"fg":1}],["                                      ",{}],["|",{"inverse":true}],["  2 ",{"fg":3}],["  ",{}],["// 0 u kreiranom child proces-u",{"fg":1}],["                                      ",{}]],"12":[["  1 ",{"fg":3}],["  ",{}],["// 1 u parent procesu koji je pozvao fork f-ju",{"fg":1}],["                       ",{}],["|",{"inverse":true}],["  3 ",{"fg":3}],["  ",{}],["// 1 u parent procesu koji je pozvao fork f-ju",{"fg":1}],["                       ",{}]],"13":[["  0 ",{"fg":3}],["  ",{}],["if",{"fg":4,"bold":true}],["(",{"bg":6}],["childPID == -",{}],["1",{"fg":2}],[")",{"bg":6}],["                                                   ",{}],["|",{"inverse":true}],["  4 ",{"fg":3}],["  ",{}],["if",{"fg":4,"bold":true}],["(childPID == -",{}],["1",{"fg":2}],[")                                                   ",{}]],"14":[["  1 ",{"fg":3}],["  {                                                                    ",{}],["|",{"inverse":true}],["  5 ",{"fg":3}],["  {                                                                    ",{}]],"15":[["  2 ",{"fg":3}],["    error(",{}],["\"Kreiranje procesa neuspjesno! :(\"",{"fg":2}],[");                         ",{}],["|",{"inverse":true}],["  6 ",{"fg":3}],["    error(",{}],["\"Kreiranje procesa neuspjesno! :(\"",{"fg":2}],[");                         ",{}]],"16":[["  3 ",{"fg":3}],["    ",{}],["return",{"fg":4,"bold":true}],[" ",{}],["1",{"fg":2}],[";                                                          ",{}],["|",{"inverse":true}],["  7 ",{"fg":3}],["    ",{}],["return",{"fg":4,"bold":true}],[" ",{}],["1",{"fg":2}],[";                                                          ",{}]],"17":[["  4 ",{"fg":3}],["  }                                                                    ",{}],["|",{"inverse":true}],["  8 ",{"fg":3}],["  }                                                                    ",{}]],"18":[["  5 ",{"fg":3}],["  ",{}],["if",{"fg":4,"bold":true}],[" (childPID == ",{}],["0",{"fg":2}],[")                                                   ",{}],["|",{"inverse":true}],["  9 ",{"fg":3}],["  ",{}],["if",{"fg":4,"bold":true}],[" (childPID == ",{}],["0",{"fg":2}],[")                                                   ",{}]],"19":[["  6 ",{"fg":3}],["    printf(",{}],["\"Child proces sa PID = ",{"fg":2}],["%ld",{"fg":1,"bold":true}],[", ID = ",{"fg":2}],["%ld\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[", (",{}],["long",{"fg":4,"bold":true}],[")getpid(), (",{}],["lo",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 10 ",{"fg":3}],["    printf(",{}],["\"Child proces sa PID = ",{"fg":2}],["%ld",{"fg":1,"bold":true}],[", ID = ",{"fg":2}],["%ld\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[", (",{}],["long",{"fg":4,"bold":true}],[")getpid(), (",{}],["lo",{"fg":4,"bold":true}]],"21":[["  7 ",{"fg":3}],["  ",{}],["else",{"fg":4,"bold":true}],["                                                                 ",{}],["|",{"inverse":true}],[" 11 ",{"fg":3}],["  ",{}],["else",{"fg":4,"bold":true}],["                                                                 ",{}]],"22":[["  8 ",{"fg":3}],["    printf(",{}],["\"Parent proces sa PID = ",{"fg":2}],["%ld",{"fg":1,"bold":true}],[", ID = ",{"fg":2}],["%ld\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[", (",{}],["long",{"fg":4,"bold":true}],[")getpid(), (",{}],["l",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 12 ",{"fg":3}],["    printf(",{}],["\"Parent proces sa PID = ",{"fg":2}],["%ld",{"fg":1,"bold":true}],[", ID = ",{"fg":2}],["%ld\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[", (",{}],["long",{"fg":4,"bold":true}],[")getpid(), (",{}],["l",{"fg":4,"bold":true}]],"24":[["  9 ",{"fg":3}],["  ",{}],["return",{"fg":4,"bold":true}],[" ",{}],["0",{"fg":2}],[";                                                            ",{}],["|",{"inverse":true}],[" 13 ",{"fg":3}],["  ",{}],["return",{"fg":4,"bold":true}],[" ",{}],["0",{"fg":2}],[";                                                            ",{}]],"25":[[" 10 ",{"fg":3}],["}                                                                      ",{}],["|",{"inverse":true}],[" 14 ",{"fg":3}],["}                                                                      ",{}]],"38":[["primjer_1.c [+]                                          12,20          All ",{"fg":3,"bg":4,"bold":true}],["primjer_1.c [+]                                          8,1            All",{"fg":0,"bg":4}]]},"cursor":{"x":23,"y":13}}],[3.007015,{"lines":{"0":[[" 12 ",{"fg":3}],["#include",{"fg":5}],["<stdio.h>",{"fg":2}],["                                                      ",{}],["|",{"inverse":true}],["  7 ",{"fg":3}],["#include",{"fg":5}],["<stdio.h>",{"fg":2}],["                                                      ",{}]],"1":[[" 11 ",{"fg":3}],["#include",{"fg":5}],["<unistd.h>",{"fg":2}],[" ",{}],["/* zaglavlje u kojem je deklarisana getpid() funkcij",{"fg":1}],["|",{"inverse":true}],["  6 ",{"fg":3}],["#include",{"fg":5}],["<unistd.h>",{"fg":2}],[" ",{}],["/* zaglavlje u kojem je deklarisana getpid() funkcij",{"fg":1}]],"3":[[" 10 ",{"fg":3}],["#include",{"fg":5}],["<sys/types.h>",{"fg":2}],[" ",{}],["/* zaglavlje u kojem je definisan tip pid_t →  un",{"fg":1}],["|",{"inverse":true}],["  5 ",{"fg":3}],["#include",{"fg":5}],["<sys/types.h>",{"fg":2}],[" ",{}],["/* zaglavlje u kojem je definisan tip pid_t →  un",{"fg":1}]],"5":[["  9 ",{"fg":3}],["int",{"fg":4,"bold":true}],[" main()                                                             ",{}],["|",{"inverse":true}],["  4 ",{"fg":3}],["int",{"fg":4,"bold":true}],[" main()                                                             ",{}]],"6":[["  8 ",{"fg":3}],["{                                                                      ",{}],["|",{"inverse":true}],["  3 ",{"fg":3}],["{                                                                      ",{}]],"7":[["  7 ",{"fg":3}],["  pid_t childPID;                                                      ",{}],["|",{"inverse":true}],["  2 ",{"fg":3}],["  pid_t childPID;                                                      ",{}]],"8":[["  6 ",{"fg":3}],["  pid_t mojPID = getpid();                                             ",{}],["|",{"inverse":true}],["  1 ",{"fg":3}],["  pid_t mojPID = getpid();                                             ",{}]],"9":[["  5 ",{"fg":3}],["  childPID = fork();                                                   ",{}],["|",{"inverse":true}],["  0 ",{"fg":3}],["  childPID = fork();                                                   ",{}]],"10":[["  4 ",{"fg":3}],["  ",{}],["// f-ja fork vraca -1 ukoliko je greska",{"fg":1}],["                              ",{}],["|",{"inverse":true}],["  1 ",{"fg":3}],["  ",{}],["// f-ja fork vraca -1 ukoliko je greska",{"fg":1}],["                              ",{}]],"11":[["  3 ",{"fg":3}],["  ",{}],["// 0 u kreiranom child proces-u",{"fg":1}],["                                      ",{}],["|",{"inverse":true}],["  2 ",{"fg":3}],["  ",{}],["// 0 u kreiranom child proces-u",{"fg":1}],["                                      ",{}]],"12":[["  2 ",{"fg":3}],["  ",{}],["// 1 u parent procesu koji je pozvao fork f-ju",{"fg":1}],["                       ",{}],["|",{"inverse":true}],["  3 ",{"fg":3}],["  ",{}],["// 1 u parent procesu koji je pozvao fork f-ju",{"fg":1}],["                       ",{}]],"13":[["  1 ",{"fg":3}],["  ",{}],["if",{"fg":4,"bold":true}],["(childPID == -",{}],["1",{"fg":2}],[")                                                   ",{}],["|",{"inverse":true}],["  4 ",{"fg":3}],["  ",{}],["if",{"fg":4,"bold":true}],["(childPID == -",{}],["1",{"fg":2}],[")                                                   ",{}]],"14":[["  0 ",{"fg":3}],["  ",{}],["{",{"bg":6}],["                                                                    ",{}],["|",{"inverse":true}],["  5 ",{"fg":3}],["  {                                                                    ",{}]],"15":[["  1 ",{"fg":3}],["    error(",{}],["\"Kreiranje procesa neuspjesno! :(\"",{"fg":2}],[");                         ",{}],["|",{"inverse":true}],["  6 ",{"fg":3}],["    error(",{}],["\"Kreiranje procesa neuspjesno! :(\"",{"fg":2}],[");                         ",{}]],"16":[["  2 ",{"fg":3}],["    ",{}],["return",{"fg":4,"bold":true}],[" ",{}],["1",{"fg":2}],[";                                                          ",{}],["|",{"inverse":true}],["  7 ",{"fg":3}],["    ",{}],["return",{"fg":4,"bold":true}],[" ",{}],["1",{"fg":2}],[";                                                          ",{}]],"17":[["  3 ",{"fg":3}],["  ",{}],["}",{"bg":6}],["                                                                    ",{}],["|",{"inverse":true}],["  8 ",{"fg":3}],["  }                                                                    ",{}]],"18":[["  4 ",{"fg":3}],["  ",{}],["if",{"fg":4,"bold":true}],[" (childPID == ",{}],["0",{"fg":2}],[")                                                   ",{}],["|",{"inverse":true}],["  9 ",{"fg":3}],["  ",{}],["if",{"fg":4,"bold":true}],[" (childPID == ",{}],["0",{"fg":2}],[")                                                   ",{}]],"19":[["  5 ",{"fg":3}],["    printf(",{}],["\"Child proces sa PID = ",{"fg":2}],["%ld",{"fg":1,"bold":true}],[", ID = ",{"fg":2}],["%ld\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[", (",{}],["long",{"fg":4,"bold":true}],[")getpid(), (",{}],["lo",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 10 ",{"fg":3}],["    printf(",{}],["\"Child proces sa PID = ",{"fg":2}],["%ld",{"fg":1,"bold":true}],[", ID = ",{"fg":2}],["%ld\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[", (",{}],["long",{"fg":4,"bold":true}],[")getpid(), (",{}],["lo",{"fg":4,"bold":true}]],"21":[["  6 ",{"fg":3}],["  ",{}],["else",{"fg":4,"bold":true}],["                                                                 ",{}],["|",{"inverse":true}],[" 11 ",{"fg":3}],["  ",{}],["else",{"fg":4,"bold":true}],["                                                                 ",{}]],"22":[["  7 ",{"fg":3}],["    printf(",{}],["\"Parent proces sa PID = ",{"fg":2}],["%ld",{"fg":1,"bold":true}],[", ID = ",{"fg":2}],["%ld\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[", (",{}],["long",{"fg":4,"bold":true}],[")getpid(), (",{}],["l",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 12 ",{"fg":3}],["    printf(",{}],["\"Parent proces sa PID = ",{"fg":2}],["%ld",{"fg":1,"bold":true}],[", ID = ",{"fg":2}],["%ld\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[", (",{}],["long",{"fg":4,"bold":true}],[")getpid(), (",{}],["l",{"fg":4,"bold":true}]],"24":[["  8 ",{"fg":3}],["  ",{}],["return",{"fg":4,"bold":true}],[" ",{}],["0",{"fg":2}],[";                                                            ",{}],["|",{"inverse":true}],[" 13 ",{"fg":3}],["  ",{}],["return",{"fg":4,"bold":true}],[" ",{}],["0",{"fg":2}],[";                                                            ",{}]],"25":[["  9 ",{"fg":3}],["}                                                                      ",{}],["|",{"inverse":true}],[" 14 ",{"fg":3}],["}                                                                      ",{}]],"38":[["primjer_1.c [+]                                          13,3           All ",{"fg":3,"bg":4,"bold":true}],["primjer_1.c [+]                                          8,1            All",{"fg":0,"bg":4}]]},"cursor":{"x":6,"y":14}}],[0.43783,{"lines":{"0":[[" 13 ",{"fg":3}],["#include",{"fg":5}],["<stdio.h>",{"fg":2}],["                                                      ",{}],["|",{"inverse":true}],["  7 ",{"fg":3}],["#include",{"fg":5}],["<stdio.h>",{"fg":2}],["                                                      ",{}]],"1":[[" 12 ",{"fg":3}],["#include",{"fg":5}],["<unistd.h>",{"fg":2}],[" ",{}],["/* zaglavlje u kojem je deklarisana getpid() funkcij",{"fg":1}],["|",{"inverse":true}],["  6 ",{"fg":3}],["#include",{"fg":5}],["<unistd.h>",{"fg":2}],[" ",{}],["/* zaglavlje u kojem je deklarisana getpid() funkcij",{"fg":1}]],"3":[[" 11 ",{"fg":3}],["#include",{"fg":5}],["<sys/types.h>",{"fg":2}],[" ",{}],["/* zaglavlje u kojem je definisan tip pid_t →  un",{"fg":1}],["|",{"inverse":true}],["  5 ",{"fg":3}],["#include",{"fg":5}],["<sys/types.h>",{"fg":2}],[" ",{}],["/* zaglavlje u kojem je definisan tip pid_t →  un",{"fg":1}]],"5":[[" 10 ",{"fg":3}],["int",{"fg":4,"bold":true}],[" main()                                                             ",{}],["|",{"inverse":true}],["  4 ",{"fg":3}],["int",{"fg":4,"bold":true}],[" main()                                                             ",{}]],"6":[["  9 ",{"fg":3}],["{                                                                      ",{}],["|",{"inverse":true}],["  3 ",{"fg":3}],["{                                                                      ",{}]],"7":[["  8 ",{"fg":3}],["  pid_t childPID;                                                      ",{}],["|",{"inverse":true}],["  2 ",{"fg":3}],["  pid_t childPID;                                                      ",{}]],"8":[["  7 ",{"fg":3}],["  pid_t mojPID = getpid();                                             ",{}],["|",{"inverse":true}],["  1 ",{"fg":3}],["  pid_t mojPID = getpid();                                             ",{}]],"9":[["  6 ",{"fg":3}],["  childPID = fork();                                                   ",{}],["|",{"inverse":true}],["  0 ",{"fg":3}],["  childPID = fork();                                                   ",{}]],"10":[["  5 ",{"fg":3}],["  ",{}],["// f-ja fork vraca -1 ukoliko je greska",{"fg":1}],["                              ",{}],["|",{"inverse":true}],["  1 ",{"fg":3}],["  ",{}],["// f-ja fork vraca -1 ukoliko je greska",{"fg":1}],["                              ",{}]],"11":[["  4 ",{"fg":3}],["  ",{}],["// 0 u kreiranom child proces-u",{"fg":1}],["                                      ",{}],["|",{"inverse":true}],["  2 ",{"fg":3}],["  ",{}],["// 0 u kreiranom child proces-u",{"fg":1}],["                                      ",{}]],"12":[["  3 ",{"fg":3}],["  ",{}],["// 1 u parent procesu koji je pozvao fork f-ju",{"fg":1}],["                       ",{}],["|",{"inverse":true}],["  3 ",{"fg":3}],["  ",{}],["// 1 u parent procesu koji je pozvao fork f-ju",{"fg":1}],["                       ",{}]],"13":[["  2 ",{"fg":3}],["  ",{}],["if",{"fg":4,"bold":true}],["(childPID == -",{}],["1",{"fg":2}],[")                                                   ",{}],["|",{"inverse":true}],["  4 ",{"fg":3}],["  ",{}],["if",{"fg":4,"bold":true}],["(childPID == -",{}],["1",{"fg":2}],[")                                                   ",{}]],"14":[["  1 ",{"fg":3}],["  {                                                                    ",{}],["|",{"inverse":true}],["  5 ",{"fg":3}],["  {                                                                    ",{}]],"15":[["  0 ",{"fg":3}],["    error(",{}],["\"Kreiranje procesa neuspjesno! :(\"",{"fg":2}],[");                         ",{}],["|",{"inverse":true}],["  6 ",{"fg":3}],["    error(",{}],["\"Kreiranje procesa neuspjesno! :(\"",{"fg":2}],[");                         ",{}]],"16":[["  1 ",{"fg":3}],["    ",{}],["return",{"fg":4,"bold":true}],[" ",{}],["1",{"fg":2}],[";                                                          ",{}],["|",{"inverse":true}],["  7 ",{"fg":3}],["    ",{}],["return",{"fg":4,"bold":true}],[" ",{}],["1",{"fg":2}],[";                                                          ",{}]],"17":[["  2 ",{"fg":3}],["  }                                                                    ",{}],["|",{"inverse":true}],["  8 ",{"fg":3}],["  }                                                                    ",{}]],"18":[["  3 ",{"fg":3}],["  ",{}],["if",{"fg":4,"bold":true}],[" (childPID == ",{}],["0",{"fg":2}],[")                                                   ",{}],["|",{"inverse":true}],["  9 ",{"fg":3}],["  ",{}],["if",{"fg":4,"bold":true}],[" (childPID == ",{}],["0",{"fg":2}],[")                                                   ",{}]],"19":[["  4 ",{"fg":3}],["    printf(",{}],["\"Child proces sa PID = ",{"fg":2}],["%ld",{"fg":1,"bold":true}],[", ID = ",{"fg":2}],["%ld\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[", (",{}],["long",{"fg":4,"bold":true}],[")getpid(), (",{}],["lo",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 10 ",{"fg":3}],["    printf(",{}],["\"Child proces sa PID = ",{"fg":2}],["%ld",{"fg":1,"bold":true}],[", ID = ",{"fg":2}],["%ld\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[", (",{}],["long",{"fg":4,"bold":true}],[")getpid(), (",{}],["lo",{"fg":4,"bold":true}]],"21":[["  5 ",{"fg":3}],["  ",{}],["else",{"fg":4,"bold":true}],["                                                                 ",{}],["|",{"inverse":true}],[" 11 ",{"fg":3}],["  ",{}],["else",{"fg":4,"bold":true}],["                                                                 ",{}]],"22":[["  6 ",{"fg":3}],["    printf(",{}],["\"Parent proces sa PID = ",{"fg":2}],["%ld",{"fg":1,"bold":true}],[", ID = ",{"fg":2}],["%ld\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[", (",{}],["long",{"fg":4,"bold":true}],[")getpid(), (",{}],["l",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 12 ",{"fg":3}],["    printf(",{}],["\"Parent proces sa PID = ",{"fg":2}],["%ld",{"fg":1,"bold":true}],[", ID = ",{"fg":2}],["%ld\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[", (",{}],["long",{"fg":4,"bold":true}],[")getpid(), (",{}],["l",{"fg":4,"bold":true}]],"24":[["  7 ",{"fg":3}],["  ",{}],["return",{"fg":4,"bold":true}],[" ",{}],["0",{"fg":2}],[";                                                            ",{}],["|",{"inverse":true}],[" 13 ",{"fg":3}],["  ",{}],["return",{"fg":4,"bold":true}],[" ",{}],["0",{"fg":2}],[";                                                            ",{}]],"25":[["  8 ",{"fg":3}],["}                                                                      ",{}],["|",{"inverse":true}],[" 14 ",{"fg":3}],["}                                                                      ",{}]],"38":[["primjer_1.c [+]                                          14,46          All ",{"fg":3,"bg":4,"bold":true}],["primjer_1.c [+]                                          8,1            All",{"fg":0,"bg":4}]]},"cursor":{"x":49,"y":15}}],[0.449344,{"lines":{"0":[[" 14 ",{"fg":3}],["#include",{"fg":5}],["<stdio.h>",{"fg":2}],["                                                      ",{}],["|",{"inverse":true}],["  7 ",{"fg":3}],["#include",{"fg":5}],["<stdio.h>",{"fg":2}],["                                                      ",{}]],"1":[[" 13 ",{"fg":3}],["#include",{"fg":5}],["<unistd.h>",{"fg":2}],[" ",{}],["/* zaglavlje u kojem je deklarisana getpid() funkcij",{"fg":1}],["|",{"inverse":true}],["  6 ",{"fg":3}],["#include",{"fg":5}],["<unistd.h>",{"fg":2}],[" ",{}],["/* zaglavlje u kojem je deklarisana getpid() funkcij",{"fg":1}]],"3":[[" 12 ",{"fg":3}],["#include",{"fg":5}],["<sys/types.h>",{"fg":2}],[" ",{}],["/* zaglavlje u kojem je definisan tip pid_t →  un",{"fg":1}],["|",{"inverse":true}],["  5 ",{"fg":3}],["#include",{"fg":5}],["<sys/types.h>",{"fg":2}],[" ",{}],["/* zaglavlje u kojem je definisan tip pid_t →  un",{"fg":1}]],"5":[[" 11 ",{"fg":3}],["int",{"fg":4,"bold":true}],[" main()                                                             ",{}],["|",{"inverse":true}],["  4 ",{"fg":3}],["int",{"fg":4,"bold":true}],[" main()                                                             ",{}]],"6":[[" 10 ",{"fg":3}],["{                                                                      ",{}],["|",{"inverse":true}],["  3 ",{"fg":3}],["{                                                                      ",{}]],"7":[["  9 ",{"fg":3}],["  pid_t childPID;                                                      ",{}],["|",{"inverse":true}],["  2 ",{"fg":3}],["  pid_t childPID;                                                      ",{}]],"8":[["  8 ",{"fg":3}],["  pid_t mojPID = getpid();                                             ",{}],["|",{"inverse":true}],["  1 ",{"fg":3}],["  pid_t mojPID = getpid();                                             ",{}]],"9":[["  7 ",{"fg":3}],["  childPID = fork();                                                   ",{}],["|",{"inverse":true}],["  0 ",{"fg":3}],["  childPID = fork();                                                   ",{}]],"10":[["  6 ",{"fg":3}],["  ",{}],["// f-ja fork vraca -1 ukoliko je greska",{"fg":1}],["                              ",{}],["|",{"inverse":true}],["  1 ",{"fg":3}],["  ",{}],["// f-ja fork vraca -1 ukoliko je greska",{"fg":1}],["                              ",{}]],"11":[["  5 ",{"fg":3}],["  ",{}],["// 0 u kreiranom child proces-u",{"fg":1}],["                                      ",{}],["|",{"inverse":true}],["  2 ",{"fg":3}],["  ",{}],["// 0 u kreiranom child proces-u",{"fg":1}],["                                      ",{}]],"12":[["  4 ",{"fg":3}],["  ",{}],["// 1 u parent procesu koji je pozvao fork f-ju",{"fg":1}],["                       ",{}],["|",{"inverse":true}],["  3 ",{"fg":3}],["  ",{}],["// 1 u parent procesu koji je pozvao fork f-ju",{"fg":1}],["                       ",{}]],"13":[["  3 ",{"fg":3}],["  ",{}],["if",{"fg":4,"bold":true}],["(childPID == -",{}],["1",{"fg":2}],[")                                                   ",{}],["|",{"inverse":true}],["  4 ",{"fg":3}],["  ",{}],["if",{"fg":4,"bold":true}],["(childPID == -",{}],["1",{"fg":2}],[")                                                   ",{}]],"14":[["  2 ",{"fg":3}],["  {                                                                    ",{}],["|",{"inverse":true}],["  5 ",{"fg":3}],["  {                                                                    ",{}]],"15":[["  1 ",{"fg":3}],["    error(",{}],["\"Kreiranje procesa neuspjesno! :(\"",{"fg":2}],[");                         ",{}],["|",{"inverse":true}],["  6 ",{"fg":3}],["    error(",{}],["\"Kreiranje procesa neuspjesno! :(\"",{"fg":2}],[");                         ",{}]],"16":[["  0 ",{"fg":3}],["    ",{}],["return",{"fg":4,"bold":true}],[" ",{}],["1",{"fg":2}],[";                                                          ",{}],["|",{"inverse":true}],["  7 ",{"fg":3}],["    ",{}],["return",{"fg":4,"bold":true}],[" ",{}],["1",{"fg":2}],[";                                                          ",{}]],"17":[["  1 ",{"fg":3}],["  }                                                                    ",{}],["|",{"inverse":true}],["  8 ",{"fg":3}],["  }                                                                    ",{}]],"18":[["  2 ",{"fg":3}],["  ",{}],["if",{"fg":4,"bold":true}],[" (childPID == ",{}],["0",{"fg":2}],[")                                                   ",{}],["|",{"inverse":true}],["  9 ",{"fg":3}],["  ",{}],["if",{"fg":4,"bold":true}],[" (childPID == ",{}],["0",{"fg":2}],[")                                                   ",{}]],"19":[["  3 ",{"fg":3}],["    printf(",{}],["\"Child proces sa PID = ",{"fg":2}],["%ld",{"fg":1,"bold":true}],[", ID = ",{"fg":2}],["%ld\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[", (",{}],["long",{"fg":4,"bold":true}],[")getpid(), (",{}],["lo",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 10 ",{"fg":3}],["    printf(",{}],["\"Child proces sa PID = ",{"fg":2}],["%ld",{"fg":1,"bold":true}],[", ID = ",{"fg":2}],["%ld\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[", (",{}],["long",{"fg":4,"bold":true}],[")getpid(), (",{}],["lo",{"fg":4,"bold":true}]],"21":[["  4 ",{"fg":3}],["  ",{}],["else",{"fg":4,"bold":true}],["                                                                 ",{}],["|",{"inverse":true}],[" 11 ",{"fg":3}],["  ",{}],["else",{"fg":4,"bold":true}],["                                                                 ",{}]],"22":[["  5 ",{"fg":3}],["    printf(",{}],["\"Parent proces sa PID = ",{"fg":2}],["%ld",{"fg":1,"bold":true}],[", ID = ",{"fg":2}],["%ld\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[", (",{}],["long",{"fg":4,"bold":true}],[")getpid(), (",{}],["l",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 12 ",{"fg":3}],["    printf(",{}],["\"Parent proces sa PID = ",{"fg":2}],["%ld",{"fg":1,"bold":true}],[", ID = ",{"fg":2}],["%ld\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[", (",{}],["long",{"fg":4,"bold":true}],[")getpid(), (",{}],["l",{"fg":4,"bold":true}]],"24":[["  6 ",{"fg":3}],["  ",{}],["return",{"fg":4,"bold":true}],[" ",{}],["0",{"fg":2}],[";                                                            ",{}],["|",{"inverse":true}],[" 13 ",{"fg":3}],["  ",{}],["return",{"fg":4,"bold":true}],[" ",{}],["0",{"fg":2}],[";                                                            ",{}]],"25":[["  7 ",{"fg":3}],["}                                                                      ",{}],["|",{"inverse":true}],[" 14 ",{"fg":3}],["}                                                                      ",{}]],"38":[["primjer_1.c [+]                                          15,13          All ",{"fg":3,"bg":4,"bold":true}],["primjer_1.c [+]                                          8,1            All",{"fg":0,"bg":4}]]},"cursor":{"x":16,"y":16}}],[0.502207,{"lines":{"0":[[" 15 ",{"fg":3}],["#include",{"fg":5}],["<stdio.h>",{"fg":2}],["                                                      ",{}],["|",{"inverse":true}],["  7 ",{"fg":3}],["#include",{"fg":5}],["<stdio.h>",{"fg":2}],["                                                      ",{}]],"1":[[" 14 ",{"fg":3}],["#include",{"fg":5}],["<unistd.h>",{"fg":2}],[" ",{}],["/* zaglavlje u kojem je deklarisana getpid() funkcij",{"fg":1}],["|",{"inverse":true}],["  6 ",{"fg":3}],["#include",{"fg":5}],["<unistd.h>",{"fg":2}],[" ",{}],["/* zaglavlje u kojem je deklarisana getpid() funkcij",{"fg":1}]],"3":[[" 13 ",{"fg":3}],["#include",{"fg":5}],["<sys/types.h>",{"fg":2}],[" ",{}],["/* zaglavlje u kojem je definisan tip pid_t →  un",{"fg":1}],["|",{"inverse":true}],["  5 ",{"fg":3}],["#include",{"fg":5}],["<sys/types.h>",{"fg":2}],[" ",{}],["/* zaglavlje u kojem je definisan tip pid_t →  un",{"fg":1}]],"5":[[" 12 ",{"fg":3}],["int",{"fg":4,"bold":true}],[" main()                                                             ",{}],["|",{"inverse":true}],["  4 ",{"fg":3}],["int",{"fg":4,"bold":true}],[" main()                                                             ",{}]],"6":[[" 11 ",{"fg":3}],["{                                                                      ",{}],["|",{"inverse":true}],["  3 ",{"fg":3}],["{                                                                      ",{}]],"7":[[" 10 ",{"fg":3}],["  pid_t childPID;                                                      ",{}],["|",{"inverse":true}],["  2 ",{"fg":3}],["  pid_t childPID;                                                      ",{}]],"8":[["  9 ",{"fg":3}],["  pid_t mojPID = getpid();                                             ",{}],["|",{"inverse":true}],["  1 ",{"fg":3}],["  pid_t mojPID = getpid();                                             ",{}]],"9":[["  8 ",{"fg":3}],["  childPID = fork();                                                   ",{}],["|",{"inverse":true}],["  0 ",{"fg":3}],["  childPID = fork();                                                   ",{}]],"10":[["  7 ",{"fg":3}],["  ",{}],["// f-ja fork vraca -1 ukoliko je greska",{"fg":1}],["                              ",{}],["|",{"inverse":true}],["  1 ",{"fg":3}],["  ",{}],["// f-ja fork vraca -1 ukoliko je greska",{"fg":1}],["                              ",{}]],"11":[["  6 ",{"fg":3}],["  ",{}],["// 0 u kreiranom child proces-u",{"fg":1}],["                                      ",{}],["|",{"inverse":true}],["  2 ",{"fg":3}],["  ",{}],["// 0 u kreiranom child proces-u",{"fg":1}],["                                      ",{}]],"12":[["  5 ",{"fg":3}],["  ",{}],["// 1 u parent procesu koji je pozvao fork f-ju",{"fg":1}],["                       ",{}],["|",{"inverse":true}],["  3 ",{"fg":3}],["  ",{}],["// 1 u parent procesu koji je pozvao fork f-ju",{"fg":1}],["                       ",{}]],"13":[["  4 ",{"fg":3}],["  ",{}],["if",{"fg":4,"bold":true}],["(childPID == -",{}],["1",{"fg":2}],[")                                                   ",{}],["|",{"inverse":true}],["  4 ",{"fg":3}],["  ",{}],["if",{"fg":4,"bold":true}],["(childPID == -",{}],["1",{"fg":2}],[")                                                   ",{}]],"14":[["  3 ",{"fg":3}],["  ",{}],["{",{"bg":6}],["                                                                    ",{}],["|",{"inverse":true}],["  5 ",{"fg":3}],["  {                                                                    ",{}]],"15":[["  2 ",{"fg":3}],["    error(",{}],["\"Kreiranje procesa neuspjesno! :(\"",{"fg":2}],[");                         ",{}],["|",{"inverse":true}],["  6 ",{"fg":3}],["    error(",{}],["\"Kreiranje procesa neuspjesno! :(\"",{"fg":2}],[");                         ",{}]],"16":[["  1 ",{"fg":3}],["    ",{}],["return",{"fg":4,"bold":true}],[" ",{}],["1",{"fg":2}],[";                                                          ",{}],["|",{"inverse":true}],["  7 ",{"fg":3}],["    ",{}],["return",{"fg":4,"bold":true}],[" ",{}],["1",{"fg":2}],[";                                                          ",{}]],"17":[["  0 ",{"fg":3}],["  ",{}],["}",{"bg":6}],["                                                                    ",{}],["|",{"inverse":true}],["  8 ",{"fg":3}],["  }                                                                    ",{}]],"18":[["  1 ",{"fg":3}],["  ",{}],["if",{"fg":4,"bold":true}],[" (childPID == ",{}],["0",{"fg":2}],[")                                                   ",{}],["|",{"inverse":true}],["  9 ",{"fg":3}],["  ",{}],["if",{"fg":4,"bold":true}],[" (childPID == ",{}],["0",{"fg":2}],[")                                                   ",{}]],"19":[["  2 ",{"fg":3}],["    printf(",{}],["\"Child proces sa PID = ",{"fg":2}],["%ld",{"fg":1,"bold":true}],[", ID = ",{"fg":2}],["%ld\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[", (",{}],["long",{"fg":4,"bold":true}],[")getpid(), (",{}],["lo",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 10 ",{"fg":3}],["    printf(",{}],["\"Child proces sa PID = ",{"fg":2}],["%ld",{"fg":1,"bold":true}],[", ID = ",{"fg":2}],["%ld\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[", (",{}],["long",{"fg":4,"bold":true}],[")getpid(), (",{}],["lo",{"fg":4,"bold":true}]],"21":[["  3 ",{"fg":3}],["  ",{}],["else",{"fg":4,"bold":true}],["                                                                 ",{}],["|",{"inverse":true}],[" 11 ",{"fg":3}],["  ",{}],["else",{"fg":4,"bold":true}],["                                                                 ",{}]],"22":[["  4 ",{"fg":3}],["    printf(",{}],["\"Parent proces sa PID = ",{"fg":2}],["%ld",{"fg":1,"bold":true}],[", ID = ",{"fg":2}],["%ld\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[", (",{}],["long",{"fg":4,"bold":true}],[")getpid(), (",{}],["l",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 12 ",{"fg":3}],["    printf(",{}],["\"Parent proces sa PID = ",{"fg":2}],["%ld",{"fg":1,"bold":true}],[", ID = ",{"fg":2}],["%ld\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[", (",{}],["long",{"fg":4,"bold":true}],[")getpid(), (",{}],["l",{"fg":4,"bold":true}]],"24":[["  5 ",{"fg":3}],["  ",{}],["return",{"fg":4,"bold":true}],[" ",{}],["0",{"fg":2}],[";                                                            ",{}],["|",{"inverse":true}],[" 13 ",{"fg":3}],["  ",{}],["return",{"fg":4,"bold":true}],[" ",{}],["0",{"fg":2}],[";                                                            ",{}]],"25":[["  6 ",{"fg":3}],["}                                                                      ",{}],["|",{"inverse":true}],[" 14 ",{"fg":3}],["}                                                                      ",{}]],"38":[["primjer_1.c [+]                                          16,3           All ",{"fg":3,"bg":4,"bold":true}],["primjer_1.c [+]                                          8,1            All",{"fg":0,"bg":4}]]},"cursor":{"x":6,"y":17}}],[0.59107,{"lines":{"0":[[" 16 ",{"fg":3}],["#include",{"fg":5}],["<stdio.h>",{"fg":2}],["                                                      ",{}],["|",{"inverse":true}],["  7 ",{"fg":3}],["#include",{"fg":5}],["<stdio.h>",{"fg":2}],["                                                      ",{}]],"1":[[" 15 ",{"fg":3}],["#include",{"fg":5}],["<unistd.h>",{"fg":2}],[" ",{}],["/* zaglavlje u kojem je deklarisana getpid() funkcij",{"fg":1}],["|",{"inverse":true}],["  6 ",{"fg":3}],["#include",{"fg":5}],["<unistd.h>",{"fg":2}],[" ",{}],["/* zaglavlje u kojem je deklarisana getpid() funkcij",{"fg":1}]]},"cursor":{"x":23,"y":18}}],[0.005360999999999999,{"lines":{"3":[[" 14 ",{"fg":3}],["#include",{"fg":5}],["<sys/types.h>",{"fg":2}],[" ",{}],["/* zaglavlje u kojem je definisan tip pid_t →  un",{"fg":1}],["|",{"inverse":true}],["  5 ",{"fg":3}],["#include",{"fg":5}],["<sys/types.h>",{"fg":2}],[" ",{}],["/* zaglavlje u kojem je definisan tip pid_t →  un",{"fg":1}]],"5":[[" 13 ",{"fg":3}],["int",{"fg":4,"bold":true}],[" main()                                                             ",{}],["|",{"inverse":true}],["  4 ",{"fg":3}],["int",{"fg":4,"bold":true}],[" main()                                                             ",{}]],"6":[[" 12 ",{"fg":3}],["{                                                                      ",{}],["|",{"inverse":true}],["  3 ",{"fg":3}],["{                                                                      ",{}]],"7":[[" 11 ",{"fg":3}],["  pid_t childPID;                                                      ",{}],["|",{"inverse":true}],["  2 ",{"fg":3}],["  pid_t childPID;                                                      ",{}]],"8":[[" 10 ",{"fg":3}],["  pid_t mojPID = getpid();                                             ",{}],["|",{"inverse":true}],["  1 ",{"fg":3}],["  pid_t mojPID = getpid();                                             ",{}]],"9":[["  9 ",{"fg":3}],["  childPID = fork();                                                   ",{}],["|",{"inverse":true}],["  0 ",{"fg":3}],["  childPID = fork();                                                   ",{}]],"10":[["  8 ",{"fg":3}],["  ",{}],["// f-ja fork vraca -1 ukoliko je greska",{"fg":1}],["                              ",{}],["|",{"inverse":true}],["  1 ",{"fg":3}],["  ",{}],["// f-ja fork vraca -1 ukoliko je greska",{"fg":1}],["                              ",{}]],"11":[["  7 ",{"fg":3}],["  ",{}],["// 0 u kreiranom child proces-u",{"fg":1}],["                                      ",{}],["|",{"inverse":true}],["  2 ",{"fg":3}],["  ",{}],["// 0 u kreiranom child proces-u",{"fg":1}],["                                      ",{}]],"12":[["  6 ",{"fg":3}],["  ",{}],["// 1 u parent procesu koji je pozvao fork f-ju",{"fg":1}],["                       ",{}],["|",{"inverse":true}],["  3 ",{"fg":3}],["  ",{}],["// 1 u parent procesu koji je pozvao fork f-ju",{"fg":1}],["                       ",{}]],"13":[["  5 ",{"fg":3}],["  ",{}],["if",{"fg":4,"bold":true}],["(childPID == -",{}],["1",{"fg":2}],[")                                                   ",{}],["|",{"inverse":true}],["  4 ",{"fg":3}],["  ",{}],["if",{"fg":4,"bold":true}],["(childPID == -",{}],["1",{"fg":2}],[")                                                   ",{}]],"14":[["  4 ",{"fg":3}],["  {                                                                    ",{}],["|",{"inverse":true}],["  5 ",{"fg":3}],["  {                                                                    ",{}]],"15":[["  3 ",{"fg":3}],["    error(",{}],["\"Kreiranje procesa neuspjesno! :(\"",{"fg":2}],[");                         ",{}],["|",{"inverse":true}],["  6 ",{"fg":3}],["    error(",{}],["\"Kreiranje procesa neuspjesno! :(\"",{"fg":2}],[");                         ",{}]],"16":[["  2 ",{"fg":3}],["    ",{}],["return",{"fg":4,"bold":true}],[" ",{}],["1",{"fg":2}],[";                                                          ",{}],["|",{"inverse":true}],["  7 ",{"fg":3}],["    ",{}],["return",{"fg":4,"bold":true}],[" ",{}],["1",{"fg":2}],[";                                                          ",{}]],"17":[["  1 ",{"fg":3}],["  }                                                                    ",{}],["|",{"inverse":true}],["  8 ",{"fg":3}],["  }                                                                    ",{}]],"18":[["  0 ",{"fg":3}],["  ",{}],["if",{"fg":4,"bold":true}],[" ",{}],["(",{"bg":6}],["childPID == ",{}],["0",{"fg":2}],[")",{"bg":6}],["                                                   ",{}],["|",{"inverse":true}],["  9 ",{"fg":3}],["  ",{}],["if",{"fg":4,"bold":true}],[" (childPID == ",{}],["0",{"fg":2}],[")                                                   ",{}]],"19":[["  1 ",{"fg":3}],["    printf(",{}],["\"Child proces sa PID = ",{"fg":2}],["%ld",{"fg":1,"bold":true}],[", ID = ",{"fg":2}],["%ld\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[", (",{}],["long",{"fg":4,"bold":true}],[")getpid(), (",{}],["lo",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 10 ",{"fg":3}],["    printf(",{}],["\"Child proces sa PID = ",{"fg":2}],["%ld",{"fg":1,"bold":true}],[", ID = ",{"fg":2}],["%ld\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[", (",{}],["long",{"fg":4,"bold":true}],[")getpid(), (",{}],["lo",{"fg":4,"bold":true}]],"21":[["  2 ",{"fg":3}],["  ",{}],["else",{"fg":4,"bold":true}],["                                                                 ",{}],["|",{"inverse":true}],[" 11 ",{"fg":3}],["  ",{}],["else",{"fg":4,"bold":true}],["                                                                 ",{}]],"22":[["  3 ",{"fg":3}],["    printf(",{}],["\"Parent proces sa PID = ",{"fg":2}],["%ld",{"fg":1,"bold":true}],[", ID = ",{"fg":2}],["%ld\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[", (",{}],["long",{"fg":4,"bold":true}],[")getpid(), (",{}],["l",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 12 ",{"fg":3}],["    printf(",{}],["\"Parent proces sa PID = ",{"fg":2}],["%ld",{"fg":1,"bold":true}],[", ID = ",{"fg":2}],["%ld\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[", (",{}],["long",{"fg":4,"bold":true}],[")getpid(), (",{}],["l",{"fg":4,"bold":true}]],"24":[["  4 ",{"fg":3}],["  ",{}],["return",{"fg":4,"bold":true}],[" ",{}],["0",{"fg":2}],[";                                                            ",{}],["|",{"inverse":true}],[" 13 ",{"fg":3}],["  ",{}],["return",{"fg":4,"bold":true}],[" ",{}],["0",{"fg":2}],[";                                                            ",{}]],"25":[["  5 ",{"fg":3}],["}                                                                      ",{}],["|",{"inverse":true}],[" 14 ",{"fg":3}],["}                                                                      ",{}]],"38":[["primjer_1.c [+]                                          17,20          All ",{"fg":3,"bg":4,"bold":true}],["primjer_1.c [+]                                          8,1            All",{"fg":0,"bg":4}]]}}],[2.43558,{"lines":{"18":[["  0 ",{"fg":3}],["  ",{"inverse":true}],["if",{"fg":4,"bold":true,"inverse":true}],[" (childPID == ",{"inverse":true}],["0",{"fg":2,"inverse":true}],[")",{"bg":6}],[" ",{"inverse":true}],["                                                  ",{}],["|",{"inverse":true}],["  9 ",{"fg":3}],["  ",{"inverse":true}],["if",{"fg":4,"bold":true,"inverse":true}],[" (childPID == ",{"inverse":true}],["0",{"fg":2,"inverse":true}],[") ",{"inverse":true}],["                                                  ",{}]],"39":[["-- VISUAL LINE --",{"bold":true}],["                                                                                                                                      ",{}]]}}],[0.357945,{"lines":{"0":[[" 17 ",{"fg":3}],["#include",{"fg":5}],["<stdio.h>",{"fg":2}],["                                                      ",{}],["|",{"inverse":true}],["  7 ",{"fg":3}],["#include",{"fg":5}],["<stdio.h>",{"fg":2}],["                                                      ",{}]],"1":[[" 16 ",{"fg":3}],["#include",{"fg":5}],["<unistd.h>",{"fg":2}],[" ",{}],["/* zaglavlje u kojem je deklarisana getpid() funkcij",{"fg":1}],["|",{"inverse":true}],["  6 ",{"fg":3}],["#include",{"fg":5}],["<unistd.h>",{"fg":2}],[" ",{}],["/* zaglavlje u kojem je deklarisana getpid() funkcij",{"fg":1}]],"3":[[" 15 ",{"fg":3}],["#include",{"fg":5}],["<sys/types.h>",{"fg":2}],[" ",{}],["/* zaglavlje u kojem je definisan tip pid_t →  un",{"fg":1}],["|",{"inverse":true}],["  5 ",{"fg":3}],["#include",{"fg":5}],["<sys/types.h>",{"fg":2}],[" ",{}],["/* zaglavlje u kojem je definisan tip pid_t →  un",{"fg":1}]],"5":[[" 14 ",{"fg":3}],["int",{"fg":4,"bold":true}],[" main()                                                             ",{}],["|",{"inverse":true}],["  4 ",{"fg":3}],["int",{"fg":4,"bold":true}],[" main()                                                             ",{}]],"6":[[" 13 ",{"fg":3}],["{                                                                      ",{}],["|",{"inverse":true}],["  3 ",{"fg":3}],["{                                                                      ",{}]],"7":[[" 12 ",{"fg":3}],["  pid_t childPID;                                                      ",{}],["|",{"inverse":true}],["  2 ",{"fg":3}],["  pid_t childPID;                                                      ",{}]],"8":[[" 11 ",{"fg":3}],["  pid_t mojPID = getpid();                                             ",{}],["|",{"inverse":true}],["  1 ",{"fg":3}],["  pid_t mojPID = getpid();                                             ",{}]],"9":[[" 10 ",{"fg":3}],["  childPID = fork();                                                   ",{}],["|",{"inverse":true}],["  0 ",{"fg":3}],["  childPID = fork();                                                   ",{}]],"10":[["  9 ",{"fg":3}],["  ",{}],["// f-ja fork vraca -1 ukoliko je greska",{"fg":1}],["                              ",{}],["|",{"inverse":true}],["  1 ",{"fg":3}],["  ",{}],["// f-ja fork vraca -1 ukoliko je greska",{"fg":1}],["                              ",{}]],"11":[["  8 ",{"fg":3}],["  ",{}],["// 0 u kreiranom child proces-u",{"fg":1}],["                                      ",{}],["|",{"inverse":true}],["  2 ",{"fg":3}],["  ",{}],["// 0 u kreiranom child proces-u",{"fg":1}],["                                      ",{}]],"12":[["  7 ",{"fg":3}],["  ",{}],["// 1 u parent procesu koji je pozvao fork f-ju",{"fg":1}],["                       ",{}],["|",{"inverse":true}],["  3 ",{"fg":3}],["  ",{}],["// 1 u parent procesu koji je pozvao fork f-ju",{"fg":1}],["                       ",{}]],"13":[["  6 ",{"fg":3}],["  ",{}],["if",{"fg":4,"bold":true}],["(childPID == -",{}],["1",{"fg":2}],[")                                                   ",{}],["|",{"inverse":true}],["  4 ",{"fg":3}],["  ",{}],["if",{"fg":4,"bold":true}],["(childPID == -",{}],["1",{"fg":2}],[")                                                   ",{}]],"14":[["  5 ",{"fg":3}],["  {                                                                    ",{}],["|",{"inverse":true}],["  5 ",{"fg":3}],["  {                                                                    ",{}]],"15":[["  4 ",{"fg":3}],["    error(",{}],["\"Kreiranje procesa neuspjesno! :(\"",{"fg":2}],[");                         ",{}],["|",{"inverse":true}],["  6 ",{"fg":3}],["    error(",{}],["\"Kreiranje procesa neuspjesno! :(\"",{"fg":2}],[");                         ",{}]],"16":[["  3 ",{"fg":3}],["    ",{}],["return",{"fg":4,"bold":true}],[" ",{}],["1",{"fg":2}],[";                                                          ",{}],["|",{"inverse":true}],["  7 ",{"fg":3}],["    ",{}],["return",{"fg":4,"bold":true}],[" ",{}],["1",{"fg":2}],[";                                                          ",{}]],"17":[["  2 ",{"fg":3}],["  }                                                                    ",{}],["|",{"inverse":true}],["  8 ",{"fg":3}],["  }                                                                    ",{}]],"18":[["  1 ",{"fg":3}],["  ",{"inverse":true}],["if",{"fg":4,"bold":true,"inverse":true}],[" (childPID == ",{"inverse":true}],["0",{"fg":2,"inverse":true}],[") ",{"inverse":true}],["                                                  ",{}],["|",{"inverse":true}],["  9 ",{"fg":3}],["  ",{"inverse":true}],["if",{"fg":4,"bold":true,"inverse":true}],[" (childPID == ",{"inverse":true}],["0",{"fg":2,"inverse":true}],[") ",{"inverse":true}],["                                                  ",{}]],"19":[["  0 ",{"fg":3}],["    printf(",{"inverse":true}],["\"Child proces sa PID = ",{"fg":2,"inverse":true}],["%ld",{"fg":1,"bold":true,"inverse":true}],[", ID = ",{"fg":2,"inverse":true}],["%ld",{"fg":1,"bold":true,"inverse":true}],["\\",{"fg":1,"bold":true}],["n",{"fg":1,"bold":true,"inverse":true}],["\"",{"fg":2,"inverse":true}],[", (",{"inverse":true}],["long",{"fg":4,"bold":true,"inverse":true}],[")getpid(), (",{"inverse":true}],["lo",{"fg":4,"bold":true,"inverse":true}],["|",{"inverse":true}],[" 10 ",{"fg":3}],["    printf(",{"inverse":true}],["\"Child proces sa PID = ",{"fg":2,"inverse":true}],["%ld",{"fg":1,"bold":true,"inverse":true}],[", ID = ",{"fg":2,"inverse":true}],["%ld\\n",{"fg":1,"bold":true,"inverse":true}],["\"",{"fg":2,"inverse":true}],[", (",{"inverse":true}],["long",{"fg":4,"bold":true,"inverse":true}],[")getpid(), (",{"inverse":true}],["lo",{"fg":4,"bold":true,"inverse":true}]],"20":[["    ",{"fg":3}],["ng",{"fg":4,"bold":true,"inverse":true}],[")mojPID); ",{"inverse":true}],["                                                           ",{}],["|",{"inverse":true}],["    ",{"fg":3}],["ng",{"fg":4,"bold":true,"inverse":true}],[")mojPID); ",{"inverse":true}],["                                                           ",{}]],"21":[["  1 ",{"fg":3}],["  ",{}],["else",{"fg":4,"bold":true}],["                                                                 ",{}],["|",{"inverse":true}],[" 11 ",{"fg":3}],["  ",{}],["else",{"fg":4,"bold":true}],["                                                                 ",{}]],"22":[["  2 ",{"fg":3}],["    printf(",{}],["\"Parent proces sa PID = ",{"fg":2}],["%ld",{"fg":1,"bold":true}],[", ID = ",{"fg":2}],["%ld\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[", (",{}],["long",{"fg":4,"bold":true}],[")getpid(), (",{}],["l",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 12 ",{"fg":3}],["    printf(",{}],["\"Parent proces sa PID = ",{"fg":2}],["%ld",{"fg":1,"bold":true}],[", ID = ",{"fg":2}],["%ld\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[", (",{}],["long",{"fg":4,"bold":true}],[")getpid(), (",{}],["l",{"fg":4,"bold":true}]],"24":[["  3 ",{"fg":3}],["  ",{}],["return",{"fg":4,"bold":true}],[" ",{}],["0",{"fg":2}],[";                                                            ",{}],["|",{"inverse":true}],[" 13 ",{"fg":3}],["  ",{}],["return",{"fg":4,"bold":true}],[" ",{}],["0",{"fg":2}],[";                                                            ",{}]],"25":[["  4 ",{"fg":3}],["}                                                                      ",{}],["|",{"inverse":true}],[" 14 ",{"fg":3}],["}                                                                      ",{}]],"38":[["primjer_1.c [+]                                          18,48          All ",{"fg":3,"bg":4,"bold":true}],["primjer_1.c [+]                                          8,1            All",{"fg":0,"bg":4}]]},"cursor":{"x":51,"y":19}}],[0.429233,{"lines":{"0":[[" 18 ",{"fg":3}],["#include",{"fg":5}],["<stdio.h>",{"fg":2}],["                                                      ",{}],["|",{"inverse":true}],["  7 ",{"fg":3}],["#include",{"fg":5}],["<stdio.h>",{"fg":2}],["                                                      ",{}]],"1":[[" 17 ",{"fg":3}],["#include",{"fg":5}],["<unistd.h>",{"fg":2}],[" ",{}],["/* zaglavlje u kojem je deklarisana getpid() funkcij",{"fg":1}],["|",{"inverse":true}],["  6 ",{"fg":3}],["#include",{"fg":5}],["<unistd.h>",{"fg":2}],[" ",{}],["/* zaglavlje u kojem je deklarisana getpid() funkcij",{"fg":1}]],"3":[[" 16 ",{"fg":3}],["#include",{"fg":5}],["<sys/types.h>",{"fg":2}],[" ",{}],["/* zaglavlje u kojem je definisan tip pid_t →  un",{"fg":1}],["|",{"inverse":true}],["  5 ",{"fg":3}],["#include",{"fg":5}],["<sys/types.h>",{"fg":2}],[" ",{}],["/* zaglavlje u kojem je definisan tip pid_t →  un",{"fg":1}]],"5":[[" 15 ",{"fg":3}],["int",{"fg":4,"bold":true}],[" main()                                                             ",{}],["|",{"inverse":true}],["  4 ",{"fg":3}],["int",{"fg":4,"bold":true}],[" main()                                                             ",{}]],"6":[[" 14 ",{"fg":3}],["{                                                                      ",{}],["|",{"inverse":true}],["  3 ",{"fg":3}],["{                                                                      ",{}]],"7":[[" 13 ",{"fg":3}],["  pid_t childPID;                                                      ",{}],["|",{"inverse":true}],["  2 ",{"fg":3}],["  pid_t childPID;                                                      ",{}]],"8":[[" 12 ",{"fg":3}],["  pid_t mojPID = getpid();                                             ",{}],["|",{"inverse":true}],["  1 ",{"fg":3}],["  pid_t mojPID = getpid();                                             ",{}]],"9":[[" 11 ",{"fg":3}],["  childPID = fork();                                                   ",{}],["|",{"inverse":true}],["  0 ",{"fg":3}],["  childPID = fork();                                                   ",{}]],"10":[[" 10 ",{"fg":3}],["  ",{}],["// f-ja fork vraca -1 ukoliko je greska",{"fg":1}],["                              ",{}],["|",{"inverse":true}],["  1 ",{"fg":3}],["  ",{}],["// f-ja fork vraca -1 ukoliko je greska",{"fg":1}],["                              ",{}]],"11":[["  9 ",{"fg":3}],["  ",{}],["// 0 u kreiranom child proces-u",{"fg":1}],["                                      ",{}],["|",{"inverse":true}],["  2 ",{"fg":3}],["  ",{}],["// 0 u kreiranom child proces-u",{"fg":1}],["                                      ",{}]],"12":[["  8 ",{"fg":3}],["  ",{}],["// 1 u parent procesu koji je pozvao fork f-ju",{"fg":1}],["                       ",{}],["|",{"inverse":true}],["  3 ",{"fg":3}],["  ",{}],["// 1 u parent procesu koji je pozvao fork f-ju",{"fg":1}],["                       ",{}]],"13":[["  7 ",{"fg":3}],["  ",{}],["if",{"fg":4,"bold":true}],["(childPID == -",{}],["1",{"fg":2}],[")                                                   ",{}],["|",{"inverse":true}],["  4 ",{"fg":3}],["  ",{}],["if",{"fg":4,"bold":true}],["(childPID == -",{}],["1",{"fg":2}],[")                                                   ",{}]],"14":[["  6 ",{"fg":3}],["  {                                                                    ",{}],["|",{"inverse":true}],["  5 ",{"fg":3}],["  {                                                                    ",{}]],"15":[["  5 ",{"fg":3}],["    error(",{}],["\"Kreiranje procesa neuspjesno! :(\"",{"fg":2}],[");                         ",{}],["|",{"inverse":true}],["  6 ",{"fg":3}],["    error(",{}],["\"Kreiranje procesa neuspjesno! :(\"",{"fg":2}],[");                         ",{}]],"16":[["  4 ",{"fg":3}],["    ",{}],["return",{"fg":4,"bold":true}],[" ",{}],["1",{"fg":2}],[";                                                          ",{}],["|",{"inverse":true}],["  7 ",{"fg":3}],["    ",{}],["return",{"fg":4,"bold":true}],[" ",{}],["1",{"fg":2}],[";                                                          ",{}]],"17":[["  3 ",{"fg":3}],["  }                                                                    ",{}],["|",{"inverse":true}],["  8 ",{"fg":3}],["  }                                                                    ",{}]],"18":[["  2 ",{"fg":3}],["  ",{"inverse":true}],["if",{"fg":4,"bold":true,"inverse":true}],[" (childPID == ",{"inverse":true}],["0",{"fg":2,"inverse":true}],[") ",{"inverse":true}],["                                                  ",{}],["|",{"inverse":true}],["  9 ",{"fg":3}],["  ",{"inverse":true}],["if",{"fg":4,"bold":true,"inverse":true}],[" (childPID == ",{"inverse":true}],["0",{"fg":2,"inverse":true}],[") ",{"inverse":true}],["                                                  ",{}]],"19":[["  1 ",{"fg":3}],["    printf(",{"inverse":true}],["\"Child proces sa PID = ",{"fg":2,"inverse":true}],["%ld",{"fg":1,"bold":true,"inverse":true}],[", ID = ",{"fg":2,"inverse":true}],["%ld\\n",{"fg":1,"bold":true,"inverse":true}],["\"",{"fg":2,"inverse":true}],[", (",{"inverse":true}],["long",{"fg":4,"bold":true,"inverse":true}],[")getpid(), (",{"inverse":true}],["lo",{"fg":4,"bold":true,"inverse":true}],["|",{"inverse":true}],[" 10 ",{"fg":3}],["    printf(",{"inverse":true}],["\"Child proces sa PID = ",{"fg":2,"inverse":true}],["%ld",{"fg":1,"bold":true,"inverse":true}],[", ID = ",{"fg":2,"inverse":true}],["%ld\\n",{"fg":1,"bold":true,"inverse":true}],["\"",{"fg":2,"inverse":true}],[", (",{"inverse":true}],["long",{"fg":4,"bold":true,"inverse":true}],[")getpid(), (",{"inverse":true}],["lo",{"fg":4,"bold":true,"inverse":true}]],"21":[["  0 ",{"fg":3}],["  ",{"inverse":true}],["else",{"fg":4,"bold":true,"inverse":true}],["                                                                 ",{}],["|",{"inverse":true}],[" 11 ",{"fg":3}],["  ",{"inverse":true}],["else",{"fg":4,"bold":true,"inverse":true}],[" ",{"inverse":true}],["                                                                ",{}]],"22":[["  1 ",{"fg":3}],["    printf(",{}],["\"Parent proces sa PID = ",{"fg":2}],["%ld",{"fg":1,"bold":true}],[", ID = ",{"fg":2}],["%ld\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[", (",{}],["long",{"fg":4,"bold":true}],[")getpid(), (",{}],["l",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 12 ",{"fg":3}],["    printf(",{}],["\"Parent proces sa PID = ",{"fg":2}],["%ld",{"fg":1,"bold":true}],[", ID = ",{"fg":2}],["%ld\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[", (",{}],["long",{"fg":4,"bold":true}],[")getpid(), (",{}],["l",{"fg":4,"bold":true}]],"24":[["  2 ",{"fg":3}],["  ",{}],["return",{"fg":4,"bold":true}],[" ",{}],["0",{"fg":2}],[";                                                            ",{}],["|",{"inverse":true}],[" 13 ",{"fg":3}],["  ",{}],["return",{"fg":4,"bold":true}],[" ",{}],["0",{"fg":2}],[";                                                            ",{}]],"25":[["  3 ",{"fg":3}],["}                                                                      ",{}],["|",{"inverse":true}],[" 14 ",{"fg":3}],["}                                                                      ",{}]],"38":[["primjer_1.c [+]                                          19,7           All ",{"fg":3,"bg":4,"bold":true}],["primjer_1.c [+]                                          8,1            All",{"fg":0,"bg":4}]]},"cursor":{"x":10,"y":21}}],[4.291641,{"lines":{"40":[["[0] 0:vim*                                                                                                     \"nermin-SATELLITE-C55-A\" 19:05 10-Okt-14",{"fg":0,"bg":2}]]}}],[2.816573,{"lines":{"18":[["  2 ",{"fg":3}],["  ",{}],["if",{"fg":4,"bold":true}],[" (childPID == ",{}],["0",{"fg":2}],[")                                                   ",{}],["|",{"inverse":true}],["  9 ",{"fg":3}],["  ",{}],["if",{"fg":4,"bold":true}],[" (childPID == ",{}],["0",{"fg":2}],[")                                                   ",{}]],"19":[["  1 ",{"fg":3}],["    printf(",{}],["\"Child proces sa PID = ",{"fg":2}],["%ld",{"fg":1,"bold":true}],[", ID = ",{"fg":2}],["%ld\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[", (",{}],["long",{"fg":4,"bold":true}],[")getpid(), (",{}],["lo",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 10 ",{"fg":3}],["    printf(",{}],["\"Child proces sa PID = ",{"fg":2}],["%ld",{"fg":1,"bold":true}],[", ID = ",{"fg":2}],["%ld\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[", (",{}],["long",{"fg":4,"bold":true}],[")getpid(), (",{}],["lo",{"fg":4,"bold":true}]],"20":[["    ",{"fg":3}],["ng",{"fg":4,"bold":true}],[")mojPID);                                                            ",{}],["|",{"inverse":true}],["    ",{"fg":3}],["ng",{"fg":4,"bold":true}],[")mojPID);                                                            ",{}]],"21":[["  0 ",{"fg":3}],["  ",{}],["else",{"fg":4,"bold":true}],["                                                                 ",{}],["|",{"inverse":true}],[" 11 ",{"fg":3}],["  ",{}],["else",{"fg":4,"bold":true}],["                                                                 ",{}]],"38":[["primjer_1.c [+]                                          19,6           All ",{"fg":3,"bg":4,"bold":true}],["primjer_1.c [+]                                          8,1            All",{"fg":0,"bg":4}]],"39":[["                                                                                                                                                       ",{}]]},"cursor":{"x":9}}],[0.7091150000000001,{"lines":{"38":[["primjer_1.c [+]                                          19,7           All ",{"fg":3,"bg":4,"bold":true}],["primjer_1.c [+]                                          8,1            All",{"fg":0,"bg":4}]],"39":[["-- INSERT --",{"bold":true}],["                                                                                                                                           ",{}]]},"cursor":{"x":10}}],[2.24007,{"lines":{"21":[["  0 ",{"fg":3}],["  ",{}],["else",{"fg":4,"bold":true}],["k                                                                ",{}],["|",{"inverse":true}],[" 11 ",{"fg":3}],["  ",{}],["else",{"fg":4,"bold":true}],["                                                                 ",{}]]}}],[0.502521,{"lines":{"21":[["  0 ",{"fg":3}],["  ",{}],["else",{"fg":4,"bold":true}],["                                                                 ",{}],["|",{"inverse":true}],[" 11 ",{"fg":3}],["  ",{}],["else",{"fg":4,"bold":true}],["                                                                 ",{}]],"39":[["                                                                                                                                                       ",{}]]},"cursor":{"x":0,"y":39,"visible":false}}],[0.011302,{"lines":{"0":[[" 16 ",{"fg":3}],["#include",{"fg":5}],["<stdio.h>",{"fg":2}],["                                                      ",{}],["|",{"inverse":true}],["  7 ",{"fg":3}],["#include",{"fg":5}],["<stdio.h>",{"fg":2}],["                                                      ",{}]],"1":[[" 15 ",{"fg":3}],["#include",{"fg":5}],["<unistd.h>",{"fg":2}],[" ",{}],["/* zaglavlje u kojem je deklarisana getpid() funkcij",{"fg":1}],["|",{"inverse":true}],["  6 ",{"fg":3}],["#include",{"fg":5}],["<unistd.h>",{"fg":2}],[" ",{}],["/* zaglavlje u kojem je deklarisana getpid() funkcij",{"fg":1}]],"3":[[" 14 ",{"fg":3}],["#include",{"fg":5}],["<sys/types.h>",{"fg":2}],[" ",{}],["/* zaglavlje u kojem je definisan tip pid_t →  un",{"fg":1}],["|",{"inverse":true}],["  5 ",{"fg":3}],["#include",{"fg":5}],["<sys/types.h>",{"fg":2}],[" ",{}],["/* zaglavlje u kojem je definisan tip pid_t →  un",{"fg":1}]],"5":[[" 13 ",{"fg":3}],["int",{"fg":4,"bold":true}],[" main()                                                             ",{}],["|",{"inverse":true}],["  4 ",{"fg":3}],["int",{"fg":4,"bold":true}],[" main()                                                             ",{}]],"6":[[" 12 ",{"fg":3}],["{                                                                      ",{}],["|",{"inverse":true}],["  3 ",{"fg":3}],["{                                                                      ",{}]],"7":[[" 11 ",{"fg":3}],["  pid_t childPID;                                                      ",{}],["|",{"inverse":true}],["  2 ",{"fg":3}],["  pid_t childPID;                                                      ",{}]],"8":[[" 10 ",{"fg":3}],["  pid_t mojPID = getpid();                                             ",{}],["|",{"inverse":true}],["  1 ",{"fg":3}],["  pid_t mojPID = getpid();                                             ",{}]],"9":[["  9 ",{"fg":3}],["  childPID = fork();                                                   ",{}],["|",{"inverse":true}],["  0 ",{"fg":3}],["  childPID = fork();                                                   ",{}]],"10":[["  8 ",{"fg":3}],["  ",{}],["// f-ja fork vraca -1 ukoliko je greska",{"fg":1}],["                              ",{}],["|",{"inverse":true}],["  1 ",{"fg":3}],["  ",{}],["// f-ja fork vraca -1 ukoliko je greska",{"fg":1}],["                              ",{}]],"11":[["  7 ",{"fg":3}],["  ",{}],["// 0 u kreiranom child proces-u",{"fg":1}],["                                      ",{}],["|",{"inverse":true}],["  2 ",{"fg":3}],["  ",{}],["// 0 u kreiranom child proces-u",{"fg":1}],["                                      ",{}]],"12":[["  6 ",{"fg":3}],["  ",{}],["// 1 u parent procesu koji je pozvao fork f-ju",{"fg":1}],["                       ",{}],["|",{"inverse":true}],["  3 ",{"fg":3}],["  ",{}],["// 1 u parent procesu koji je pozvao fork f-ju",{"fg":1}],["                       ",{}]],"13":[["  5 ",{"fg":3}],["  ",{}],["if",{"fg":4,"bold":true}],["(childPID == -",{}],["1",{"fg":2}],[")                                                   ",{}],["|",{"inverse":true}],["  4 ",{"fg":3}],["  ",{}],["if",{"fg":4,"bold":true}],["(childPID == -",{}],["1",{"fg":2}],[")                                                   ",{}]],"14":[["  4 ",{"fg":3}],["  {                                                                    ",{}],["|",{"inverse":true}],["  5 ",{"fg":3}],["  {                                                                    ",{}]],"15":[["  3 ",{"fg":3}],["    error(",{}],["\"Kreiranje procesa neuspjesno! :(\"",{"fg":2}],[");                         ",{}],["|",{"inverse":true}],["  6 ",{"fg":3}],["    error(",{}],["\"Kreiranje procesa neuspjesno! :(\"",{"fg":2}],[");                         ",{}]],"16":[["  2 ",{"fg":3}],["    ",{}],["return",{"fg":4,"bold":true}],[" ",{}],["1",{"fg":2}],[";                                                          ",{}],["|",{"inverse":true}],["  7 ",{"fg":3}],["    ",{}],["return",{"fg":4,"bold":true}],[" ",{}],["1",{"fg":2}],[";                                                          ",{}]],"17":[["  1 ",{"fg":3}],["  }                                                                    ",{}],["|",{"inverse":true}],["  8 ",{"fg":3}],["  }                                                                    ",{}]],"18":[["  0 ",{"fg":3}],["  ",{}],["if",{"fg":4,"bold":true}],[" ",{}],["(",{"bg":6}],["childPID == ",{}],["0",{"fg":2}],[")",{"bg":6}],["                                                   ",{}],["|",{"inverse":true}],["  9 ",{"fg":3}],["  ",{}],["if",{"fg":4,"bold":true}],[" (childPID == ",{}],["0",{"fg":2}],[")                                                   ",{}]],"21":[["  2 ",{"fg":3}],["  ",{}],["else",{"fg":4,"bold":true}],["                                                                 ",{}],["|",{"inverse":true}],[" 11 ",{"fg":3}],["  ",{}],["else",{"fg":4,"bold":true}],["                                                                 ",{}]],"22":[["  3 ",{"fg":3}],["    printf(",{}],["\"Parent proces sa PID = ",{"fg":2}],["%ld",{"fg":1,"bold":true}],[", ID = ",{"fg":2}],["%ld\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[", (",{}],["long",{"fg":4,"bold":true}],[")getpid(), (",{}],["l",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 12 ",{"fg":3}],["    printf(",{}],["\"Parent proces sa PID = ",{"fg":2}],["%ld",{"fg":1,"bold":true}],[", ID = ",{"fg":2}],["%ld\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[", (",{}],["long",{"fg":4,"bold":true}],[")getpid(), (",{}],["l",{"fg":4,"bold":true}]],"24":[["  4 ",{"fg":3}],["  ",{}],["return",{"fg":4,"bold":true}],[" ",{}],["0",{"fg":2}],[";                                                            ",{}],["|",{"inverse":true}],[" 13 ",{"fg":3}],["  ",{}],["return",{"fg":4,"bold":true}],[" ",{}],["0",{"fg":2}],[";                                                            ",{}]],"25":[["  5 ",{"fg":3}],["}                                                                      ",{}],["|",{"inverse":true}],[" 14 ",{"fg":3}],["}                                                                      ",{}]],"38":[["primjer_1.c [+]                                          17,6           All ",{"fg":3,"bg":4,"bold":true}],["primjer_1.c [+]                                          8,1            All",{"fg":0,"bg":4}]]},"cursor":{"x":9,"y":18,"visible":true}}],[1.656666,{"lines":{"39":[["-- INSERT --",{"bold":true}],["                                                                                                                                           ",{}]]},"cursor":{"x":12,"y":39,"visible":false}}],[0.009545000000000001,{"lines":{"18":[["  0 ",{"fg":3}],["                                                                       ",{}],["|",{"inverse":true}],["  9 ",{"fg":3}],["                                                                       ",{}]],"19":[["  1 ",{"fg":3}],["  ",{}],["if",{"fg":4,"bold":true}],[" (childPID == ",{}],["0",{"fg":2}],[")                                                   ",{}],["|",{"inverse":true}],[" 10 ",{"fg":3}],["  ",{}],["if",{"fg":4,"bold":true}],[" (childPID == ",{}],["0",{"fg":2}],[")                                                   ",{}]],"20":[["  2 ",{"fg":3}],["    printf(",{}],["\"Child proces sa PID = ",{"fg":2}],["%ld",{"fg":1,"bold":true}],[", ID = ",{"fg":2}],["%ld\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[", (",{}],["long",{"fg":4,"bold":true}],[")getpid(), (",{}],["lo",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 11 ",{"fg":3}],["    printf(",{}],["\"Child proces sa PID = ",{"fg":2}],["%ld",{"fg":1,"bold":true}],[", ID = ",{"fg":2}],["%ld\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[", (",{}],["long",{"fg":4,"bold":true}],[")getpid(), (",{}],["lo",{"fg":4,"bold":true}]],"21":[["    ",{"fg":3}],["ng",{"fg":4,"bold":true}],[")mojPID);                                                            ",{}],["|",{"inverse":true}],["    ",{"fg":3}],["ng",{"fg":4,"bold":true}],[")mojPID);                                                            ",{}]],"22":[["  3 ",{"fg":3}],["  ",{}],["else",{"fg":4,"bold":true}],["                                                                 ",{}],["|",{"inverse":true}],[" 12 ",{"fg":3}],["  ",{}],["else",{"fg":4,"bold":true}],["                                                                 ",{}]],"23":[["  4 ",{"fg":3}],["    printf(",{}],["\"Parent proces sa PID = ",{"fg":2}],["%ld",{"fg":1,"bold":true}],[", ID = ",{"fg":2}],["%ld\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[", (",{}],["long",{"fg":4,"bold":true}],[")getpid(), (",{}],["l",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 13 ",{"fg":3}],["    printf(",{}],["\"Parent proces sa PID = ",{"fg":2}],["%ld",{"fg":1,"bold":true}],[", ID = ",{"fg":2}],["%ld\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[", (",{}],["long",{"fg":4,"bold":true}],[")getpid(), (",{}],["l",{"fg":4,"bold":true}]],"24":[["    ",{"fg":3}],["ong",{"fg":4,"bold":true}],[")mojPID);                                                           ",{}],["|",{"inverse":true}],["    ",{"fg":3}],["ong",{"fg":4,"bold":true}],[")mojPID);                                                           ",{}]],"25":[["  5 ",{"fg":3}],["  ",{}],["return",{"fg":4,"bold":true}],[" ",{}],["0",{"fg":2}],[";                                                            ",{}],["|",{"inverse":true}],[" 14 ",{"fg":3}],["  ",{}],["return",{"fg":4,"bold":true}],[" ",{}],["0",{"fg":2}],[";                                                            ",{}]],"26":[["  6 ",{"fg":3}],["}                                                                      ",{}],["|",{"inverse":true}],[" 15 ",{"fg":3}],["}                                                                      ",{}]],"38":[["primjer_1.c [+]                                          17,3           All ",{"fg":3,"bg":4,"bold":true}],["primjer_1.c [+]                                          8,1            All",{"fg":0,"bg":4}]]},"cursor":{"x":6,"y":18,"visible":true}}],[0.774579,{"lines":{"18":[["  0 ",{"fg":3}],["  /                                                                    ",{}],["|",{"inverse":true}],["  9 ",{"fg":3}],["  /                                                                    ",{}]],"38":[["primjer_1.c [+]                                          17,4           All ",{"fg":3,"bg":4,"bold":true}],["primjer_1.c [+]                                          8,1            All",{"fg":0,"bg":4}]]},"cursor":{"x":7}}],[0.166902,{"lines":{"18":[["  0 ",{"fg":3}],["  ",{}],["//",{"fg":1}],["                                                                   ",{}],["|",{"inverse":true}],["  9 ",{"fg":3}],["  ",{}],["//",{"fg":1}],["                                                                   ",{}]],"38":[["primjer_1.c [+]                                          17,5           All ",{"fg":3,"bg":4,"bold":true}],["primjer_1.c [+]                                          8,1            All",{"fg":0,"bg":4}]]},"cursor":{"x":8}}],[0.576268,{"lines":{"18":[["  0 ",{"fg":3}],["  ",{}],["// ",{"fg":1}],["                                                                  ",{}],["|",{"inverse":true}],["  9 ",{"fg":3}],["  ",{}],["// ",{"fg":1}],["                                                                  ",{}]],"38":[["primjer_1.c [+]                                          17,6           All ",{"fg":3,"bg":4,"bold":true}],["primjer_1.c [+]                                          8,1            All",{"fg":0,"bg":4}]]},"cursor":{"x":9}}],[5.656063,{"lines":{"18":[["  0 ",{"fg":3}],["  ",{}],["//",{"fg":1}],["                                                                   ",{}],["|",{"inverse":true}],["  9 ",{"fg":3}],["  ",{}],["//",{"fg":1}],["                                                                   ",{}]],"38":[["primjer_1.c [+]                                          17,5           All ",{"fg":3,"bg":4,"bold":true}],["primjer_1.c [+]                                          8,1            All",{"fg":0,"bg":4}]]},"cursor":{"x":8}}],[0.201221,{"lines":{"18":[["  0 ",{"fg":3}],["  /                                                                    ",{}],["|",{"inverse":true}],["  9 ",{"fg":3}],["  /                                                                    ",{}]],"38":[["primjer_1.c [+]                                          17,4           All ",{"fg":3,"bg":4,"bold":true}],["primjer_1.c [+]                                          8,1            All",{"fg":0,"bg":4}]]},"cursor":{"x":7}}],[0.271315,{"lines":{"18":[["  0 ",{"fg":3}],["                                                                       ",{}],["|",{"inverse":true}],["  9 ",{"fg":3}],["                                                                       ",{}]],"38":[["primjer_1.c [+]                                          17,3           All ",{"fg":3,"bg":4,"bold":true}],["primjer_1.c [+]                                          8,1            All",{"fg":0,"bg":4}]]},"cursor":{"x":6}}],[0.850101,{"lines":{"39":[["                                                                                                                                                       ",{}]]},"cursor":{"x":5}}],[0.03431,{"lines":{"38":[["primjer_1.c [+]                                          17,2           All ",{"fg":3,"bg":4,"bold":true}],["primjer_1.c [+]                                          8,1            All",{"fg":0,"bg":4}]]}}],[0.151672,{"lines":{"18":[["  1 ",{"fg":3}],["  ",{}],["if",{"fg":4,"bold":true}],[" (childPID == ",{}],["0",{"fg":2}],[")                                                   ",{}],["|",{"inverse":true}],["  9 ",{"fg":3}],["                                                                       ",{}]],"19":[["  2 ",{"fg":3}],["    printf(",{}],["\"Child proces sa PID = ",{"fg":2}],["%ld",{"fg":1,"bold":true}],[", ID = ",{"fg":2}],["%ld\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[", (",{}],["long",{"fg":4,"bold":true}],[")getpid(), (",{}],["lo",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 10 ",{"fg":3}],["  ",{}],["if",{"fg":4,"bold":true}],[" (childPID == ",{}],["0",{"fg":2}],[")                                                   ",{}]]},"cursor":{"x":80,"visible":false}}],[0.003469,{"lines":{"18":[["  0 ",{"fg":3}],["  ",{}],["if",{"fg":4,"bold":true}],[" (childPID == ",{}],["0",{"fg":2}],[")                                                   ",{}],["|",{"inverse":true}],["  9 ",{"fg":3}],["  ",{}],["if",{"fg":4,"bold":true}],[" (childPID == ",{}],["0",{"fg":2}],[")                                                   ",{}]],"19":[["  1 ",{"fg":3}],["    printf(",{}],["\"Child proces sa PID = ",{"fg":2}],["%ld",{"fg":1,"bold":true}],[", ID = ",{"fg":2}],["%ld\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[", (",{}],["long",{"fg":4,"bold":true}],[")getpid(), (",{}],["lo",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 10 ",{"fg":3}],["    printf(",{}],["\"Child proces sa PID = ",{"fg":2}],["%ld",{"fg":1,"bold":true}],[", ID = ",{"fg":2}],["%ld\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[", (",{}],["long",{"fg":4,"bold":true}],[")getpid(), (",{}],["lo",{"fg":4,"bold":true}]],"20":[["    ",{"fg":3}],["ng",{"fg":4,"bold":true}],[")mojPID);                                                            ",{}],["|",{"inverse":true}],["    ",{"fg":3}],["ng",{"fg":4,"bold":true}],[")mojPID);                                                            ",{}]],"21":[["  2 ",{"fg":3}],["  ",{}],["else",{"fg":4,"bold":true}],["                                                                 ",{}],["|",{"inverse":true}],[" 11 ",{"fg":3}],["  ",{}],["else",{"fg":4,"bold":true}],["                                                                 ",{}]],"22":[["  3 ",{"fg":3}],["    printf(",{}],["\"Parent proces sa PID = ",{"fg":2}],["%ld",{"fg":1,"bold":true}],[", ID = ",{"fg":2}],["%ld\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[", (",{}],["long",{"fg":4,"bold":true}],[")getpid(), (",{}],["l",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 12 ",{"fg":3}],["    printf(",{}],["\"Parent proces sa PID = ",{"fg":2}],["%ld",{"fg":1,"bold":true}],[", ID = ",{"fg":2}],["%ld\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[", (",{}],["long",{"fg":4,"bold":true}],[")getpid(), (",{}],["l",{"fg":4,"bold":true}]],"23":[["    ",{"fg":3}],["ong",{"fg":4,"bold":true}],[")mojPID);                                                           ",{}],["|",{"inverse":true}],["    ",{"fg":3}],["ong",{"fg":4,"bold":true}],[")mojPID);                                                           ",{}]],"24":[["  4 ",{"fg":3}],["  ",{}],["return",{"fg":4,"bold":true}],[" ",{}],["0",{"fg":2}],[";                                                            ",{}],["|",{"inverse":true}],[" 13 ",{"fg":3}],["  ",{}],["return",{"fg":4,"bold":true}],[" ",{}],["0",{"fg":2}],[";                                                            ",{}]],"25":[["  5 ",{"fg":3}],["}                                                                      ",{}],["|",{"inverse":true}],[" 14 ",{"fg":3}],["}                                                                      ",{}]],"26":[["~                                                                          ",{"fg":4,"bold":true}],["|",{"inverse":true}],["~                                                                          ",{"fg":4,"bold":true}]],"38":[["primjer_1.c [+]                                          17,3           All ",{"fg":3,"bg":4,"bold":true}],["primjer_1.c [+]                                          8,1            All",{"fg":0,"bg":4}]]},"cursor":{"x":6,"visible":true}}],[1.291176,{"lines":{"39":[[":                                                                                                                                                      ",{}]]},"cursor":{"x":1,"y":39}}],[2.607037,{"lines":{"39":[[":w                                                                                                                                                     ",{}]]},"cursor":{"x":2}}],[0.802805,{"lines":{"39":[[":wa                                                                                                                                                    ",{}]]},"cursor":{"x":3}}],[0.446114,{"lines":{"39":[["\"primjer_1.c\"                                                                                                                                          ",{}]]},"cursor":{"x":13,"visible":false}}],[0.07739600000000001,{"lines":{"39":[["\"primjer_1.c\" 22L, 685C written                                                                                                                        ",{}]]},"cursor":{"x":31}}],[0.015024,{"lines":{"38":[["primjer_1.c                                              17,3           All ",{"fg":3,"bg":4,"bold":true}],["primjer_1.c                                              8,1            All",{"fg":0,"bg":4}]]},"cursor":{"x":6,"y":18,"visible":true}}],[5.499443,{"lines":{"39":[[":                                                                                                                                                      ",{}]]},"cursor":{"x":1,"y":39}}],[0.322936,{"lines":{"39":[[":q                                                                                                                                                     ",{}]]},"cursor":{"x":2}}],[0.370533,{"cursor":{"x":0}}],[0.004664999999999999,{"lines":{"0":[["  7 ",{"fg":3}],["#include",{"fg":5}],["<stdio.h>",{"fg":2}],["                                                                                                                                  ",{}]],"1":[["  6 ",{"fg":3}],["#include",{"fg":5}],["<unistd.h>",{"fg":2}],[" ",{}],["/* zaglavlje u kojem je deklarisana getpid() funkcija */",{"fg":1}],["                                                                        ",{}]],"2":[["  5 ",{"fg":3}],["#include",{"fg":5}],["<sys/types.h>",{"fg":2}],[" ",{}],["/* zaglavlje u kojem je definisan tip pid_t →  unsigned int */",{"fg":1}],["                                                               ",{}]],"3":[["  4 ",{"fg":3}],["int",{"fg":4,"bold":true}],[" main()                                                                                                                                         ",{}]],"4":[["  3 ",{"fg":3}],["{                                                                                                                                                  ",{}]],"5":[["  2 ",{"fg":3}],["  pid_t childPID;                                                                                                                                  ",{}]],"6":[["  1 ",{"fg":3}],["  pid_t mojPID = getpid();                                                                                                                         ",{}]],"7":[["  0 ",{"fg":3}],["  childPID = fork();                                                                                                                               ",{}]],"8":[["  1 ",{"fg":3}],["  ",{}],["// f-ja fork vraca -1 ukoliko je greska",{"fg":1}],["                                                                                                          ",{}]],"9":[["  2 ",{"fg":3}],["  ",{}],["// 0 u kreiranom child proces-u",{"fg":1}],["                                                                                                                  ",{}]],"10":[["  3 ",{"fg":3}],["  ",{}],["// 1 u parent procesu koji je pozvao fork f-ju",{"fg":1}],["                                                                                                   ",{}]],"11":[["  4 ",{"fg":3}],["  ",{}],["if",{"fg":4,"bold":true}],["(childPID == -",{}],["1",{"fg":2}],[")                                                                                                                               ",{}]],"12":[["  5 ",{"fg":3}],["  {                                                                                                                                                ",{}]],"13":[["  6 ",{"fg":3}],["    error(",{}],["\"Kreiranje procesa neuspjesno! :(\"",{"fg":2}],[");                                                                                                     ",{}]],"14":[["  7 ",{"fg":3}],["    ",{}],["return",{"fg":4,"bold":true}],[" ",{}],["1",{"fg":2}],[";                                                                                                                                      ",{}]],"15":[["  8 ",{"fg":3}],["  }                                                                                                                                                ",{}]],"16":[["  9 ",{"fg":3}],["  ",{}],["if",{"fg":4,"bold":true}],[" (childPID == ",{}],["0",{"fg":2}],[")                                                                                                                               ",{}]],"17":[[" 10 ",{"fg":3}],["    printf(",{}],["\"Child proces sa PID = ",{"fg":2}],["%ld",{"fg":1,"bold":true}],[", ID = ",{"fg":2}],["%ld\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[", (",{}],["long",{"fg":4,"bold":true}],[")getpid(), (",{}],["long",{"fg":4,"bold":true}],[")mojPID);                                                                 ",{}]],"18":[[" 11 ",{"fg":3}],["  ",{}],["else",{"fg":4,"bold":true}],["                                                                                                                                             ",{}]],"19":[[" 12 ",{"fg":3}],["    printf(",{}],["\"Parent proces sa PID = ",{"fg":2}],["%ld",{"fg":1,"bold":true}],[", ID = ",{"fg":2}],["%ld\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[", (",{}],["long",{"fg":4,"bold":true}],[")getpid(), (",{}],["long",{"fg":4,"bold":true}],[")mojPID);                                                                ",{}]],"20":[[" 13 ",{"fg":3}],["  ",{}],["return",{"fg":4,"bold":true}],[" ",{}],["0",{"fg":2}],[";                                                                                                                                        ",{}]],"21":[[" 14 ",{"fg":3}],["}                                                                                                                                                  ",{}]],"22":[["~                                                                                                                                                      ",{"fg":4,"bold":true}]],"23":[["~                                                                                                                                                      ",{"fg":4,"bold":true}]],"24":[["~                                                                                                                                                      ",{"fg":4,"bold":true}]],"25":[["~                                                                                                                                                      ",{"fg":4,"bold":true}]],"26":[["~                                                                                                                                                      ",{"fg":4,"bold":true}]],"27":[["~                                                                                                                                                      ",{"fg":4,"bold":true}]],"28":[["~                                                                                                                                                      ",{"fg":4,"bold":true}]],"29":[["~                                                                                                                                                      ",{"fg":4,"bold":true}]],"30":[["~                                                                                                                                                      ",{"fg":4,"bold":true}]],"31":[["~                                                                                                                                                      ",{"fg":4,"bold":true}]],"32":[["~                                                                                                                                                      ",{"fg":4,"bold":true}]],"33":[["~                                                                                                                                                      ",{"fg":4,"bold":true}]],"34":[["~                                                                                                                                                      ",{"fg":4,"bold":true}]],"35":[["~                                                                                                                                                      ",{"fg":4,"bold":true}]],"36":[["~                                                                                                                                                      ",{"fg":4,"bold":true}]],"37":[["~                                                                                                                                                      ",{"fg":4,"bold":true}]],"38":[["~                                                                                                                                                      ",{"fg":4,"bold":true}]],"39":[[":q                                                                                                                                   8,1           All ",{}]]},"cursor":{"x":4,"y":7}}],[1.608678,{"lines":{"0":[["  7 ",{"fg":3}],["#include",{"fg":5}],["<stdio.h>",{"fg":2}],["                                                      │                                                                           ",{}]],"1":[["  6 ",{"fg":3}],["#include",{"fg":5}],["<unistd.h>",{"fg":2}],[" ",{}],["/* zaglavlje u kojem je deklarisana getpid() funkcij",{"fg":1}],["│",{}],[" */",{"fg":1}],["                                                                        ",{}]],"2":[["  5 ",{"fg":3}],["#include",{"fg":5}],["<sys/types.h>",{"fg":2}],[" ",{}],["/* zaglavlje u kojem je definisan tip pid_t →  un",{"fg":1}],["│",{}],["igned int */",{"fg":1}],["                                                               ",{}]],"3":[["  4 ",{"fg":3}],["int",{"fg":4,"bold":true}],[" main()                                                             │                                                                           ",{}]],"4":[["  3 ",{"fg":3}],["{                                                                      │                                                                           ",{}]],"5":[["  2 ",{"fg":3}],["  pid_t childPID;                                                      │                                                                           ",{}]],"6":[["  1 ",{"fg":3}],["  pid_t mojPID = getpid();                                             │                                                                           ",{}]],"7":[["  0 ",{"fg":3}],["  childPID = fork();                                                   │                                                                           ",{}]],"8":[["  1 ",{"fg":3}],["  ",{}],["// f-ja fork vraca -1 ukoliko je greska",{"fg":1}],["                              │                                                                           ",{}]],"9":[["  2 ",{"fg":3}],["  ",{}],["// 0 u kreiranom child proces-u",{"fg":1}],["                                      │                                                                           ",{}]],"10":[["  3 ",{"fg":3}],["  ",{}],["// 1 u parent procesu koji je pozvao fork f-ju",{"fg":1}],["                       │                                                                           ",{}]],"11":[["  4 ",{"fg":3}],["  ",{}],["if",{"fg":4,"bold":true}],["(childPID == -",{}],["1",{"fg":2}],[")                                                   │                                                                           ",{}]],"12":[["  5 ",{"fg":3}],["  {                                                                    │                                                                           ",{}]],"13":[["  6 ",{"fg":3}],["    error(",{}],["\"Kreiranje procesa neuspjesno! :(\"",{"fg":2}],[");                         │                                                                           ",{}]],"14":[["  7 ",{"fg":3}],["    ",{}],["return",{"fg":4,"bold":true}],[" ",{}],["1",{"fg":2}],[";                                                          │                                                                           ",{}]],"15":[["  8 ",{"fg":3}],["  }                                                                    │                                                                           ",{}]],"16":[["  9 ",{"fg":3}],["  ",{}],["if",{"fg":4,"bold":true}],[" (childPID == ",{}],["0",{"fg":2}],[")                                                   │                                                                           ",{}]],"17":[[" 10 ",{"fg":3}],["    printf(",{}],["\"Child proces sa PID = ",{"fg":2}],["%ld",{"fg":1,"bold":true}],[", ID = ",{"fg":2}],["%ld\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[", (",{}],["long",{"fg":4,"bold":true}],[")getpid(), (",{}],["lo",{"fg":4,"bold":true}],["│",{}],["g",{"fg":4,"bold":true}],[")mojPID);                                                                 ",{}]],"18":[[" 11 ",{"fg":3}],["  ",{}],["else",{"fg":4,"bold":true}],["                                                                 │                                                                           ",{}]],"19":[[" 12 ",{"fg":3}],["    printf(",{}],["\"Parent proces sa PID = ",{"fg":2}],["%ld",{"fg":1,"bold":true}],[", ID = ",{"fg":2}],["%ld\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[", (",{}],["long",{"fg":4,"bold":true}],[")getpid(), (",{}],["l",{"fg":4,"bold":true}],["│",{}],["ng",{"fg":4,"bold":true}],[")mojPID);                                                                ",{}]],"20":[[" 13 ",{"fg":3}],["  ",{}],["return",{"fg":4,"bold":true}],[" ",{}],["0",{"fg":2}],[";                                                            │                                                                           ",{}]],"21":[[" 14 ",{"fg":3}],["}                                                                      ",{}],["│",{"fg":2}],["                                                                           ",{}]],"22":[["~                                                                          ",{"fg":4,"bold":true}],["│",{"fg":2}],["                                                                           ",{"fg":4,"bold":true}]],"23":[["~                                                                          ",{"fg":4,"bold":true}],["│",{"fg":2}],["                                                                           ",{"fg":4,"bold":true}]],"24":[["~                                                                          ",{"fg":4,"bold":true}],["│",{"fg":2}],["                                                                           ",{"fg":4,"bold":true}]],"25":[["~                                                                          ",{"fg":4,"bold":true}],["│",{"fg":2}],["                                                                           ",{"fg":4,"bold":true}]],"26":[["~                                                                          ",{"fg":4,"bold":true}],["│",{"fg":2}],["                                                                           ",{"fg":4,"bold":true}]],"27":[["~                                                                          ",{"fg":4,"bold":true}],["│",{"fg":2}],["                                                                           ",{"fg":4,"bold":true}]],"28":[["~                                                                          ",{"fg":4,"bold":true}],["│",{"fg":2}],["                                                                           ",{"fg":4,"bold":true}]],"29":[["~                                                                          ",{"fg":4,"bold":true}],["│",{"fg":2}],["                                                                           ",{"fg":4,"bold":true}]],"30":[["~                                                                          ",{"fg":4,"bold":true}],["│",{"fg":2}],["                                                                           ",{"fg":4,"bold":true}]],"31":[["~                                                                          ",{"fg":4,"bold":true}],["│",{"fg":2}],["                                                                           ",{"fg":4,"bold":true}]],"32":[["~                                                                          ",{"fg":4,"bold":true}],["│",{"fg":2}],["                                                                           ",{"fg":4,"bold":true}]],"33":[["~                                                                          ",{"fg":4,"bold":true}],["│",{"fg":2}],["                                                                           ",{"fg":4,"bold":true}]],"34":[["~                                                                          ",{"fg":4,"bold":true}],["│",{"fg":2}],["                                                                           ",{"fg":4,"bold":true}]],"35":[["~                                                                          ",{"fg":4,"bold":true}],["│",{"fg":2}],["                                                                           ",{"fg":4,"bold":true}]],"36":[["~                                                                          ",{"fg":4,"bold":true}],["│",{"fg":2}],["                                                                           ",{"fg":4,"bold":true}]],"37":[["~                                                                          ",{"fg":4,"bold":true}],["│",{"fg":2}],["                                                                           ",{"fg":4,"bold":true}]],"38":[["~                                                                          ",{"fg":4,"bold":true}],["│",{"fg":2}],["                                                                           ",{"fg":4,"bold":true}]],"39":[[":q                                                                         ",{}],["│",{"fg":2}],["                                                         8,1           All ",{}]]},"cursor":{"x":64,"y":5,"visible":false}}],[0.005630999999999999,{"lines":{"1":[["  6 ",{"fg":3}],["#include",{"fg":5}],["<unistd.h>",{"fg":2}],[" ",{}],["/* zaglavlje u kojem je deklarisana getpid() funkcij",{"fg":1}],["│                                                                           ",{}]],"2":[["    ",{"fg":3}],["a */",{"fg":1}],["                                                                   │                                                                           ",{}]],"3":[["  5 ",{"fg":3}],["#include",{"fg":5}],["<sys/types.h>",{"fg":2}],[" ",{}],["/* zaglavlje u kojem je definisan tip pid_t →  un",{"fg":1}],["│                                                                           ",{}]],"4":[["    ",{"fg":3}],["signed int */",{"fg":1}],["                                                          │                                                                           ",{}]],"5":[["  4 ",{"fg":3}],["int",{"fg":4,"bold":true}],[" main()                                                             │                                                                           ",{}]],"6":[["  3 ",{"fg":3}],["{                                                                      │                                                                           ",{}]],"7":[["  2 ",{"fg":3}],["  pid_t childPID;                                                      │                                                                           ",{}]],"8":[["  1 ",{"fg":3}],["  pid_t mojPID = getpid();                                             │                                                                           ",{}]],"9":[["  0 ",{"fg":3}],["  childPID = fork();                                                   │                                                                           ",{}]],"10":[["  1 ",{"fg":3}],["  ",{}],["// f-ja fork vraca -1 ukoliko je greska",{"fg":1}],["                              │                                                                           ",{}]],"11":[["  2 ",{"fg":3}],["  ",{}],["// 0 u kreiranom child proces-u",{"fg":1}],["                                      │                                                                           ",{}]],"12":[["  3 ",{"fg":3}],["  ",{}],["// 1 u parent procesu koji je pozvao fork f-ju",{"fg":1}],["                       │                                                                           ",{}]],"13":[["  4 ",{"fg":3}],["  ",{}],["if",{"fg":4,"bold":true}],["(childPID == -",{}],["1",{"fg":2}],[")                                                   │                                                                           ",{}]],"14":[["  5 ",{"fg":3}],["  {                                                                    │                                                                           ",{}]],"15":[["  6 ",{"fg":3}],["    error(",{}],["\"Kreiranje procesa neuspjesno! :(\"",{"fg":2}],[");                         │                                                                           ",{}]],"16":[["  7 ",{"fg":3}],["    ",{}],["return",{"fg":4,"bold":true}],[" ",{}],["1",{"fg":2}],[";                                                          │                                                                           ",{}]],"17":[["  8 ",{"fg":3}],["  }                                                                    │                                                                           ",{}]],"18":[["  9 ",{"fg":3}],["  ",{}],["if",{"fg":4,"bold":true}],[" (childPID == ",{}],["0",{"fg":2}],[")                                                   │                                                                           ",{}]],"19":[[" 10 ",{"fg":3}],["    printf(",{}],["\"Child proces sa PID = ",{"fg":2}],["%ld",{"fg":1,"bold":true}],[", ID = ",{"fg":2}],["%ld\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[", (",{}],["long",{"fg":4,"bold":true}],[")getpid(), (",{}],["lo",{"fg":4,"bold":true}],["│                                                                           ",{}]],"20":[["    ",{"fg":3}],["ng",{"fg":4,"bold":true}],[")mojPID);                                                            │                                                                           ",{}]],"21":[[" 11 ",{"fg":3}],["  ",{}],["else",{"fg":4,"bold":true}],["                                                                 ",{}],["│",{"fg":2}],["                                                                           ",{}]],"22":[[" 12 ",{"fg":3}],["    printf(",{}],["\"Parent proces sa PID = ",{"fg":2}],["%ld",{"fg":1,"bold":true}],[", ID = ",{"fg":2}],["%ld\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[", (",{}],["long",{"fg":4,"bold":true}],[")getpid(), (",{}],["l",{"fg":4,"bold":true}],["│",{"fg":2}],["                                                                           ",{}]],"23":[["    ",{"fg":3}],["ong",{"fg":4,"bold":true}],[")mojPID);                                                           ",{}],["│",{"fg":2}],["                                                                           ",{}]],"24":[[" 13 ",{"fg":3}],["  ",{}],["return",{"fg":4,"bold":true}],[" ",{}],["0",{"fg":2}],[";                                                            ",{}],["│",{"fg":2}],["                                                                           ",{}]],"25":[[" 14 ",{"fg":3}],["}                                                                      ",{}],["│",{"fg":2}],["                                                                           ",{}]],"26":[["~                                                                          ",{"fg":4,"bold":true}],["│",{"fg":2}],["                                                                           ",{}]],"27":[["~                                                                          ",{"fg":4,"bold":true}],["│",{"fg":2}],["                                                                           ",{}]],"28":[["~                                                                          ",{"fg":4,"bold":true}],["│",{"fg":2}],["                                                                           ",{}]],"29":[["~                                                                          ",{"fg":4,"bold":true}],["│",{"fg":2}],["                                                                           ",{}]],"30":[["~                                                                          ",{"fg":4,"bold":true}],["│",{"fg":2}],["                                                                           ",{}]],"31":[["~                                                                          ",{"fg":4,"bold":true}],["│",{"fg":2}],["                                                                           ",{}]],"32":[["~                                                                          ",{"fg":4,"bold":true}],["│",{"fg":2}],["                                                                           ",{}]],"33":[["~                                                                          ",{"fg":4,"bold":true}],["│",{"fg":2}],["                                                                           ",{}]],"34":[["~                                                                          ",{"fg":4,"bold":true}],["│",{"fg":2}],["                                                                           ",{}]],"35":[["~                                                                          ",{"fg":4,"bold":true}],["│",{"fg":2}],["                                                                           ",{}]],"36":[["~                                                                          ",{"fg":4,"bold":true}],["│",{"fg":2}],["                                                                           ",{}]],"37":[["~                                                                          ",{"fg":4,"bold":true}],["│",{"fg":2}],["                                                                           ",{}]],"38":[["~                                                                          ",{"fg":4,"bold":true}],["│",{"fg":2}],["                                                                           ",{}]],"39":[["                                                         8,1           All ",{}],["│",{"fg":2}],["                                                                           ",{}]]},"cursor":{"x":76,"y":0,"visible":true}}],[0.473682,{"lines":{"40":[["[0] 0:bash*                                                                                                    \"nermin-SATELLITE-C55-A\" 19:05 10-Okt-14",{"fg":0,"bg":2}]]}}],[0.066748,{"lines":{"0":[["  7 ",{"fg":3}],["#include",{"fg":5}],["<stdio.h>",{"fg":2}],["                                                      │nermin >                                                                   ",{}]]},"cursor":{"x":85}}],[0.506502,{"lines":{"0":[["  7 ",{"fg":3}],["#include",{"fg":5}],["<stdio.h>",{"fg":2}],["                                                      │nermin > l                                                                 ",{}]]},"cursor":{"x":86}}],[0.085341,{"lines":{"0":[["  7 ",{"fg":3}],["#include",{"fg":5}],["<stdio.h>",{"fg":2}],["                                                      │nermin > ls                                                                ",{}]]},"cursor":{"x":87}}],[0.194528,{"lines":{"1":[["  6 ",{"fg":3}],["#include",{"fg":5}],["<unistd.h>",{"fg":2}],[" ",{}],["/* zaglavlje u kojem je deklarisana getpid() funkcij",{"fg":1}],["│exec.c  primjer_1.c  primjer_2.c                                           ",{}]]},"cursor":{"x":76,"y":2}}],[0.000294,{"lines":{"2":[["    ",{"fg":3}],["a */",{"fg":1}],["                                                                   │nermin >                                                                   ",{}]]},"cursor":{"x":85}}],[1.190293,{"lines":{"2":[["    ",{"fg":3}],["a */",{"fg":1}],["                                                                   │nermin > g                                                                 ",{}]]},"cursor":{"x":86}}],[0.472183,{"lines":{"2":[["    ",{"fg":3}],["a */",{"fg":1}],["                                                                   │nermin > gc                                                                ",{}]]},"cursor":{"x":87}}],[0.310206,{"lines":{"2":[["    ",{"fg":3}],["a */",{"fg":1}],["                                                                   │nermin > gcc                                                               ",{}]]},"cursor":{"x":88}}],[0.502227,{"cursor":{"x":89}}],[1.147564,{"lines":{"2":[["    ",{"fg":3}],["a */",{"fg":1}],["                                                                   │nermin > gcc -                                                             ",{}]]},"cursor":{"x":90}}],[0.434497,{"lines":{"2":[["    ",{"fg":3}],["a */",{"fg":1}],["                                                                   │nermin > gcc -o                                                            ",{}]]},"cursor":{"x":91}}],[0.238002,{"cursor":{"x":92}}],[0.247961,{"lines":{"2":[["    ",{"fg":3}],["a */",{"fg":1}],["                                                                   │nermin > gcc -o p                                                          ",{}]]},"cursor":{"x":93}}],[0.331922,{"lines":{"2":[["    ",{"fg":3}],["a */",{"fg":1}],["                                                                   │nermin > gcc -o pr                                                         ",{}]]},"cursor":{"x":94}}],[0.294301,{"lines":{"2":[["    ",{"fg":3}],["a */",{"fg":1}],["                                                                   │nermin > gcc -o pri                                                        ",{}]]},"cursor":{"x":95}}],[0.355148,{"lines":{"2":[["    ",{"fg":3}],["a */",{"fg":1}],["                                                                   │nermin > gcc -o prim                                                       ",{}]]},"cursor":{"x":96}}],[0.350597,{"lines":{"2":[["    ",{"fg":3}],["a */",{"fg":1}],["                                                                   │nermin > gcc -o primj                                                      ",{}]]},"cursor":{"x":97}}],[0.142922,{"lines":{"2":[["    ",{"fg":3}],["a */",{"fg":1}],["                                                                   │nermin > gcc -o primje                                                     ",{}]]},"cursor":{"x":98}}],[0.311397,{"lines":{"2":[["    ",{"fg":3}],["a */",{"fg":1}],["                                                                   │nermin > gcc -o primjer                                                    ",{}]]},"cursor":{"x":99}}],[0.878134,{"lines":{"2":[["    ",{"fg":3}],["a */",{"fg":1}],["                                                                   │nermin > gcc -o primjer_                                                   ",{}]]},"cursor":{"x":100}}],[0.691375,{"lines":{"2":[["    ",{"fg":3}],["a */",{"fg":1}],["                                                                   │nermin > gcc -o primjer_1                                                  ",{}]]},"cursor":{"x":101}}],[0.396981,{"cursor":{"x":102}}],[0.277171,{"lines":{"2":[["    ",{"fg":3}],["a */",{"fg":1}],["                                                                   │nermin > gcc -o primjer_1 p                                                ",{}]]},"cursor":{"x":103}}],[0.371423,{"lines":{"2":[["    ",{"fg":3}],["a */",{"fg":1}],["                                                                   │nermin > gcc -o primjer_1 pr                                               ",{}]]},"cursor":{"x":104}}],[0.178183,{"lines":{"2":[["    ",{"fg":3}],["a */",{"fg":1}],["                                                                   │nermin > gcc -o primjer_1 pri                                              ",{}]]},"cursor":{"x":105}}],[0.281881,{"lines":{"2":[["    ",{"fg":3}],["a */",{"fg":1}],["                                                                   │nermin > gcc -o primjer_1 prim                                             ",{}]]},"cursor":{"x":106}}],[0.233451,{"lines":{"2":[["    ",{"fg":3}],["a */",{"fg":1}],["                                                                   │nermin > gcc -o primjer_1 primj                                            ",{}]]},"cursor":{"x":107}}],[0.144671,{"lines":{"2":[["    ",{"fg":3}],["a */",{"fg":1}],["                                                                   │nermin > gcc -o primjer_1 primje                                           ",{}]]},"cursor":{"x":108}}],[0.26502,{"lines":{"2":[["    ",{"fg":3}],["a */",{"fg":1}],["                                                                   │nermin > gcc -o primjer_1 primjer                                          ",{}]]},"cursor":{"x":109}}],[0.467457,{"lines":{"2":[["    ",{"fg":3}],["a */",{"fg":1}],["                                                                   │nermin > gcc -o primjer_1 primjer_                                         ",{}]]},"cursor":{"x":110}}],[0.431191,{"lines":{"2":[["    ",{"fg":3}],["a */",{"fg":1}],["                                                                   │nermin > gcc -o primjer_1 primjer_1                                        ",{}]]},"cursor":{"x":111}}],[0.516605,{"lines":{"2":[["    ",{"fg":3}],["a */",{"fg":1}],["                                                                   │nermin > gcc -o primjer_1 primjer_1.c                                      ",{}]]},"cursor":{"x":114}}],[1.377959,{"cursor":{"x":76,"y":3}}],[0.334313,{"lines":{"40":[["[0] 0:gcc*                                                                                                     \"nermin-SATELLITE-C55-A\" 19:05 10-Okt-14",{"fg":0,"bg":2}]]}}],[1.152826,{"lines":{"3":[["  5 ",{"fg":3}],["#include",{"fg":5}],["<sys/types.h>",{"fg":2}],[" ",{}],["/* zaglavlje u kojem je definisan tip pid_t →  un",{"fg":1}],["│nermin >                                                                   ",{}]]},"cursor":{"x":85}}],[0.351818,{"lines":{"40":[["[0] 0:bash*                                                                                                    \"nermin-SATELLITE-C55-A\" 19:05 10-Okt-14",{"fg":0,"bg":2}]]}}],[0.413817,{"lines":{"3":[["  5 ",{"fg":3}],["#include",{"fg":5}],["<sys/types.h>",{"fg":2}],[" ",{}],["/* zaglavlje u kojem je definisan tip pid_t →  un",{"fg":1}],["│nermin > l                                                                 ",{}]]},"cursor":{"x":86}}],[0.221118,{"lines":{"3":[["  5 ",{"fg":3}],["#include",{"fg":5}],["<sys/types.h>",{"fg":2}],[" ",{}],["/* zaglavlje u kojem je definisan tip pid_t →  un",{"fg":1}],["│nermin > ls                                                                ",{}]]},"cursor":{"x":87}}],[1.398672,{"cursor":{"x":76,"y":4}}],[0.001616,{"lines":{"4":[["    ",{"fg":3}],["signed int */",{"fg":1}],["                                                          │exec.c  ",{}],["primjer_1",{"fg":2,"bold":true}],["  primjer_1.c  primjer_2.c                                ",{}]],"5":[["  4 ",{"fg":3}],["int",{"fg":4,"bold":true}],[" main()                                                             │nermin >                                                                   ",{}]]},"cursor":{"x":85,"y":5}}],[1.658996,{"lines":{"5":[["  4 ",{"fg":3}],["int",{"fg":4,"bold":true}],[" main()                                                             │nermin > .                                                                 ",{}]]},"cursor":{"x":86}}],[0.269143,{"lines":{"5":[["  4 ",{"fg":3}],["int",{"fg":4,"bold":true}],[" main()                                                             │nermin > ./                                                                ",{}]]},"cursor":{"x":87}}],[0.510257,{"lines":{"5":[["  4 ",{"fg":3}],["int",{"fg":4,"bold":true}],[" main()                                                             │nermin > ./p                                                               ",{}]]},"cursor":{"x":88}}],[0.428259,{"lines":{"5":[["  4 ",{"fg":3}],["int",{"fg":4,"bold":true}],[" main()                                                             │nermin > ./pr                                                              ",{}]]},"cursor":{"x":89}}],[0.280176,{"lines":{"5":[["  4 ",{"fg":3}],["int",{"fg":4,"bold":true}],[" main()                                                             │nermin > ./pri                                                             ",{}]]},"cursor":{"x":90}}],[0.320254,{"lines":{"5":[["  4 ",{"fg":3}],["int",{"fg":4,"bold":true}],[" main()                                                             │nermin > ./primjer_1                                                       ",{}]]},"cursor":{"x":97}}],[1.891876,{"cursor":{"x":76,"y":6}}],[0.001813,{"lines":{"6":[["  3 ",{"fg":3}],["{                                                                      │Parent proces sa PID = 2752, ID = 2752                                     ",{}]],"7":[["  2 ",{"fg":3}],["  pid_t childPID;                                                      │Child proces sa PID = 2753, ID = 2752                                      ",{}]],"8":[["  1 ",{"fg":3}],["  pid_t mojPID = getpid();                                             │nermin >                                                                   ",{}]]},"cursor":{"x":85,"y":8}}],[7.965495,{"lines":{"40":[["[0] 0:bash*                                                                                                    \"nermin-SATELLITE-C55-A\" 19:06 10-Okt-14",{"fg":0,"bg":2}]]}}],[0.775944,{"lines":{"0":[["  7 ",{"fg":3}],["#include",{"fg":5}],["<stdio.h>",{"fg":2}],["                                                      ",{}],["│",{"fg":2}],["nermin > ls                                                                ",{}]],"1":[["  6 ",{"fg":3}],["#include",{"fg":5}],["<unistd.h>",{"fg":2}],[" ",{}],["/* zaglavlje u kojem je deklarisana getpid() funkcij",{"fg":1}],["│",{"fg":2}],["exec.c  primjer_1.c  primjer_2.c                                           ",{}]],"2":[["    ",{"fg":3}],["a */",{"fg":1}],["                                                                   ",{}],["│",{"fg":2}],["nermin > gcc -o primjer_1 primjer_1.c                                      ",{}]],"3":[["  5 ",{"fg":3}],["#include",{"fg":5}],["<sys/types.h>",{"fg":2}],[" ",{}],["/* zaglavlje u kojem je definisan tip pid_t →  un",{"fg":1}],["│",{"fg":2}],["nermin > ls                                                                ",{}]],"4":[["    ",{"fg":3}],["signed int */",{"fg":1}],["                                                          ",{}],["│",{"fg":2}],["exec.c  ",{}],["primjer_1",{"fg":2,"bold":true}],["  primjer_1.c  primjer_2.c                                ",{}]],"5":[["  4 ",{"fg":3}],["int",{"fg":4,"bold":true}],[" main()                                                             ",{}],["│",{"fg":2}],["nermin > ./primjer_1                                                       ",{}]],"6":[["  3 ",{"fg":3}],["{                                                                      ",{}],["│",{"fg":2}],["Parent proces sa PID = 2752, ID = 2752                                     ",{}]],"7":[["  2 ",{"fg":3}],["  pid_t childPID;                                                      ",{}],["│",{"fg":2}],["Child proces sa PID = 2753, ID = 2752                                      ",{}]],"8":[["  1 ",{"fg":3}],["  pid_t mojPID = getpid();                                             ",{}],["│",{"fg":2}],["nermin >                                                                   ",{}]],"9":[["  0 ",{"fg":3}],["  childPID = fork();                                                   ",{}],["│",{"fg":2}],["                                                                           ",{}]],"10":[["  1 ",{"fg":3}],["  ",{}],["// f-ja fork vraca -1 ukoliko je greska",{"fg":1}],["                              ",{}],["│",{"fg":2}],["                                                                           ",{}]],"11":[["  2 ",{"fg":3}],["  ",{}],["// 0 u kreiranom child proces-u",{"fg":1}],["                                      ",{}],["│",{"fg":2}],["                                                                           ",{}]],"12":[["  3 ",{"fg":3}],["  ",{}],["// 1 u parent procesu koji je pozvao fork f-ju",{"fg":1}],["                       ",{}],["│",{"fg":2}],["                                                                           ",{}]],"13":[["  4 ",{"fg":3}],["  ",{}],["if",{"fg":4,"bold":true}],["(childPID == -",{}],["1",{"fg":2}],[")                                                   ",{}],["│",{"fg":2}],["                                                                           ",{}]],"14":[["  5 ",{"fg":3}],["  {                                                                    ",{}],["│",{"fg":2}],["                                                                           ",{}]],"15":[["  6 ",{"fg":3}],["    error(",{}],["\"Kreiranje procesa neuspjesno! :(\"",{"fg":2}],[");                         ",{}],["│",{"fg":2}],["                                                                           ",{}]],"16":[["  7 ",{"fg":3}],["    ",{}],["return",{"fg":4,"bold":true}],[" ",{}],["1",{"fg":2}],[";                                                          ",{}],["│",{"fg":2}],["                                                                           ",{}]],"17":[["  8 ",{"fg":3}],["  }                                                                    ",{}],["│",{"fg":2}],["                                                                           ",{}]],"18":[["  9 ",{"fg":3}],["  ",{}],["if",{"fg":4,"bold":true}],[" (childPID == ",{}],["0",{"fg":2}],[")                                                   ",{}],["│",{"fg":2}],["                                                                           ",{}]],"19":[[" 10 ",{"fg":3}],["    printf(",{}],["\"Child proces sa PID = ",{"fg":2}],["%ld",{"fg":1,"bold":true}],[", ID = ",{"fg":2}],["%ld\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[", (",{}],["long",{"fg":4,"bold":true}],[")getpid(), (",{}],["lo",{"fg":4,"bold":true}],["│",{"fg":2}],["                                                                           ",{}]],"20":[["    ",{"fg":3}],["ng",{"fg":4,"bold":true}],[")mojPID);                                                            ",{}],["│",{"fg":2}],["                                                                           ",{}]],"21":[[" 11 ",{"fg":3}],["  ",{}],["else",{"fg":4,"bold":true}],["                                                                 │                                                                           ",{}]],"22":[[" 12 ",{"fg":3}],["    printf(",{}],["\"Parent proces sa PID = ",{"fg":2}],["%ld",{"fg":1,"bold":true}],[", ID = ",{"fg":2}],["%ld\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[", (",{}],["long",{"fg":4,"bold":true}],[")getpid(), (",{}],["l",{"fg":4,"bold":true}],["│                                                                           ",{}]],"23":[["    ",{"fg":3}],["ong",{"fg":4,"bold":true}],[")mojPID);                                                           │                                                                           ",{}]],"24":[[" 13 ",{"fg":3}],["  ",{}],["return",{"fg":4,"bold":true}],[" ",{}],["0",{"fg":2}],[";                                                            │                                                                           ",{}]],"25":[[" 14 ",{"fg":3}],["}                                                                      │                                                                           ",{}]],"26":[["~                                                                          ",{"fg":4,"bold":true}],["│                                                                           ",{}]],"27":[["~                                                                          ",{"fg":4,"bold":true}],["│                                                                           ",{}]],"28":[["~                                                                          ",{"fg":4,"bold":true}],["│                                                                           ",{}]],"29":[["~                                                                          ",{"fg":4,"bold":true}],["│                                                                           ",{}]],"30":[["~                                                                          ",{"fg":4,"bold":true}],["│                                                                           ",{}]],"31":[["~                                                                          ",{"fg":4,"bold":true}],["│                                                                           ",{}]],"32":[["~                                                                          ",{"fg":4,"bold":true}],["│                                                                           ",{}]],"33":[["~                                                                          ",{"fg":4,"bold":true}],["│                                                                           ",{}]],"34":[["~                                                                          ",{"fg":4,"bold":true}],["│                                                                           ",{}]],"35":[["~                                                                          ",{"fg":4,"bold":true}],["│                                                                           ",{}]],"36":[["~                                                                          ",{"fg":4,"bold":true}],["│                                                                           ",{}]],"37":[["~                                                                          ",{"fg":4,"bold":true}],["│                                                                           ",{}]],"38":[["~                                                                          ",{"fg":4,"bold":true}],["│                                                                           ",{}]],"39":[["                                                         8,1           All │                                                                           ",{}]]},"cursor":{"x":46,"y":5,"visible":false}}],[0.000203,{"cursor":{"x":4,"y":9,"visible":true}}],[0.396806,{"lines":{"40":[["[0] 0:vim*                                                                                                     \"nermin-SATELLITE-C55-A\" 19:06 10-Okt-14",{"fg":0,"bg":2}]]}}],[1.431817,{"lines":{"0":[["  7 ",{"fg":3}],["#include",{"fg":5}],["<stdio.h>",{"fg":2}],["                                                                                                                                  ",{}]],"1":[["  6 ",{"fg":3}],["#include",{"fg":5}],["<unistd.h>",{"fg":2}],[" ",{}],["/* zaglavlje u kojem je deklarisana getpid() funkcij",{"fg":1}],["                                                                            ",{}]],"2":[["    ",{"fg":3}],["a */",{"fg":1}],["                                                                                                                                               ",{}]],"3":[["  5 ",{"fg":3}],["#include",{"fg":5}],["<sys/types.h>",{"fg":2}],[" ",{}],["/* zaglavlje u kojem je definisan tip pid_t →  un",{"fg":1}],["                                                                            ",{}]],"4":[["    ",{"fg":3}],["signed int */",{"fg":1}],["                                                                                                                                      ",{}]],"5":[["  4 ",{"fg":3}],["int",{"fg":4,"bold":true}],[" main()                                                                                                                                         ",{}]],"6":[["  3 ",{"fg":3}],["{                                                                                                                                                  ",{}]],"7":[["  2 ",{"fg":3}],["  pid_t childPID;                                                                                                                                  ",{}]],"8":[["  1 ",{"fg":3}],["  pid_t mojPID = getpid();                                                                                                                         ",{}]],"9":[["  0 ",{"fg":3}],["  childPID = fork();                                                                                                                               ",{}]],"10":[["  1 ",{"fg":3}],["  ",{}],["// f-ja fork vraca -1 ukoliko je greska",{"fg":1}],["                                                                                                          ",{}]],"11":[["  2 ",{"fg":3}],["  ",{}],["// 0 u kreiranom child proces-u",{"fg":1}],["                                                                                                                  ",{}]],"12":[["  3 ",{"fg":3}],["  ",{}],["// 1 u parent procesu koji je pozvao fork f-ju",{"fg":1}],["                                                                                                   ",{}]],"13":[["  4 ",{"fg":3}],["  ",{}],["if",{"fg":4,"bold":true}],["(childPID == -",{}],["1",{"fg":2}],[")                                                                                                                               ",{}]],"14":[["  5 ",{"fg":3}],["  {                                                                                                                                                ",{}]],"15":[["  6 ",{"fg":3}],["    error(",{}],["\"Kreiranje procesa neuspjesno! :(\"",{"fg":2}],[");                                                                                                     ",{}]],"16":[["  7 ",{"fg":3}],["    ",{}],["return",{"fg":4,"bold":true}],[" ",{}],["1",{"fg":2}],[";                                                                                                                                      ",{}]],"17":[["  8 ",{"fg":3}],["  }                                                                                                                                                ",{}]]},"cursor":{"x":21,"y":18,"visible":false}}],[0.013257,{"lines":{"1":[["  6 ",{"fg":3}],["#include",{"fg":5}],["<unistd.h>",{"fg":2}],[" ",{}],["/* zaglavlje u kojem je deklarisana getpid() funkcija */",{"fg":1}],["                                                                        ",{}]],"2":[["  5 ",{"fg":3}],["#include",{"fg":5}],["<sys/types.h>",{"fg":2}],[" ",{}],["/* zaglavlje u kojem je definisan tip pid_t →  unsigned int */",{"fg":1}],["                                                               ",{}]],"3":[["  4 ",{"fg":3}],["int",{"fg":4,"bold":true}],[" main()                                                                                                                                         ",{}]],"4":[["  3 ",{"fg":3}],["{                                                                                                                                                  ",{}]],"5":[["  2 ",{"fg":3}],["  pid_t childPID;                                                                                                                                  ",{}]],"6":[["  1 ",{"fg":3}],["  pid_t mojPID = getpid();                                                                                                                         ",{}]],"7":[["  0 ",{"fg":3}],["  childPID = fork();                                                                                                                               ",{}]],"8":[["  1 ",{"fg":3}],["  ",{}],["// f-ja fork vraca -1 ukoliko je greska",{"fg":1}],["                                                                                                          ",{}]],"9":[["  2 ",{"fg":3}],["  ",{}],["// 0 u kreiranom child proces-u",{"fg":1}],["                                                                                                                  ",{}]],"10":[["  3 ",{"fg":3}],["  ",{}],["// 1 u parent procesu koji je pozvao fork f-ju",{"fg":1}],["                                                                                                   ",{}]],"11":[["  4 ",{"fg":3}],["  ",{}],["if",{"fg":4,"bold":true}],["(childPID == -",{}],["1",{"fg":2}],[")                                                                                                                               ",{}]],"12":[["  5 ",{"fg":3}],["  {                                                                                                                                                ",{}]],"13":[["  6 ",{"fg":3}],["    error(",{}],["\"Kreiranje procesa neuspjesno! :(\"",{"fg":2}],[");                                                                                                     ",{}]],"14":[["  7 ",{"fg":3}],["    ",{}],["return",{"fg":4,"bold":true}],[" ",{}],["1",{"fg":2}],[";                                                                                                                                      ",{}]],"15":[["  8 ",{"fg":3}],["  }                                                                                                                                                ",{}]],"16":[["  9 ",{"fg":3}],["  ",{}],["if",{"fg":4,"bold":true}],[" (childPID == ",{}],["0",{"fg":2}],[")                                                                                                                               ",{}]],"17":[[" 10 ",{"fg":3}],["    printf(",{}],["\"Child proces sa PID = ",{"fg":2}],["%ld",{"fg":1,"bold":true}],[", ID = ",{"fg":2}],["%ld\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[", (",{}],["long",{"fg":4,"bold":true}],[")getpid(), (",{}],["long",{"fg":4,"bold":true}],[")mojPID);                                                                 ",{}]],"18":[[" 11 ",{"fg":3}],["  ",{}],["else",{"fg":4,"bold":true}],["                                                                                                                                             ",{}]],"19":[[" 12 ",{"fg":3}],["    printf(",{}],["\"Parent proces sa PID = ",{"fg":2}],["%ld",{"fg":1,"bold":true}],[", ID = ",{"fg":2}],["%ld\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[", (",{}],["long",{"fg":4,"bold":true}],[")getpid(), (",{}],["long",{"fg":4,"bold":true}],[")mojPID);                                                                ",{}]],"20":[[" 13 ",{"fg":3}],["  ",{}],["return",{"fg":4,"bold":true}],[" ",{}],["0",{"fg":2}],[";                                                                                                                                        ",{}]],"21":[[" 14 ",{"fg":3}],["}                                                                                                                                                  ",{}]],"22":[["~                                                                                                                                                      ",{"fg":4,"bold":true}]],"23":[["~                                                                                                                                                      ",{"fg":4,"bold":true}]],"24":[["~                                                                                                                                                      ",{"fg":4,"bold":true}]],"25":[["~                                                                                                                                                      ",{"fg":4,"bold":true}]],"26":[["~                                                                                                                                                      ",{"fg":4,"bold":true}]],"27":[["~                                                                                                                                                      ",{"fg":4,"bold":true}]],"28":[["~                                                                                                                                                      ",{"fg":4,"bold":true}]],"29":[["~                                                                                                                                                      ",{"fg":4,"bold":true}]],"30":[["~                                                                                                                                                      ",{"fg":4,"bold":true}]],"31":[["~                                                                                                                                                      ",{"fg":4,"bold":true}]],"32":[["~                                                                                                                                                      ",{"fg":4,"bold":true}]],"33":[["~                                                                                                                                                      ",{"fg":4,"bold":true}]],"34":[["~                                                                                                                                                      ",{"fg":4,"bold":true}]],"35":[["~                                                                                                                                                      ",{"fg":4,"bold":true}]],"36":[["~                                                                                                                                                      ",{"fg":4,"bold":true}]],"37":[["~                                                                                                                                                      ",{"fg":4,"bold":true}]],"38":[["~                                                                                                                                                      ",{"fg":4,"bold":true}]],"39":[["                                                                                                                                     8,1           All ",{}]],"40":[["[0] 0:vim*Z                                                                                                    \"nermin-SATELLITE-C55-A\" 19:06 10-Okt-14",{"fg":0,"bg":2}]]},"cursor":{"x":4,"y":7,"visible":true}}],[1.380547,{"lines":{"39":[[":                                                                                                                                                      ",{}]]},"cursor":{"x":1,"y":39}}],[0.5282210000000001,{"lines":{"39":[[":q                                                                                                                                                     ",{}]]},"cursor":{"x":2}}],[1.203863,{"cursor":{"x":0}}],[0.016748,{"lines":{"0":[["nermin > ls                                                                                                                                            ",{}]],"1":[["exec.c  primjer_1.c  primjer_2.c                                                                                                                       ",{}]],"2":[["nermin > vim primjer_1.c                                                                                                                               ",{}]],"3":[["                                                                                                                                                       ",{}]],"4":[["                                                                                                                                                       ",{}]],"5":[["                                                                                                                                                       ",{}]],"6":[["                                                                                                                                                       ",{}]],"7":[["                                                                                                                                                       ",{}]],"8":[["                                                                                                                                                       ",{}]],"9":[["                                                                                                                                                       ",{}]],"10":[["                                                                                                                                                       ",{}]],"11":[["                                                                                                                                                       ",{}]],"12":[["                                                                                                                                                       ",{}]],"13":[["                                                                                                                                                       ",{}]],"14":[["                                                                                                                                                       ",{}]],"15":[["                                                                                                                                                       ",{}]],"16":[["                                                                                                                                                       ",{}]],"17":[["                                                                                                                                                       ",{}]],"18":[["                                                                                                                                                       ",{}]],"19":[["                                                                                                                                                       ",{}]],"20":[["                                                                                                                                                       ",{}]],"21":[["                                                                                                                                                       ",{}]],"22":[["                                                                                                                                                       ",{}]],"23":[["                                                                                                                                                       ",{}]],"24":[["                                                                                                                                                       ",{}]],"25":[["                                                                                                                                                       ",{}]],"26":[["                                                                                                                                                       ",{}]],"27":[["                                                                                                                                                       ",{}]],"28":[["                                                                                                                                                       ",{}]],"29":[["                                                                                                                                                       ",{}]],"30":[["                                                                                                                                                       ",{}]],"31":[["                                                                                                                                                       ",{}]],"32":[["                                                                                                                                                       ",{}]],"33":[["                                                                                                                                                       ",{}]],"34":[["                                                                                                                                                       ",{}]],"35":[["                                                                                                                                                       ",{}]],"36":[["                                                                                                                                                       ",{}]],"37":[["                                                                                                                                                       ",{}]],"38":[["                                                                                                                                                       ",{}]],"39":[["                                                                                                                                                       ",{}]]},"cursor":{"y":3}}],[0.001455,{"lines":{"3":[["nermin >                                                                                                                                               ",{}]]},"cursor":{"x":9}}],[0.434682,{"lines":{"40":[["[0] 0:bash*Z                                                                                                   \"nermin-SATELLITE-C55-A\" 19:06 10-Okt-14",{"fg":0,"bg":2}]]}}],[1.234749,{"lines":{"3":[["nermin > l                                                                                                                                             ",{}]]},"cursor":{"x":10}}],[0.211559,{"lines":{"3":[["nermin > ls                                                                                                                                            ",{}]]},"cursor":{"x":11}}],[0.194814,{"cursor":{"x":0,"y":4}}],[0.003621,{"lines":{"4":[["exec.c  ",{}],["primjer_1",{"fg":2,"bold":true}],["  primjer_1.c  primjer_2.c                                                                                                            ",{}]],"5":[["nermin >                                                                                                                                               ",{}]]},"cursor":{"x":9,"y":5}}],[1.089434,{"lines":{"5":[["nermin > v                                                                                                                                             ",{}]]},"cursor":{"x":10}}],[0.155668,{"lines":{"5":[["nermin > vi                                                                                                                                            ",{}]]},"cursor":{"x":11}}],[0.319297,{"lines":{"5":[["nermin > vim                                                                                                                                           ",{}]]},"cursor":{"x":12}}],[0.243258,{"cursor":{"x":13}}],[0.270334,{"lines":{"5":[["nermin > vim e                                                                                                                                         ",{}]]},"cursor":{"x":14}}],[0.33102,{"lines":{"5":[["nermin > vim ex                                                                                                                                        ",{}]]},"cursor":{"x":15}}],[0.325341,{"lines":{"5":[["nermin > vim exec.c                                                                                                                                    ",{}]]},"cursor":{"x":20}}],[1.102118,{"cursor":{"x":0,"y":6}}],[0.025356,{"lines":{"40":[["[0] 0:vim*Z                                                                                                    \"nermin-SATELLITE-C55-A\" 19:06 10-Okt-14",{"fg":0,"bg":2}]]}}],[0.146006,{"lines":{"0":[["                                                                                                                                                       ",{}]],"1":[["                                                                                                                                                       ",{}]],"2":[["                                                                                                                                                       ",{}]],"3":[["                                                                                                                                                       ",{}]],"4":[["                                                                                                                                                       ",{}]],"5":[["                                                                                                                                                       ",{}]]}}],[0.01015,{"lines":{"39":[["\"exec.c\" 17L, 773C                                                                                                                                     ",{}]]},"cursor":{"x":18,"y":39,"visible":false}}],[0.030557,{"lines":{"0":[["  0 ",{"fg":3}],["/* Exec funkcija */",{"fg":1}],["                                                                                                                                ",{}]],"1":[["  1 ",{"fg":3}],["                                                                                                                                                   ",{}]],"2":[["  2 ",{"fg":3}],["#include ",{"fg":5}],["<unistd.h>",{"fg":2}],["                                                                                                                                ",{}]],"3":[["  3 ",{"fg":3}],["/* Exec funkcije zamjenjuju trenutnu sliku procesa s novom slikom procesa.",{"fg":1}],["                                                                         ",{}]],"4":[["  4 ",{"fg":3}],[" * Početni argument za ove funkcije jeste putanja od datoteke koja ce se izvrsit.",{"fg":1}],["                                                                  ",{}]],"5":[["  5 ",{"fg":3}],[" * npr. ukoliko hocemo izvrsit f-ju  ls prvi argument ce biti upravo ls a ostali argumenti ce biti proslijedjeni ",{"fg":1}],["                                  ",{}]],"6":[["  6 ",{"fg":3}],[" * f-ji ls",{"fg":1}],["                                                                                                                                         ",{}]],"7":[["  7 ",{"fg":3}],[" *",{"fg":1}],["                                                                                                                                                 ",{}]],"8":[["  8 ",{"fg":3}],[" * kao npr.   ls -lt */",{"fg":1}],["                                                                                                                            ",{}]],"9":[["  9 ",{"fg":3}],["extern",{"fg":4,"bold":true}],[" ",{}],["char",{"fg":4,"bold":true}],[" **environ;                                                                                                                             ",{}]],"10":[[" 10 ",{"fg":3}],["int",{"fg":4,"bold":true}],[" execl(",{}],["const",{"fg":4,"bold":true}],[" ",{}],["char",{"fg":4,"bold":true}],[" *path, ",{}],["const",{"fg":4,"bold":true}],[" ",{}],["char",{"fg":4,"bold":true}],[" *arg0, ... ",{}],["/*, char *(0) */",{"fg":1}],[");                                                                               ",{}]],"11":[[" 11 ",{"fg":3}],["int",{"fg":4,"bold":true}],[" execle(",{}],["const",{"fg":4,"bold":true}],[" ",{}],["char",{"fg":4,"bold":true}],[" *path, ",{}],["const",{"fg":4,"bold":true}],[" ",{}],["char",{"fg":4,"bold":true}],[" *arg0, ... ",{}],["/*, char *(0), char *const envp[] */",{"fg":1}],[");                                                          ",{}]],"12":[[" 12 ",{"fg":3}],["int",{"fg":4,"bold":true}],[" execlp(",{}],["const",{"fg":4,"bold":true}],[" ",{}],["char",{"fg":4,"bold":true}],[" *file, ",{}],["const",{"fg":4,"bold":true}],[" ",{}],["char",{"fg":4,"bold":true}],["                                                                                                            ",{}]]},"cursor":{"x":43,"y":12}}],[0.00232,{"lines":{"12":[[" 12 ",{"fg":3}],["int",{"fg":4,"bold":true}],[" execlp(",{}],["const",{"fg":4,"bold":true}],[" ",{}],["char",{"fg":4,"bold":true}],[" *file, ",{}],["const",{"fg":4,"bold":true}],[" ",{}],["char",{"fg":4,"bold":true}],[" *arg0, ... ",{}],["/*, char *(0) */",{"fg":1}],[");                                                                              ",{}]],"13":[[" 13 ",{"fg":3}],["                                                                                                                                                   ",{}]],"14":[[" 14 ",{"fg":3}],["int",{"fg":4,"bold":true}],[" execv(",{}],["const",{"fg":4,"bold":true}],[" ",{}],["char",{"fg":4,"bold":true}],[" *path, ",{}],["char",{"fg":4,"bold":true}],[" *",{}],["const",{"fg":4,"bold":true}],[" argv[]);                                                                                                   ",{}]],"15":[[" 15 ",{"fg":3}],["int",{"fg":4,"bold":true}],[" execve(",{}],["const",{"fg":4,"bold":true}],[" ",{}],["char",{"fg":4,"bold":true}],[" *path, ",{}],["char",{"fg":4,"bold":true}],[" *",{}],["const",{"fg":4,"bold":true}],[" argv[], ",{}],["char",{"fg":4,"bold":true}],[" *",{}],["const",{"fg":4,"bold":true}],[" envp[]);                                                                              ",{}]],"16":[[" 16 ",{"fg":3}],["int",{"fg":4,"bold":true}],[" execvp(",{}],["const",{"fg":4,"bold":true}],[" ",{}],["char",{"fg":4,"bold":true}],[" *file, ",{}],["char",{"fg":4,"bold":true}],[" *",{}],["const",{"fg":4,"bold":true}],[" argv[]);                                                                                                  ",{}]],"17":[["~                                                                                                                                                      ",{"fg":4,"bold":true}]],"18":[["~                                                                                                                                                      ",{"fg":4,"bold":true}]],"19":[["~                                                                                                                                                      ",{"fg":4,"bold":true}]],"20":[["~                                                                                                                                                      ",{"fg":4,"bold":true}]],"21":[["~                                                                                                                                                      ",{"fg":4,"bold":true}]],"22":[["~                                                                                                                                                      ",{"fg":4,"bold":true}]],"23":[["~                                                                                                                                                      ",{"fg":4,"bold":true}]],"24":[["~                                                                                                                                                      ",{"fg":4,"bold":true}]],"25":[["~                                                                                                                                                      ",{"fg":4,"bold":true}]],"26":[["~                                                                                                                                                      ",{"fg":4,"bold":true}]],"27":[["~                                                                                                                                                      ",{"fg":4,"bold":true}]],"28":[["~                                                                                                                                                      ",{"fg":4,"bold":true}]],"29":[["~                                                                                                                                                      ",{"fg":4,"bold":true}]],"30":[["~                                                                                                                                                      ",{"fg":4,"bold":true}]],"31":[["~                                                                                                                                                      ",{"fg":4,"bold":true}]],"32":[["~                                                                                                                                                      ",{"fg":4,"bold":true}]],"33":[["~                                                                                                                                                      ",{"fg":4,"bold":true}]],"34":[["~                                                                                                                                                      ",{"fg":4,"bold":true}]],"35":[["~                                                                                                                                                      ",{"fg":4,"bold":true}]],"36":[["~                                                                                                                                                      ",{"fg":4,"bold":true}]],"37":[["~                                                                                                                                                      ",{"fg":4,"bold":true}]],"38":[["~                                                                                                                                                      ",{"fg":4,"bold":true}]],"39":[["\"exec.c\" 17L, 773C                                                                                                                   1,1           All ",{}]]},"cursor":{"x":4,"y":0,"visible":true}}],[2.105278,{"lines":{"0":[["  1 ",{"fg":3}],["/* Exec funkcija */",{"fg":1}],["                                                                                                                                ",{}]],"1":[["  0 ",{"fg":3}],["                                                                                                                                                   ",{}]],"2":[["  1 ",{"fg":3}],["#include ",{"fg":5}],["<unistd.h>",{"fg":2}],["                                                                                                                                ",{}]],"3":[["  2 ",{"fg":3}],["/* Exec funkcije zamjenjuju trenutnu sliku procesa s novom slikom procesa.",{"fg":1}],["                                                                         ",{}]],"4":[["  3 ",{"fg":3}],[" * Početni argument za ove funkcije jeste putanja od datoteke koja ce se izvrsit.",{"fg":1}],["                                                                  ",{}]],"5":[["  4 ",{"fg":3}],[" * npr. ukoliko hocemo izvrsit f-ju  ls prvi argument ce biti upravo ls a ostali argumenti ce biti proslijedjeni ",{"fg":1}],["                                  ",{}]],"6":[["  5 ",{"fg":3}],[" * f-ji ls",{"fg":1}],["                                                                                                                                         ",{}]],"7":[["  6 ",{"fg":3}],[" *",{"fg":1}],["                                                                                                                                                 ",{}]],"8":[["  7 ",{"fg":3}],[" * kao npr.   ls -lt */",{"fg":1}],["                                                                                                                            ",{}]],"9":[["  8 ",{"fg":3}],["extern",{"fg":4,"bold":true}],[" ",{}],["char",{"fg":4,"bold":true}],[" **environ;                                                                                                                             ",{}]],"10":[["  9 ",{"fg":3}],["int",{"fg":4,"bold":true}],[" execl(",{}],["const",{"fg":4,"bold":true}],[" ",{}],["char",{"fg":4,"bold":true}],[" *path, ",{}],["const",{"fg":4,"bold":true}],[" ",{}],["char",{"fg":4,"bold":true}],[" *arg0, ... ",{}],["/*, char *(0) */",{"fg":1}],[");                                                                               ",{}]],"11":[[" 10 ",{"fg":3}],["int",{"fg":4,"bold":true}],[" execle(",{}],["const",{"fg":4,"bold":true}],[" ",{}],["char",{"fg":4,"bold":true}],[" *path, ",{}],["const",{"fg":4,"bold":true}],[" ",{}],["char",{"fg":4,"bold":true}],[" *arg0, ... ",{}],["/*, char *(0), char *const envp[] */",{"fg":1}],[");                                                          ",{}]],"12":[[" 11 ",{"fg":3}],["int",{"fg":4,"bold":true}],[" execlp(",{}],["const",{"fg":4,"bold":true}],[" ",{}],["char",{"fg":4,"bold":true}],[" *file, ",{}],["const",{"fg":4,"bold":true}],[" ",{}],["char",{"fg":4,"bold":true}],[" *arg0, ... ",{}],["/*, char *(0) */",{"fg":1}],[");                                                                              ",{}]],"13":[[" 12 ",{"fg":3}],["                                                                                                                                                   ",{}]],"14":[[" 13 ",{"fg":3}],["int",{"fg":4,"bold":true}],[" execv(",{}],["const",{"fg":4,"bold":true}],[" ",{}],["char",{"fg":4,"bold":true}],[" *path, ",{}],["char",{"fg":4,"bold":true}],[" *",{}],["const",{"fg":4,"bold":true}],[" argv[]);                                                                                                   ",{}]],"15":[[" 14 ",{"fg":3}],["int",{"fg":4,"bold":true}],[" execve(",{}],["const",{"fg":4,"bold":true}],[" ",{}],["char",{"fg":4,"bold":true}],[" *path, ",{}],["char",{"fg":4,"bold":true}],[" *",{}],["const",{"fg":4,"bold":true}],[" argv[], ",{}],["char",{"fg":4,"bold":true}],[" *",{}],["const",{"fg":4,"bold":true}],[" envp[]);                                                                              ",{}]],"16":[[" 15 ",{"fg":3}],["int",{"fg":4,"bold":true}],[" execvp(",{}],["const",{"fg":4,"bold":true}],[" ",{}],["char",{"fg":4,"bold":true}],[" *file, ",{}],["char",{"fg":4,"bold":true}],[" *",{}],["const",{"fg":4,"bold":true}],[" argv[]);                                                                                                  ",{}]],"39":[["\"exec.c\" 17L, 773C                                                                                                                   2,0-1         All ",{}]]},"cursor":{"y":1}}],[0.266157,{"lines":{"0":[["  2 ",{"fg":3}],["/* Exec funkcija */",{"fg":1}],["                                                                                                                                ",{}]],"1":[["  1 ",{"fg":3}],["                                                                                                                                                   ",{}]],"2":[["  0 ",{"fg":3}],["#include ",{"fg":5}],["<unistd.h>",{"fg":2}],["                                                                                                                                ",{}]],"3":[["  1 ",{"fg":3}],["/* Exec funkcije zamjenjuju trenutnu sliku procesa s novom slikom procesa.",{"fg":1}],["                                                                         ",{}]],"4":[["  2 ",{"fg":3}],[" * Početni argument za ove funkcije jeste putanja od datoteke koja ce se izvrsit.",{"fg":1}],["                                                                  ",{}]],"5":[["  3 ",{"fg":3}],[" * npr. ukoliko hocemo izvrsit f-ju  ls prvi argument ce biti upravo ls a ostali argumenti ce biti proslijedjeni ",{"fg":1}],["                                  ",{}]],"6":[["  4 ",{"fg":3}],[" * f-ji ls",{"fg":1}],["                                                                                                                                         ",{}]],"7":[["  5 ",{"fg":3}],[" *",{"fg":1}],["                                                                                                                                                 ",{}]],"8":[["  6 ",{"fg":3}],[" * kao npr.   ls -lt */",{"fg":1}],["                                                                                                                            ",{}]],"9":[["  7 ",{"fg":3}],["extern",{"fg":4,"bold":true}],[" ",{}],["char",{"fg":4,"bold":true}],[" **environ;                                                                                                                             ",{}]],"10":[["  8 ",{"fg":3}],["int",{"fg":4,"bold":true}],[" execl(",{}],["const",{"fg":4,"bold":true}],[" ",{}],["char",{"fg":4,"bold":true}],[" *path, ",{}],["const",{"fg":4,"bold":true}],[" ",{}],["char",{"fg":4,"bold":true}],[" *arg0, ... ",{}],["/*, char *(0) */",{"fg":1}],[");                                                                               ",{}]],"11":[["  9 ",{"fg":3}],["int",{"fg":4,"bold":true}],[" execle(",{}],["const",{"fg":4,"bold":true}],[" ",{}],["char",{"fg":4,"bold":true}],[" *path, ",{}],["const",{"fg":4,"bold":true}],[" ",{}],["char",{"fg":4,"bold":true}],[" *arg0, ... ",{}],["/*, char *(0), char *const envp[] */",{"fg":1}],[");                                                          ",{}]],"12":[[" 10 ",{"fg":3}],["int",{"fg":4,"bold":true}],[" execlp(",{}],["const",{"fg":4,"bold":true}],[" ",{}],["char",{"fg":4,"bold":true}],[" *file, ",{}],["const",{"fg":4,"bold":true}],[" ",{}],["char",{"fg":4,"bold":true}],[" *arg0, ... ",{}],["/*, char *(0) */",{"fg":1}],[");                                                                              ",{}]],"13":[[" 11 ",{"fg":3}],["                                                                                                                                                   ",{}]],"14":[[" 12 ",{"fg":3}],["int",{"fg":4,"bold":true}],[" execv(",{}],["const",{"fg":4,"bold":true}],[" ",{}],["char",{"fg":4,"bold":true}],[" *path, ",{}],["char",{"fg":4,"bold":true}],[" *",{}],["const",{"fg":4,"bold":true}],[" argv[]);                                                                                                   ",{}]],"15":[[" 13 ",{"fg":3}],["int",{"fg":4,"bold":true}],[" execve(",{}],["const",{"fg":4,"bold":true}],[" ",{}],["char",{"fg":4,"bold":true}],[" *path, ",{}],["char",{"fg":4,"bold":true}],[" *",{}],["const",{"fg":4,"bold":true}],[" argv[], ",{}],["char",{"fg":4,"bold":true}],[" *",{}],["const",{"fg":4,"bold":true}],[" envp[]);                                                                              ",{}]],"16":[[" 14 ",{"fg":3}],["int",{"fg":4,"bold":true}],[" execvp(",{}],["const",{"fg":4,"bold":true}],[" ",{}],["char",{"fg":4,"bold":true}],[" *file, ",{}],["char",{"fg":4,"bold":true}],[" *",{}],["const",{"fg":4,"bold":true}],[" argv[]);                                                                                                  ",{}]],"39":[["\"exec.c\" 17L, 773C                                                                                                                   3,1           All ",{}]]},"cursor":{"y":2}}],[1.757532,{"lines":{"2":[["  0 ",{"fg":3}],["#",{"fg":5}],["include ",{"fg":5,"inverse":true}],["<unistd.h>",{"fg":2,"inverse":true}],[" ",{"inverse":true}],["                                                                                                                               ",{}]],"39":[["-- VISUAL LINE --",{"bold":true}],["                                                                                                                    3,1           All ",{}]]}}],[3.718394,{"lines":{"2":[["  0 ",{"fg":3}],["#include ",{"fg":5}],["<unistd.h>",{"fg":2}],["                                                                                                                                ",{}]],"39":[["                                                                                                                                     3,1           All ",{}]]}}],[0.379814,{"lines":{"0":[["  3 ",{"fg":3}],["/* Exec funkcija */",{"fg":1}],["                                                                                                                                ",{}]],"1":[["  2 ",{"fg":3}],["                                                                                                                                                   ",{}]],"2":[["  1 ",{"fg":3}],["#include ",{"fg":5}],["<unistd.h>",{"fg":2}],["                                                                                                                                ",{}]],"3":[["  0 ",{"fg":3}],["/* Exec funkcije zamjenjuju trenutnu sliku procesa s novom slikom procesa.",{"fg":1}],["                                                                         ",{}]],"4":[["  1 ",{"fg":3}],[" * Početni argument za ove funkcije jeste putanja od datoteke koja ce se izvrsit.",{"fg":1}],["                                                                  ",{}]],"5":[["  2 ",{"fg":3}],[" * npr. ukoliko hocemo izvrsit f-ju  ls prvi argument ce biti upravo ls a ostali argumenti ce biti proslijedjeni ",{"fg":1}],["                                  ",{}]],"6":[["  3 ",{"fg":3}],[" * f-ji ls",{"fg":1}],["                                                                                                                                         ",{}]],"7":[["  4 ",{"fg":3}],[" *",{"fg":1}],["                                                                                                                                                 ",{}]],"8":[["  5 ",{"fg":3}],[" * kao npr.   ls -lt */",{"fg":1}],["                                                                                                                            ",{}]],"9":[["  6 ",{"fg":3}],["extern",{"fg":4,"bold":true}],[" ",{}],["char",{"fg":4,"bold":true}],[" **environ;                                                                                                                             ",{}]],"10":[["  7 ",{"fg":3}],["int",{"fg":4,"bold":true}],[" execl(",{}],["const",{"fg":4,"bold":true}],[" ",{}],["char",{"fg":4,"bold":true}],[" *path, ",{}],["const",{"fg":4,"bold":true}],[" ",{}],["char",{"fg":4,"bold":true}],[" *arg0, ... ",{}],["/*, char *(0) */",{"fg":1}],[");                                                                               ",{}]],"11":[["  8 ",{"fg":3}],["int",{"fg":4,"bold":true}],[" execle(",{}],["const",{"fg":4,"bold":true}],[" ",{}],["char",{"fg":4,"bold":true}],[" *path, ",{}],["const",{"fg":4,"bold":true}],[" ",{}],["char",{"fg":4,"bold":true}],[" *arg0, ... ",{}],["/*, char *(0), char *const envp[] */",{"fg":1}],[");                                                          ",{}]],"12":[["  9 ",{"fg":3}],["int",{"fg":4,"bold":true}],[" execlp(",{}],["const",{"fg":4,"bold":true}],[" ",{}],["char",{"fg":4,"bold":true}],[" *file, ",{}],["const",{"fg":4,"bold":true}],[" ",{}],["char",{"fg":4,"bold":true}],[" *arg0, ... ",{}],["/*, char *(0) */",{"fg":1}],[");                                                                              ",{}]],"13":[[" 10 ",{"fg":3}],["                                                                                                                                                   ",{}]],"14":[[" 11 ",{"fg":3}],["int",{"fg":4,"bold":true}],[" execv(",{}],["const",{"fg":4,"bold":true}],[" ",{}],["char",{"fg":4,"bold":true}],[" *path, ",{}],["char",{"fg":4,"bold":true}],[" *",{}],["const",{"fg":4,"bold":true}],[" argv[]);                                                                                                   ",{}]],"15":[[" 12 ",{"fg":3}],["int",{"fg":4,"bold":true}],[" execve(",{}],["const",{"fg":4,"bold":true}],[" ",{}],["char",{"fg":4,"bold":true}],[" *path, ",{}],["char",{"fg":4,"bold":true}],[" *",{}],["const",{"fg":4,"bold":true}],[" argv[], ",{}],["char",{"fg":4,"bold":true}],[" *",{}],["const",{"fg":4,"bold":true}],[" envp[]);                                                                              ",{}]],"16":[[" 13 ",{"fg":3}],["int",{"fg":4,"bold":true}],[" execvp(",{}],["const",{"fg":4,"bold":true}],[" ",{}],["char",{"fg":4,"bold":true}],[" *file, ",{}],["char",{"fg":4,"bold":true}],[" *",{}],["const",{"fg":4,"bold":true}],[" argv[]);                                                                                                  ",{}]],"39":[["                                                                                                                                     4,1           All ",{}]]},"cursor":{"y":3}}],[0.290706,{"lines":{"0":[["  4 ",{"fg":3}],["/* Exec funkcija */",{"fg":1}],["                                                                                                                                ",{}]],"1":[["  3 ",{"fg":3}],["                                                                                                                                                   ",{}]],"2":[["  2 ",{"fg":3}],["#include ",{"fg":5}],["<unistd.h>",{"fg":2}],["                                                                                                                                ",{}]],"3":[["  1 ",{"fg":3}],["/* Exec funkcije zamjenjuju trenutnu sliku procesa s novom slikom procesa.",{"fg":1}],["                                                                         ",{}]],"4":[["  0 ",{"fg":3}],[" * Početni argument za ove funkcije jeste putanja od datoteke koja ce se izvrsit.",{"fg":1}],["                                                                  ",{}]],"5":[["  1 ",{"fg":3}],[" * npr. ukoliko hocemo izvrsit f-ju  ls prvi argument ce biti upravo ls a ostali argumenti ce biti proslijedjeni ",{"fg":1}],["                                  ",{}]],"6":[["  2 ",{"fg":3}],[" * f-ji ls",{"fg":1}],["                                                                                                                                         ",{}]],"7":[["  3 ",{"fg":3}],[" *",{"fg":1}],["                                                                                                                                                 ",{}]],"8":[["  4 ",{"fg":3}],[" * kao npr.   ls -lt */",{"fg":1}],["                                                                                                                            ",{}]],"9":[["  5 ",{"fg":3}],["extern",{"fg":4,"bold":true}],[" ",{}],["char",{"fg":4,"bold":true}],[" **environ;                                                                                                                             ",{}]]},"cursor":{"y":4}}],[0.004331999999999999,{"lines":{"10":[["  6 ",{"fg":3}],["int",{"fg":4,"bold":true}],[" execl(",{}],["const",{"fg":4,"bold":true}],[" ",{}],["char",{"fg":4,"bold":true}],[" *path, ",{}],["const",{"fg":4,"bold":true}],[" ",{}],["char",{"fg":4,"bold":true}],[" *arg0, ... ",{}],["/*, char *(0) */",{"fg":1}],[");                                                                               ",{}]],"11":[["  7 ",{"fg":3}],["int",{"fg":4,"bold":true}],[" execle(",{}],["const",{"fg":4,"bold":true}],[" ",{}],["char",{"fg":4,"bold":true}],[" *path, ",{}],["const",{"fg":4,"bold":true}],[" ",{}],["char",{"fg":4,"bold":true}],[" *arg0, ... ",{}],["/*, char *(0), char *const envp[] */",{"fg":1}],[");                                                          ",{}]],"12":[["  8 ",{"fg":3}],["int",{"fg":4,"bold":true}],[" execlp(",{}],["const",{"fg":4,"bold":true}],[" ",{}],["char",{"fg":4,"bold":true}],[" *file, ",{}],["const",{"fg":4,"bold":true}],[" ",{}],["char",{"fg":4,"bold":true}],[" *arg0, ... ",{}],["/*, char *(0) */",{"fg":1}],[");                                                                              ",{}]],"13":[["  9 ",{"fg":3}],["                                                                                                                                                   ",{}]],"14":[[" 10 ",{"fg":3}],["int",{"fg":4,"bold":true}],[" execv(",{}],["const",{"fg":4,"bold":true}],[" ",{}],["char",{"fg":4,"bold":true}],[" *path, ",{}],["char",{"fg":4,"bold":true}],[" *",{}],["const",{"fg":4,"bold":true}],[" argv[]);                                                                                                   ",{}]],"15":[[" 11 ",{"fg":3}],["int",{"fg":4,"bold":true}],[" execve(",{}],["const",{"fg":4,"bold":true}],[" ",{}],["char",{"fg":4,"bold":true}],[" *path, ",{}],["char",{"fg":4,"bold":true}],[" *",{}],["const",{"fg":4,"bold":true}],[" argv[], ",{}],["char",{"fg":4,"bold":true}],[" *",{}],["const",{"fg":4,"bold":true}],[" envp[]);                                                                              ",{}]],"16":[[" 12 ",{"fg":3}],["int",{"fg":4,"bold":true}],[" execvp(",{}],["const",{"fg":4,"bold":true}],[" ",{}],["char",{"fg":4,"bold":true}],[" *file, ",{}],["char",{"fg":4,"bold":true}],[" *",{}],["const",{"fg":4,"bold":true}],[" argv[]);                                                                                                  ",{}]],"39":[["                                                                                                                                     5,1           All ",{}]]}}],[0.258494,{"lines":{"0":[["  5 ",{"fg":3}],["/* Exec funkcija */",{"fg":1}],["                                                                                                                                ",{}]],"1":[["  4 ",{"fg":3}],["                                                                                                                                                   ",{}]],"2":[["  3 ",{"fg":3}],["#include ",{"fg":5}],["<unistd.h>",{"fg":2}],["                                                                                                                                ",{}]],"3":[["  2 ",{"fg":3}],["/* Exec funkcije zamjenjuju trenutnu sliku procesa s novom slikom procesa.",{"fg":1}],["                                                                         ",{}]],"4":[["  1 ",{"fg":3}],[" * Početni argument za ove funkcije jeste putanja od datoteke koja ce se izvrsit.",{"fg":1}],["                                                                  ",{}]],"5":[["  0 ",{"fg":3}],[" * npr. ukoliko hocemo izvrsit f-ju  ls prvi argument ce biti upravo ls a ostali argumenti ce biti proslijedjeni ",{"fg":1}],["                                  ",{}]],"6":[["  1 ",{"fg":3}],[" * f-ji ls",{"fg":1}],["                                                                                                                                         ",{}]],"7":[["  2 ",{"fg":3}],[" *",{"fg":1}],["                                                                                                                                                 ",{}]],"8":[["  3 ",{"fg":3}],[" * kao npr.   ls -lt */",{"fg":1}],["                                                                                                                            ",{}]],"9":[["  4 ",{"fg":3}],["extern",{"fg":4,"bold":true}],[" ",{}],["char",{"fg":4,"bold":true}],[" **environ;                                                                                                                             ",{}]],"10":[["  5 ",{"fg":3}],["int",{"fg":4,"bold":true}],[" execl(",{}],["const",{"fg":4,"bold":true}],[" ",{}],["char",{"fg":4,"bold":true}],[" *path, ",{}],["const",{"fg":4,"bold":true}],[" ",{}],["char",{"fg":4,"bold":true}],[" *arg0, ... ",{}],["/*, char *(0) */",{"fg":1}],[");                                                                               ",{}]],"11":[["  6 ",{"fg":3}],["int",{"fg":4,"bold":true}],[" execle(",{}],["const",{"fg":4,"bold":true}],[" ",{}],["char",{"fg":4,"bold":true}],[" *path, ",{}],["const",{"fg":4,"bold":true}],[" ",{}],["char",{"fg":4,"bold":true}],[" *arg0, ... ",{}],["/*, char *(0), char *const envp[] */",{"fg":1}],[");                                                          ",{}]],"12":[["  7 ",{"fg":3}],["int",{"fg":4,"bold":true}],[" execlp(",{}],["const",{"fg":4,"bold":true}],[" ",{}],["char",{"fg":4,"bold":true}],[" *file, ",{}],["const",{"fg":4,"bold":true}],[" ",{}],["char",{"fg":4,"bold":true}],[" *arg0, ... ",{}],["/*, char *(0) */",{"fg":1}],[");                                                                              ",{}]],"13":[["  8 ",{"fg":3}],["                                                                                                                                                   ",{}]],"14":[["  9 ",{"fg":3}],["int",{"fg":4,"bold":true}],[" execv(",{}],["const",{"fg":4,"bold":true}],[" ",{}],["char",{"fg":4,"bold":true}],[" *path, ",{}],["char",{"fg":4,"bold":true}],[" *",{}],["const",{"fg":4,"bold":true}],[" argv[]);                                                                                                   ",{}]],"15":[[" 10 ",{"fg":3}],["int",{"fg":4,"bold":true}],[" execve(",{}],["const",{"fg":4,"bold":true}],[" ",{}],["char",{"fg":4,"bold":true}],[" *path, ",{}],["char",{"fg":4,"bold":true}],[" *",{}],["const",{"fg":4,"bold":true}],[" argv[], ",{}],["char",{"fg":4,"bold":true}],[" *",{}],["const",{"fg":4,"bold":true}],[" envp[]);                                                                              ",{}]],"16":[[" 11 ",{"fg":3}],["int",{"fg":4,"bold":true}],[" execvp(",{}],["const",{"fg":4,"bold":true}],[" ",{}],["char",{"fg":4,"bold":true}],[" *file, ",{}],["char",{"fg":4,"bold":true}],[" *",{}],["const",{"fg":4,"bold":true}],[" argv[]);                                                                                                  ",{}]],"39":[["                                                                                                                                     6,1           All ",{}]]},"cursor":{"y":5}}],[0.214651,{"lines":{"0":[["  6 ",{"fg":3}],["/* Exec funkcija */",{"fg":1}],["                                                                                                                                ",{}]],"1":[["  5 ",{"fg":3}],["                                                                                                                                                   ",{}]],"2":[["  4 ",{"fg":3}],["#include ",{"fg":5}],["<unistd.h>",{"fg":2}],["                                                                                                                                ",{}]],"3":[["  3 ",{"fg":3}],["/* Exec funkcije zamjenjuju trenutnu sliku procesa s novom slikom procesa.",{"fg":1}],["                                                                         ",{}]],"4":[["  2 ",{"fg":3}],[" * Početni argument za ove funkcije jeste putanja od datoteke koja ce se izvrsit.",{"fg":1}],["                                                                  ",{}]],"5":[["  1 ",{"fg":3}],[" * npr. ukoliko hocemo izvrsit f-ju  ls prvi argument ce biti upravo ls a ostali argumenti ce biti proslijedjeni ",{"fg":1}],["                                  ",{}]],"6":[["  0 ",{"fg":3}],[" * f-ji ls",{"fg":1}],["                                                                                                                                         ",{}]],"7":[["  1 ",{"fg":3}],[" *",{"fg":1}],["                                                                                                                                                 ",{}]],"8":[["  2 ",{"fg":3}],[" * kao npr.   ls -lt */",{"fg":1}],["                                                                                                                            ",{}]],"9":[["  3 ",{"fg":3}],["extern",{"fg":4,"bold":true}],[" ",{}],["char",{"fg":4,"bold":true}],[" **environ;                                                                                                                             ",{}]],"10":[["  4 ",{"fg":3}],["int",{"fg":4,"bold":true}],[" execl(",{}],["const",{"fg":4,"bold":true}],[" ",{}],["char",{"fg":4,"bold":true}],[" *path, ",{}],["const",{"fg":4,"bold":true}],[" ",{}],["char",{"fg":4,"bold":true}],[" *arg0, ... ",{}],["/*, char *(0) */",{"fg":1}],[");                                                                               ",{}]],"11":[["  5 ",{"fg":3}],["int",{"fg":4,"bold":true}],[" execle(",{}],["const",{"fg":4,"bold":true}],[" ",{}],["char",{"fg":4,"bold":true}],[" *path, ",{}],["const",{"fg":4,"bold":true}],[" ",{}],["char",{"fg":4,"bold":true}],[" *arg0, ... ",{}],["/*, char *(0), char *const envp[] */",{"fg":1}],[");                                                          ",{}]],"12":[["  6 ",{"fg":3}],["int",{"fg":4,"bold":true}],[" execlp(",{}],["const",{"fg":4,"bold":true}],[" ",{}],["char",{"fg":4,"bold":true}],[" *file, ",{}],["const",{"fg":4,"bold":true}],[" ",{}],["char",{"fg":4,"bold":true}],[" *arg0, ... ",{}],["/*, char *(0) */",{"fg":1}],[");                                                                              ",{}]],"13":[["  7 ",{"fg":3}],["                                                                                                                                                   ",{}]],"14":[["  8 ",{"fg":3}],["int",{"fg":4,"bold":true}],[" execv(",{}],["const",{"fg":4,"bold":true}],[" ",{}],["char",{"fg":4,"bold":true}],[" *path, ",{}],["char",{"fg":4,"bold":true}],[" *",{}],["const",{"fg":4,"bold":true}],[" argv[]);                                                                                                   ",{}]],"15":[["  9 ",{"fg":3}],["int",{"fg":4,"bold":true}],[" execve(",{}],["const",{"fg":4,"bold":true}],[" ",{}],["char",{"fg":4,"bold":true}],[" *path, ",{}],["char",{"fg":4,"bold":true}],[" *",{}],["const",{"fg":4,"bold":true}],[" argv[], ",{}],["char",{"fg":4,"bold":true}],[" *",{}],["const",{"fg":4,"bold":true}],[" envp[]);                                                                              ",{}]],"16":[[" 10 ",{"fg":3}],["int",{"fg":4,"bold":true}],[" execvp(",{}],["const",{"fg":4,"bold":true}],[" ",{}],["char",{"fg":4,"bold":true}],[" *file, ",{}],["char",{"fg":4,"bold":true}],[" *",{}],["const",{"fg":4,"bold":true}],[" argv[]);                                                                                                  ",{}]],"39":[["                                                                                                                                     7,1           All ",{}]]},"cursor":{"y":6}}],[0.192423,{"lines":{"0":[["  7 ",{"fg":3}],["/* Exec funkcija */",{"fg":1}],["                                                                                                                                ",{}]],"1":[["  6 ",{"fg":3}],["                                                                                                                                                   ",{}]],"2":[["  5 ",{"fg":3}],["#include ",{"fg":5}],["<unistd.h>",{"fg":2}],["                                                                                                                                ",{}]],"3":[["  4 ",{"fg":3}],["/* Exec funkcije zamjenjuju trenutnu sliku procesa s novom slikom procesa.",{"fg":1}],["                                                                         ",{}]],"4":[["  3 ",{"fg":3}],[" * Početni argument za ove funkcije jeste putanja od datoteke koja ce se izvrsit.",{"fg":1}],["                                                                  ",{}]],"5":[["  2 ",{"fg":3}],[" * npr. ukoliko hocemo izvrsit f-ju  ls prvi argument ce biti upravo ls a ostali argumenti ce biti proslijedjeni ",{"fg":1}],["                                  ",{}]],"6":[["  1 ",{"fg":3}],[" * f-ji ls",{"fg":1}],["                                                                                                                                         ",{}]],"7":[["  0 ",{"fg":3}],[" *",{"fg":1}],["                                                                                                                                                 ",{}]],"8":[["  1 ",{"fg":3}],[" * kao npr.   ls -lt */",{"fg":1}],["                                                                                                                            ",{}]],"9":[["  2 ",{"fg":3}],["extern",{"fg":4,"bold":true}],[" ",{}],["char",{"fg":4,"bold":true}],[" **environ;                                                                                                                             ",{}]],"10":[["  3 ",{"fg":3}],["int",{"fg":4,"bold":true}],[" execl(",{}],["const",{"fg":4,"bold":true}],[" ",{}],["char",{"fg":4,"bold":true}],[" *path, ",{}],["const",{"fg":4,"bold":true}],[" ",{}],["char",{"fg":4,"bold":true}],[" *arg0, ... ",{}],["/*, char *(0) */",{"fg":1}],[");                                                                               ",{}]],"11":[["  4 ",{"fg":3}],["int",{"fg":4,"bold":true}],[" execle(",{}],["const",{"fg":4,"bold":true}],[" ",{}],["char",{"fg":4,"bold":true}],[" *path, ",{}],["const",{"fg":4,"bold":true}],[" ",{}],["char",{"fg":4,"bold":true}],[" *arg0, ... ",{}],["/*, char *(0), char *const envp[] */",{"fg":1}],[");                                                          ",{}]],"12":[["  5 ",{"fg":3}],["int",{"fg":4,"bold":true}],[" execlp(",{}],["const",{"fg":4,"bold":true}],[" ",{}],["char",{"fg":4,"bold":true}],[" *file, ",{}],["const",{"fg":4,"bold":true}],[" ",{}],["char",{"fg":4,"bold":true}],[" *arg0, ... ",{}],["/*, char *(0) */",{"fg":1}],[");                                                                              ",{}]],"13":[["  6 ",{"fg":3}],["                                                                                                                                                   ",{}]],"14":[["  7 ",{"fg":3}],["int",{"fg":4,"bold":true}],[" execv(",{}],["const",{"fg":4,"bold":true}],[" ",{}],["char",{"fg":4,"bold":true}],[" *path, ",{}],["char",{"fg":4,"bold":true}],[" *",{}],["const",{"fg":4,"bold":true}],[" argv[]);                                                                                                   ",{}]],"15":[["  8 ",{"fg":3}],["int",{"fg":4,"bold":true}],[" execve(",{}],["const",{"fg":4,"bold":true}],[" ",{}],["char",{"fg":4,"bold":true}],[" *path, ",{}],["char",{"fg":4,"bold":true}],[" *",{}],["const",{"fg":4,"bold":true}],[" argv[], ",{}],["char",{"fg":4,"bold":true}],[" *",{}],["const",{"fg":4,"bold":true}],[" envp[]);                                                                              ",{}]],"16":[["  9 ",{"fg":3}],["int",{"fg":4,"bold":true}],[" execvp(",{}],["const",{"fg":4,"bold":true}],[" ",{}],["char",{"fg":4,"bold":true}],[" *file, ",{}],["char",{"fg":4,"bold":true}],[" *",{}],["const",{"fg":4,"bold":true}],[" argv[]);                                                                                                  ",{}]],"39":[["                                                                                                                                     8,1           All ",{}]]},"cursor":{"y":7}}],[0.221396,{"lines":{"0":[["  8 ",{"fg":3}],["/* Exec funkcija */",{"fg":1}],["                                                                                                                                ",{}]],"1":[["  7 ",{"fg":3}],["                                                                                                                                                   ",{}]],"2":[["  6 ",{"fg":3}],["#include ",{"fg":5}],["<unistd.h>",{"fg":2}],["                                                                                                                                ",{}]],"3":[["  5 ",{"fg":3}],["/* Exec funkcije zamjenjuju trenutnu sliku procesa s novom slikom procesa.",{"fg":1}],["                                                                         ",{}]],"4":[["  4 ",{"fg":3}],[" * Početni argument za ove funkcije jeste putanja od datoteke koja ce se izvrsit.",{"fg":1}],["                                                                  ",{}]],"5":[["  3 ",{"fg":3}],[" * npr. ukoliko hocemo izvrsit f-ju  ls prvi argument ce biti upravo ls a ostali argumenti ce biti proslijedjeni ",{"fg":1}],["                                  ",{}]],"6":[["  2 ",{"fg":3}],[" * f-ji ls",{"fg":1}],["                                                                                                                                         ",{}]],"7":[["  1 ",{"fg":3}],[" *",{"fg":1}],["                                                                                                                                                 ",{}]],"8":[["  0 ",{"fg":3}],[" * kao npr.   ls -lt */",{"fg":1}],["                                                                                                                            ",{}]],"9":[["  1 ",{"fg":3}],["extern",{"fg":4,"bold":true}],[" ",{}],["char",{"fg":4,"bold":true}],[" **environ;                                                                                                                             ",{}]],"10":[["  2 ",{"fg":3}],["int",{"fg":4,"bold":true}],[" execl(",{}],["const",{"fg":4,"bold":true}],[" ",{}],["char",{"fg":4,"bold":true}],[" *path, ",{}],["const",{"fg":4,"bold":true}],[" ",{}],["char",{"fg":4,"bold":true}],[" *arg0, ... ",{}],["/*, char *(0) */",{"fg":1}],[");                                                                               ",{}]],"11":[["  3 ",{"fg":3}],["int",{"fg":4,"bold":true}],[" execle(",{}],["const",{"fg":4,"bold":true}],[" ",{}],["char",{"fg":4,"bold":true}],[" *path, ",{}],["const",{"fg":4,"bold":true}],[" ",{}],["char",{"fg":4,"bold":true}],[" *arg0, ... ",{}],["/*, char *(0), char *const envp[] */",{"fg":1}],[");                                                          ",{}]],"12":[["  4 ",{"fg":3}],["int",{"fg":4,"bold":true}],[" execlp(",{}],["const",{"fg":4,"bold":true}],[" ",{}],["char",{"fg":4,"bold":true}],[" *file, ",{}],["const",{"fg":4,"bold":true}],[" ",{}],["char",{"fg":4,"bold":true}],[" *arg0, ... ",{}],["/*, char *(0) */",{"fg":1}],[");                                                                              ",{}]],"13":[["  5 ",{"fg":3}],["                                                                                                                                                   ",{}]],"14":[["  6 ",{"fg":3}],["int",{"fg":4,"bold":true}],[" execv(",{}],["const",{"fg":4,"bold":true}],[" ",{}],["char",{"fg":4,"bold":true}],[" *path, ",{}],["char",{"fg":4,"bold":true}],[" *",{}],["const",{"fg":4,"bold":true}],[" argv[]);                                                                                                   ",{}]],"15":[["  7 ",{"fg":3}],["int",{"fg":4,"bold":true}],[" execve(",{}],["const",{"fg":4,"bold":true}],[" ",{}],["char",{"fg":4,"bold":true}],[" *path, ",{}],["char",{"fg":4,"bold":true}],[" *",{}],["const",{"fg":4,"bold":true}],[" argv[], ",{}],["char",{"fg":4,"bold":true}],[" *",{}],["const",{"fg":4,"bold":true}],[" envp[]);                                                                              ",{}]],"16":[["  8 ",{"fg":3}],["int",{"fg":4,"bold":true}],[" execvp(",{}],["const",{"fg":4,"bold":true}],[" ",{}],["char",{"fg":4,"bold":true}],[" *file, ",{}],["char",{"fg":4,"bold":true}],[" *",{}],["const",{"fg":4,"bold":true}],[" argv[]);                                                                                                  ",{}]],"39":[["                                                                                                                                     9,1           All ",{}]]},"cursor":{"y":8}}],[0.354144,{"lines":{"0":[["  9 ",{"fg":3}],["/* Exec funkcija */",{"fg":1}],["                                                                                                                                ",{}]],"1":[["  8 ",{"fg":3}],["                                                                                                                                                   ",{}]],"2":[["  7 ",{"fg":3}],["#include ",{"fg":5}],["<unistd.h>",{"fg":2}],["                                                                                                                                ",{}]],"3":[["  6 ",{"fg":3}],["/* Exec funkcije zamjenjuju trenutnu sliku procesa s novom slikom procesa.",{"fg":1}],["                                                                         ",{}]],"4":[["  5 ",{"fg":3}],[" * Početni argument za ove funkcije jeste putanja od datoteke koja ce se izvrsit.",{"fg":1}],["                                                                  ",{}]],"5":[["  4 ",{"fg":3}],[" * npr. ukoliko hocemo izvrsit f-ju  ls prvi argument ce biti upravo ls a ostali argumenti ce biti proslijedjeni ",{"fg":1}],["                                  ",{}]],"6":[["  3 ",{"fg":3}],[" * f-ji ls",{"fg":1}],["                                                                                                                                         ",{}]],"7":[["  2 ",{"fg":3}],[" *",{"fg":1}],["                                                                                                                                                 ",{}]],"8":[["  1 ",{"fg":3}],[" * kao npr.   ls -lt */",{"fg":1}],["                                                                                                                            ",{}]],"9":[["  0 ",{"fg":3}],["extern",{"fg":4,"bold":true}],[" ",{}],["char",{"fg":4,"bold":true}],[" **environ;                                                                                                                             ",{}]],"10":[["  1 ",{"fg":3}],["int",{"fg":4,"bold":true}],[" execl(",{}],["const",{"fg":4,"bold":true}],[" ",{}],["char",{"fg":4,"bold":true}],[" *path, ",{}],["const",{"fg":4,"bold":true}],[" ",{}],["char",{"fg":4,"bold":true}],[" *arg0, ... ",{}],["/*, char *(0) */",{"fg":1}],[");                                                                               ",{}]],"11":[["  2 ",{"fg":3}],["int",{"fg":4,"bold":true}],[" execle(",{}],["const",{"fg":4,"bold":true}],[" ",{}],["char",{"fg":4,"bold":true}],[" *path, ",{}],["const",{"fg":4,"bold":true}],[" ",{}],["char",{"fg":4,"bold":true}],[" *arg0, ... ",{}],["/*, char *(0), char *const envp[] */",{"fg":1}],[");                                                          ",{}]],"12":[["  3 ",{"fg":3}],["int",{"fg":4,"bold":true}],[" execlp(",{}],["const",{"fg":4,"bold":true}],[" ",{}],["char",{"fg":4,"bold":true}],[" *file, ",{}],["const",{"fg":4,"bold":true}],[" ",{}],["char",{"fg":4,"bold":true}],[" *arg0, ... ",{}],["/*, char *(0) */",{"fg":1}],[");                                                                              ",{}]],"13":[["  4 ",{"fg":3}],["                                                                                                                                                   ",{}]],"14":[["  5 ",{"fg":3}],["int",{"fg":4,"bold":true}],[" execv(",{}],["const",{"fg":4,"bold":true}],[" ",{}],["char",{"fg":4,"bold":true}],[" *path, ",{}],["char",{"fg":4,"bold":true}],[" *",{}],["const",{"fg":4,"bold":true}],[" argv[]);                                                                                                   ",{}]],"15":[["  6 ",{"fg":3}],["int",{"fg":4,"bold":true}],[" execve(",{}],["const",{"fg":4,"bold":true}],[" ",{}],["char",{"fg":4,"bold":true}],[" *path, ",{}],["char",{"fg":4,"bold":true}],[" *",{}],["const",{"fg":4,"bold":true}],[" argv[], ",{}],["char",{"fg":4,"bold":true}],[" *",{}],["const",{"fg":4,"bold":true}],[" envp[]);                                                                              ",{}]],"16":[["  7 ",{"fg":3}],["int",{"fg":4,"bold":true}],[" execvp(",{}],["const",{"fg":4,"bold":true}],[" ",{}],["char",{"fg":4,"bold":true}],[" *file, ",{}],["char",{"fg":4,"bold":true}],[" *",{}],["const",{"fg":4,"bold":true}],[" argv[]);                                                                                                  ",{}]],"39":[["                                                                                                                                     10,1          All ",{}]]},"cursor":{"y":9}}],[0.25562,{"lines":{"0":[[" 10 ",{"fg":3}],["/* Exec funkcija */",{"fg":1}],["                                                                                                                                ",{}]],"1":[["  9 ",{"fg":3}],["                                                                                                                                                   ",{}]],"2":[["  8 ",{"fg":3}],["#include ",{"fg":5}],["<unistd.h>",{"fg":2}],["                                                                                                                                ",{}]],"3":[["  7 ",{"fg":3}],["/* Exec funkcije zamjenjuju trenutnu sliku procesa s novom slikom procesa.",{"fg":1}],["                                                                         ",{}]],"4":[["  6 ",{"fg":3}],[" * Početni argument za ove funkcije jeste putanja od datoteke koja ce se izvrsit.",{"fg":1}],["                                                                  ",{}]],"5":[["  5 ",{"fg":3}],[" * npr. ukoliko hocemo izvrsit f-ju  ls prvi argument ce biti upravo ls a ostali argumenti ce biti proslijedjeni ",{"fg":1}],["                                  ",{}]],"6":[["  4 ",{"fg":3}],[" * f-ji ls",{"fg":1}],["                                                                                                                                         ",{}]],"7":[["  3 ",{"fg":3}],[" *",{"fg":1}],["                                                                                                                                                 ",{}]],"8":[["  2 ",{"fg":3}],[" * kao npr.   ls -lt */",{"fg":1}],["                                                                                                                            ",{}]],"9":[["  1 ",{"fg":3}],["extern",{"fg":4,"bold":true}],[" ",{}],["char",{"fg":4,"bold":true}],[" **environ;                                                                                                                             ",{}]],"10":[["  0 ",{"fg":3}],["int",{"fg":4,"bold":true}],[" execl(",{}],["const",{"fg":4,"bold":true}],[" ",{}],["char",{"fg":4,"bold":true}],[" *path, ",{}],["const",{"fg":4,"bold":true}],[" ",{}],["char",{"fg":4,"bold":true}],[" *arg0, ... ",{}],["/*, char *(0) */",{"fg":1}],[");                                                                               ",{}]],"11":[["  1 ",{"fg":3}],["int",{"fg":4,"bold":true}],[" execle(",{}],["const",{"fg":4,"bold":true}],[" ",{}],["char",{"fg":4,"bold":true}],[" *path, ",{}],["const",{"fg":4,"bold":true}],[" ",{}],["char",{"fg":4,"bold":true}],[" *arg0, ... ",{}],["/*, char *(0), char *const envp[] */",{"fg":1}],[");                                                          ",{}]],"12":[["  2 ",{"fg":3}],["int",{"fg":4,"bold":true}],[" execlp(",{}],["const",{"fg":4,"bold":true}],[" ",{}],["char",{"fg":4,"bold":true}],[" *file, ",{}],["const",{"fg":4,"bold":true}],[" ",{}],["char",{"fg":4,"bold":true}],[" *arg0, ... ",{}],["/*, char *(0) */",{"fg":1}],[");                                                                              ",{}]],"13":[["  3 ",{"fg":3}],["                                                                                                                                                   ",{}]],"14":[["  4 ",{"fg":3}],["int",{"fg":4,"bold":true}],[" execv(",{}],["const",{"fg":4,"bold":true}],[" ",{}],["char",{"fg":4,"bold":true}],[" *path, ",{}],["char",{"fg":4,"bold":true}],[" *",{}],["const",{"fg":4,"bold":true}],[" argv[]);                                                                                                   ",{}]],"15":[["  5 ",{"fg":3}],["int",{"fg":4,"bold":true}],[" execve(",{}],["const",{"fg":4,"bold":true}],[" ",{}],["char",{"fg":4,"bold":true}],[" *path, ",{}],["char",{"fg":4,"bold":true}],[" *",{}],["const",{"fg":4,"bold":true}],[" argv[], ",{}],["char",{"fg":4,"bold":true}],[" *",{}],["const",{"fg":4,"bold":true}],[" envp[]);                                                                              ",{}]],"16":[["  6 ",{"fg":3}],["int",{"fg":4,"bold":true}],[" execvp(",{}],["const",{"fg":4,"bold":true}],[" ",{}],["char",{"fg":4,"bold":true}],[" *file, ",{}],["char",{"fg":4,"bold":true}],[" *",{}],["const",{"fg":4,"bold":true}],[" argv[]);                                                                                                  ",{}]],"39":[["                                                                                                                                     11,1          All ",{}]]},"cursor":{"y":10}}],[0.241285,{"lines":{"0":[[" 11 ",{"fg":3}],["/* Exec funkcija */",{"fg":1}],["                                                                                                                                ",{}]],"1":[[" 10 ",{"fg":3}],["                                                                                                                                                   ",{}]],"2":[["  9 ",{"fg":3}],["#include ",{"fg":5}],["<unistd.h>",{"fg":2}],["                                                                                                                                ",{}]],"3":[["  8 ",{"fg":3}],["/* Exec funkcije zamjenjuju trenutnu sliku procesa s novom slikom procesa.",{"fg":1}],["                                                                         ",{}]],"4":[["  7 ",{"fg":3}],[" * Početni argument za ove funkcije jeste putanja od datoteke koja ce se izvrsit.",{"fg":1}],["                                                                  ",{}]],"5":[["  6 ",{"fg":3}],[" * npr. ukoliko hocemo izvrsit f-ju  ls prvi argument ce biti upravo ls a ostali argumenti ce biti proslijedjeni ",{"fg":1}],["                                  ",{}]],"6":[["  5 ",{"fg":3}],[" * f-ji ls",{"fg":1}],["                                                                                                                                         ",{}]],"7":[["  4 ",{"fg":3}],[" *",{"fg":1}],["                                                                                                                                                 ",{}]],"8":[["  3 ",{"fg":3}],[" * kao npr.   ls -lt */",{"fg":1}],["                                                                                                                            ",{}]],"9":[["  2 ",{"fg":3}],["extern",{"fg":4,"bold":true}],[" ",{}],["char",{"fg":4,"bold":true}],[" **environ;                                                                                                                             ",{}]],"10":[["  1 ",{"fg":3}],["int",{"fg":4,"bold":true}],[" execl(",{}],["const",{"fg":4,"bold":true}],[" ",{}],["char",{"fg":4,"bold":true}],[" *path, ",{}],["const",{"fg":4,"bold":true}],[" ",{}],["char",{"fg":4,"bold":true}],[" *arg0, ... ",{}],["/*, char *(0) */",{"fg":1}],[");                                                                               ",{}]],"11":[["  0 ",{"fg":3}],["int",{"fg":4,"bold":true}],[" execle(",{}],["const",{"fg":4,"bold":true}],[" ",{}],["char",{"fg":4,"bold":true}],[" *path, ",{}],["const",{"fg":4,"bold":true}],[" ",{}],["char",{"fg":4,"bold":true}],[" *arg0, ... ",{}],["/*, char *(0), char *const envp[] */",{"fg":1}],[");                                                          ",{}]],"12":[["  1 ",{"fg":3}],["int",{"fg":4,"bold":true}],[" execlp(",{}],["const",{"fg":4,"bold":true}],[" ",{}],["char",{"fg":4,"bold":true}],[" *file, ",{}],["const",{"fg":4,"bold":true}],[" ",{}],["char",{"fg":4,"bold":true}],[" *arg0, ... ",{}],["/*, char *(0) */",{"fg":1}],[");                                                                              ",{}]],"13":[["  2 ",{"fg":3}],["                                                                                                                                                   ",{}]],"14":[["  3 ",{"fg":3}],["int",{"fg":4,"bold":true}],[" execv(",{}],["const",{"fg":4,"bold":true}],[" ",{}],["char",{"fg":4,"bold":true}],[" *path, ",{}],["char",{"fg":4,"bold":true}],[" *",{}],["const",{"fg":4,"bold":true}],[" argv[]);                                                                                                   ",{}]],"15":[["  4 ",{"fg":3}],["int",{"fg":4,"bold":true}],[" execve(",{}],["const",{"fg":4,"bold":true}],[" ",{}],["char",{"fg":4,"bold":true}],[" *path, ",{}],["char",{"fg":4,"bold":true}],[" *",{}],["const",{"fg":4,"bold":true}],[" argv[], ",{}],["char",{"fg":4,"bold":true}],[" *",{}],["const",{"fg":4,"bold":true}],[" envp[]);                                                                              ",{}]],"16":[["  5 ",{"fg":3}],["int",{"fg":4,"bold":true}],[" execvp(",{}],["const",{"fg":4,"bold":true}],[" ",{}],["char",{"fg":4,"bold":true}],[" *file, ",{}],["char",{"fg":4,"bold":true}],[" *",{}],["const",{"fg":4,"bold":true}],[" argv[]);                                                                                                  ",{}]],"39":[["                                                                                                                                     12,1          All ",{}]]},"cursor":{"y":11}}],[0.258362,{"lines":{"0":[[" 12 ",{"fg":3}],["/* Exec funkcija */",{"fg":1}],["                                                                                                                                ",{}]],"1":[[" 11 ",{"fg":3}],["                                                                                                                                                   ",{}]],"2":[[" 10 ",{"fg":3}],["#include ",{"fg":5}],["<unistd.h>",{"fg":2}],["                                                                                                                                ",{}]],"3":[["  9 ",{"fg":3}],["/* Exec funkcije zamjenjuju trenutnu sliku procesa s novom slikom procesa.",{"fg":1}],["                                                                         ",{}]],"4":[["  8 ",{"fg":3}],[" * Početni argument za ove funkcije jeste putanja od datoteke koja ce se izvrsit.",{"fg":1}],["                                                                  ",{}]],"5":[["  7 ",{"fg":3}],[" * npr. ukoliko hocemo izvrsit f-ju  ls prvi argument ce biti upravo ls a ostali argumenti ce biti proslijedjeni ",{"fg":1}],["                                  ",{}]],"6":[["  6 ",{"fg":3}],[" * f-ji ls",{"fg":1}],["                                                                                                                                         ",{}]],"7":[["  5 ",{"fg":3}],[" *",{"fg":1}],["                                                                                                                                                 ",{}]],"8":[["  4 ",{"fg":3}],[" * kao npr.   ls -lt */",{"fg":1}],["                                                                                                                            ",{}]],"9":[["  3 ",{"fg":3}],["extern",{"fg":4,"bold":true}],[" ",{}],["char",{"fg":4,"bold":true}],[" **environ;                                                                                                                             ",{}]],"10":[["  2 ",{"fg":3}],["int",{"fg":4,"bold":true}],[" execl(",{}],["const",{"fg":4,"bold":true}],[" ",{}],["char",{"fg":4,"bold":true}],[" *path, ",{}],["const",{"fg":4,"bold":true}],[" ",{}],["char",{"fg":4,"bold":true}],[" *arg0, ... ",{}],["/*, char *(0) */",{"fg":1}],[");                                                                               ",{}]],"11":[["  1 ",{"fg":3}],["int",{"fg":4,"bold":true}],[" execle(",{}],["const",{"fg":4,"bold":true}],[" ",{}],["char",{"fg":4,"bold":true}],[" *path, ",{}],["const",{"fg":4,"bold":true}],[" ",{}],["char",{"fg":4,"bold":true}],[" *arg0, ... ",{}],["/*, char *(0), char *const envp[] */",{"fg":1}],[");                                                          ",{}]],"12":[["  0 ",{"fg":3}],["int",{"fg":4,"bold":true}],[" execlp(",{}],["const",{"fg":4,"bold":true}],[" ",{}],["char",{"fg":4,"bold":true}],[" *file, ",{}],["const",{"fg":4,"bold":true}],[" ",{}],["char",{"fg":4,"bold":true}],[" *arg0, ... ",{}],["/*, char *(0) */",{"fg":1}],[");                                                                              ",{}]]},"cursor":{"y":12}}],[0.006229000000000001,{"lines":{"13":[["  1 ",{"fg":3}],["                                                                                                                                                   ",{}]],"14":[["  2 ",{"fg":3}],["int",{"fg":4,"bold":true}],[" execv(",{}],["const",{"fg":4,"bold":true}],[" ",{}],["char",{"fg":4,"bold":true}],[" *path, ",{}],["char",{"fg":4,"bold":true}],[" *",{}],["const",{"fg":4,"bold":true}],[" argv[]);                                                                                                   ",{}]],"15":[["  3 ",{"fg":3}],["int",{"fg":4,"bold":true}],[" execve(",{}],["const",{"fg":4,"bold":true}],[" ",{}],["char",{"fg":4,"bold":true}],[" *path, ",{}],["char",{"fg":4,"bold":true}],[" *",{}],["const",{"fg":4,"bold":true}],[" argv[], ",{}],["char",{"fg":4,"bold":true}],[" *",{}],["const",{"fg":4,"bold":true}],[" envp[]);                                                                              ",{}]],"16":[["  4 ",{"fg":3}],["int",{"fg":4,"bold":true}],[" execvp(",{}],["const",{"fg":4,"bold":true}],[" ",{}],["char",{"fg":4,"bold":true}],[" *file, ",{}],["char",{"fg":4,"bold":true}],[" *",{}],["const",{"fg":4,"bold":true}],[" argv[]);                                                                                                  ",{}]],"39":[["                                                                                                                                     13,1          All ",{}]]}}],[0.256665,{"lines":{"0":[[" 13 ",{"fg":3}],["/* Exec funkcija */",{"fg":1}],["                                                                                                                                ",{}]],"1":[[" 12 ",{"fg":3}],["                                                                                                                                                   ",{}]],"2":[[" 11 ",{"fg":3}],["#include ",{"fg":5}],["<unistd.h>",{"fg":2}],["                                                                                                                                ",{}]],"3":[[" 10 ",{"fg":3}],["/* Exec funkcije zamjenjuju trenutnu sliku procesa s novom slikom procesa.",{"fg":1}],["                                                                         ",{}]],"4":[["  9 ",{"fg":3}],[" * Početni argument za ove funkcije jeste putanja od datoteke koja ce se izvrsit.",{"fg":1}],["                                                                  ",{}]],"5":[["  8 ",{"fg":3}],[" * npr. ukoliko hocemo izvrsit f-ju  ls prvi argument ce biti upravo ls a ostali argumenti ce biti proslijedjeni ",{"fg":1}],["                                  ",{}]],"6":[["  7 ",{"fg":3}],[" * f-ji ls",{"fg":1}],["                                                                                                                                         ",{}]],"7":[["  6 ",{"fg":3}],[" *",{"fg":1}],["                                                                                                                                                 ",{}]],"8":[["  5 ",{"fg":3}],[" * kao npr.   ls -lt */",{"fg":1}],["                                                                                                                            ",{}]],"9":[["  4 ",{"fg":3}],["extern",{"fg":4,"bold":true}],[" ",{}],["char",{"fg":4,"bold":true}],[" **environ;                                                                                                                             ",{}]],"10":[["  3 ",{"fg":3}],["int",{"fg":4,"bold":true}],[" execl(",{}],["const",{"fg":4,"bold":true}],[" ",{}],["char",{"fg":4,"bold":true}],[" *path, ",{}],["const",{"fg":4,"bold":true}],[" ",{}],["char",{"fg":4,"bold":true}],[" *arg0, ... ",{}],["/*, char *(0) */",{"fg":1}],[");                                                                               ",{}]],"11":[["  2 ",{"fg":3}],["int",{"fg":4,"bold":true}],[" execle(",{}],["const",{"fg":4,"bold":true}],[" ",{}],["char",{"fg":4,"bold":true}],[" *path, ",{}],["const",{"fg":4,"bold":true}],[" ",{}],["char",{"fg":4,"bold":true}],[" *arg0, ... ",{}],["/*, char *(0), char *const envp[] */",{"fg":1}],[");                                                          ",{}]],"12":[["  1 ",{"fg":3}],["int",{"fg":4,"bold":true}],[" execlp(",{}],["const",{"fg":4,"bold":true}],[" ",{}],["char",{"fg":4,"bold":true}],[" *file, ",{}],["const",{"fg":4,"bold":true}],[" ",{}],["char",{"fg":4,"bold":true}],[" *arg0, ... ",{}],["/*, char *(0) */",{"fg":1}],[");                                                                              ",{}]],"13":[["  0 ",{"fg":3}],["                                                                                                                                                   ",{}]],"14":[["  1 ",{"fg":3}],["int",{"fg":4,"bold":true}],[" execv(",{}],["const",{"fg":4,"bold":true}],[" ",{}],["char",{"fg":4,"bold":true}],[" *path, ",{}],["char",{"fg":4,"bold":true}],[" *",{}],["const",{"fg":4,"bold":true}],[" argv[]);                                                                                                   ",{}]],"15":[["  2 ",{"fg":3}],["int",{"fg":4,"bold":true}],[" execve(",{}],["const",{"fg":4,"bold":true}],[" ",{}],["char",{"fg":4,"bold":true}],[" *path, ",{}],["char",{"fg":4,"bold":true}],[" *",{}],["const",{"fg":4,"bold":true}],[" argv[], ",{}],["char",{"fg":4,"bold":true}],[" *",{}],["const",{"fg":4,"bold":true}],[" envp[]);                                                                              ",{}]],"16":[["  3 ",{"fg":3}],["int",{"fg":4,"bold":true}],[" execvp(",{}],["const",{"fg":4,"bold":true}],[" ",{}],["char",{"fg":4,"bold":true}],[" *file, ",{}],["char",{"fg":4,"bold":true}],[" *",{}],["const",{"fg":4,"bold":true}],[" argv[]);                                                                                                  ",{}]],"39":[["                                                                                                                                     14,0-1        All ",{}]]},"cursor":{"y":13}}],[0.231545,{"lines":{"0":[[" 14 ",{"fg":3}],["/* Exec funkcija */",{"fg":1}],["                                                                                                                                ",{}]],"1":[[" 13 ",{"fg":3}],["                                                                                                                                                   ",{}]],"2":[[" 12 ",{"fg":3}],["#include ",{"fg":5}],["<unistd.h>",{"fg":2}],["                                                                                                                                ",{}]],"3":[[" 11 ",{"fg":3}],["/* Exec funkcije zamjenjuju trenutnu sliku procesa s novom slikom procesa.",{"fg":1}],["                                                                         ",{}]],"4":[[" 10 ",{"fg":3}],[" * Početni argument za ove funkcije jeste putanja od datoteke koja ce se izvrsit.",{"fg":1}],["                                                                  ",{}]],"5":[["  9 ",{"fg":3}],[" * npr. ukoliko hocemo izvrsit f-ju  ls prvi argument ce biti upravo ls a ostali argumenti ce biti proslijedjeni ",{"fg":1}],["                                  ",{}]],"6":[["  8 ",{"fg":3}],[" * f-ji ls",{"fg":1}],["                                                                                                                                         ",{}]],"7":[["  7 ",{"fg":3}],[" *",{"fg":1}],["                                                                                                                                                 ",{}]],"8":[["  6 ",{"fg":3}],[" * kao npr.   ls -lt */",{"fg":1}],["                                                                                                                            ",{}]],"9":[["  5 ",{"fg":3}],["extern",{"fg":4,"bold":true}],[" ",{}],["char",{"fg":4,"bold":true}],[" **environ;                                                                                                                             ",{}]],"10":[["  4 ",{"fg":3}],["int",{"fg":4,"bold":true}],[" execl(",{}],["const",{"fg":4,"bold":true}],[" ",{}],["char",{"fg":4,"bold":true}],[" *path, ",{}],["const",{"fg":4,"bold":true}],[" ",{}],["char",{"fg":4,"bold":true}],[" *arg0, ... ",{}],["/*, char *(0) */",{"fg":1}],[");                                                                               ",{}]],"11":[["  3 ",{"fg":3}],["int",{"fg":4,"bold":true}],[" execle(",{}],["const",{"fg":4,"bold":true}],[" ",{}],["char",{"fg":4,"bold":true}],[" *path, ",{}],["const",{"fg":4,"bold":true}],[" ",{}],["char",{"fg":4,"bold":true}],[" *arg0, ... ",{}],["/*, char *(0), char *const envp[] */",{"fg":1}],[");                                                          ",{}]],"12":[["  2 ",{"fg":3}],["int",{"fg":4,"bold":true}],[" execlp(",{}],["const",{"fg":4,"bold":true}],[" ",{}],["char",{"fg":4,"bold":true}],[" *file, ",{}],["const",{"fg":4,"bold":true}],[" ",{}],["char",{"fg":4,"bold":true}],[" *arg0, ... ",{}],["/*, char *(0) */",{"fg":1}],[");                                                                              ",{}]],"13":[["  1 ",{"fg":3}],["                                                                                                                                                   ",{}]],"14":[["  0 ",{"fg":3}],["int",{"fg":4,"bold":true}],[" execv(",{}],["const",{"fg":4,"bold":true}],[" ",{}],["char",{"fg":4,"bold":true}],[" *path, ",{}],["char",{"fg":4,"bold":true}],[" *",{}],["const",{"fg":4,"bold":true}],[" argv[]);                                                                                                   ",{}]],"15":[["  1 ",{"fg":3}],["int",{"fg":4,"bold":true}],[" execve(",{}],["const",{"fg":4,"bold":true}],[" ",{}],["char",{"fg":4,"bold":true}],[" *path, ",{}],["char",{"fg":4,"bold":true}],[" *",{}],["const",{"fg":4,"bold":true}],[" argv[], ",{}],["char",{"fg":4,"bold":true}],[" *",{}],["const",{"fg":4,"bold":true}],[" envp[]);                                                                              ",{}]],"16":[["  2 ",{"fg":3}],["int",{"fg":4,"bold":true}],[" execvp(",{}],["const",{"fg":4,"bold":true}],[" ",{}],["char",{"fg":4,"bold":true}],[" *file, ",{}],["char",{"fg":4,"bold":true}],[" *",{}],["const",{"fg":4,"bold":true}],[" argv[]);                                                                                                  ",{}]],"39":[["                                                                                                                                     15,1          All ",{}]]},"cursor":{"y":14}}],[0.201578,{"lines":{"0":[[" 15 ",{"fg":3}],["/* Exec funkcija */",{"fg":1}],["                                                                                                                                ",{}]],"1":[[" 14 ",{"fg":3}],["                                                                                                                                                   ",{}]],"2":[[" 13 ",{"fg":3}],["#include ",{"fg":5}],["<unistd.h>",{"fg":2}],["                                                                                                                                ",{}]],"3":[[" 12 ",{"fg":3}],["/* Exec funkcije zamjenjuju trenutnu sliku procesa s novom slikom procesa.",{"fg":1}],["                                                                         ",{}]],"4":[[" 11 ",{"fg":3}],[" * Početni argument za ove funkcije jeste putanja od datoteke koja ce se izvrsit.",{"fg":1}],["                                                                  ",{}]],"5":[[" 10 ",{"fg":3}],[" * npr. ukoliko hocemo izvrsit f-ju  ls prvi argument ce biti upravo ls a ostali argumenti ce biti proslijedjeni ",{"fg":1}],["                                  ",{}]],"6":[["  9 ",{"fg":3}],[" * f-ji ls",{"fg":1}],["                                                                                                                                         ",{}]],"7":[["  8 ",{"fg":3}],[" *",{"fg":1}],["                                                                                                                                                 ",{}]],"8":[["  7 ",{"fg":3}],[" * kao npr.   ls -lt */",{"fg":1}],["                                                                                                                            ",{}]],"9":[["  6 ",{"fg":3}],["extern",{"fg":4,"bold":true}],[" ",{}],["char",{"fg":4,"bold":true}],[" **environ;                                                                                                                             ",{}]],"10":[["  5 ",{"fg":3}],["int",{"fg":4,"bold":true}],[" execl(",{}],["const",{"fg":4,"bold":true}],[" ",{}],["char",{"fg":4,"bold":true}],[" *path, ",{}],["const",{"fg":4,"bold":true}],[" ",{}],["char",{"fg":4,"bold":true}],[" *arg0, ... ",{}],["/*, char *(0) */",{"fg":1}],[");                                                                               ",{}]],"11":[["  4 ",{"fg":3}],["int",{"fg":4,"bold":true}],[" execle(",{}],["const",{"fg":4,"bold":true}],[" ",{}],["char",{"fg":4,"bold":true}],[" *path, ",{}],["const",{"fg":4,"bold":true}],[" ",{}],["char",{"fg":4,"bold":true}],[" *arg0, ... ",{}],["/*, char *(0), char *const envp[] */",{"fg":1}],[");                                                          ",{}]],"12":[["  3 ",{"fg":3}],["int",{"fg":4,"bold":true}],[" execlp(",{}],["const",{"fg":4,"bold":true}],[" ",{}],["char",{"fg":4,"bold":true}],[" *file, ",{}],["const",{"fg":4,"bold":true}],[" ",{}],["char",{"fg":4,"bold":true}],[" *arg0, ... ",{}],["/*, char *(0) */",{"fg":1}],[");                                                                              ",{}]],"13":[["  2 ",{"fg":3}],["                                                                                                                                                   ",{}]],"14":[["  1 ",{"fg":3}],["int",{"fg":4,"bold":true}],[" execv(",{}],["const",{"fg":4,"bold":true}],[" ",{}],["char",{"fg":4,"bold":true}],[" *path, ",{}],["char",{"fg":4,"bold":true}],[" *",{}],["const",{"fg":4,"bold":true}],[" argv[]);                                                                                                   ",{}]],"15":[["  0 ",{"fg":3}],["int",{"fg":4,"bold":true}],[" execve(",{}],["const",{"fg":4,"bold":true}],[" ",{}],["char",{"fg":4,"bold":true}],[" *path, ",{}],["char",{"fg":4,"bold":true}],[" *",{}],["const",{"fg":4,"bold":true}],[" argv[], ",{}],["char",{"fg":4,"bold":true}],[" *",{}],["const",{"fg":4,"bold":true}],[" envp[]);                                                                              ",{}]],"16":[["  1 ",{"fg":3}],["int",{"fg":4,"bold":true}],[" execvp(",{}],["const",{"fg":4,"bold":true}],[" ",{}],["char",{"fg":4,"bold":true}],[" *file, ",{}],["char",{"fg":4,"bold":true}],[" *",{}],["const",{"fg":4,"bold":true}],[" argv[]);                                                                                                  ",{}]],"39":[["                                                                                                                                     16,1          All ",{}]]},"cursor":{"y":15}}],[0.251401,{"lines":{"0":[[" 16 ",{"fg":3}],["/* Exec funkcija */",{"fg":1}],["                                                                                                                                ",{}]],"1":[[" 15 ",{"fg":3}],["                                                                                                                                                   ",{}]],"2":[[" 14 ",{"fg":3}],["#include ",{"fg":5}],["<unistd.h>",{"fg":2}],["                                                                                                                                ",{}]],"3":[[" 13 ",{"fg":3}],["/* Exec funkcije zamjenjuju trenutnu sliku procesa s novom slikom procesa.",{"fg":1}],["                                                                         ",{}]],"4":[[" 12 ",{"fg":3}],[" * Početni argument za ove funkcije jeste putanja od datoteke koja ce se izvrsit.",{"fg":1}],["                                                                  ",{}]],"5":[[" 11 ",{"fg":3}],[" * npr. ukoliko hocemo izvrsit f-ju  ls prvi argument ce biti upravo ls a ostali argumenti ce biti proslijedjeni ",{"fg":1}],["                                  ",{}]],"6":[[" 10 ",{"fg":3}],[" * f-ji ls",{"fg":1}],["                                                                                                                                         ",{}]],"7":[["  9 ",{"fg":3}],[" *",{"fg":1}],["                                                                                                                                                 ",{}]],"8":[["  8 ",{"fg":3}],[" * kao npr.   ls -lt */",{"fg":1}],["                                                                                                                            ",{}]],"9":[["  7 ",{"fg":3}],["extern",{"fg":4,"bold":true}],[" ",{}],["char",{"fg":4,"bold":true}],[" **environ;                                                                                                                             ",{}]],"10":[["  6 ",{"fg":3}],["int",{"fg":4,"bold":true}],[" execl(",{}],["const",{"fg":4,"bold":true}],[" ",{}],["char",{"fg":4,"bold":true}],[" *path, ",{}],["const",{"fg":4,"bold":true}],[" ",{}],["char",{"fg":4,"bold":true}],[" *arg0, ... ",{}],["/*, char *(0) */",{"fg":1}],[");                                                                               ",{}]],"11":[["  5 ",{"fg":3}],["int",{"fg":4,"bold":true}],[" execle(",{}],["const",{"fg":4,"bold":true}],[" ",{}],["char",{"fg":4,"bold":true}],[" *path, ",{}],["const",{"fg":4,"bold":true}],[" ",{}],["char",{"fg":4,"bold":true}],[" *arg0, ... ",{}],["/*, char *(0), char *const envp[] */",{"fg":1}],[");                                                          ",{}]],"12":[["  4 ",{"fg":3}],["int",{"fg":4,"bold":true}],[" execlp(",{}],["const",{"fg":4,"bold":true}],[" ",{}],["char",{"fg":4,"bold":true}],[" *file, ",{}],["const",{"fg":4,"bold":true}],[" ",{}],["char",{"fg":4,"bold":true}],[" *arg0, ... ",{}],["/*, char *(0) */",{"fg":1}],[");                                                                              ",{}]],"13":[["  3 ",{"fg":3}],["                                                                                                                                                   ",{}]],"14":[["  2 ",{"fg":3}],["int",{"fg":4,"bold":true}],[" execv(",{}],["const",{"fg":4,"bold":true}],[" ",{}],["char",{"fg":4,"bold":true}],[" *path, ",{}],["char",{"fg":4,"bold":true}],[" *",{}],["const",{"fg":4,"bold":true}],[" argv[]);                                                                                                   ",{}]],"15":[["  1 ",{"fg":3}],["int",{"fg":4,"bold":true}],[" execve(",{}],["const",{"fg":4,"bold":true}],[" ",{}],["char",{"fg":4,"bold":true}],[" *path, ",{}],["char",{"fg":4,"bold":true}],[" *",{}],["const",{"fg":4,"bold":true}],[" argv[], ",{}],["char",{"fg":4,"bold":true}],[" *",{}],["const",{"fg":4,"bold":true}],[" envp[]);                                                                              ",{}]],"16":[["  0 ",{"fg":3}],["int",{"fg":4,"bold":true}],[" execvp(",{}],["const",{"fg":4,"bold":true}],[" ",{}],["char",{"fg":4,"bold":true}],[" *file, ",{}],["char",{"fg":4,"bold":true}],[" *",{}],["const",{"fg":4,"bold":true}],[" argv[]);                                                                                                  ",{}]],"39":[["                                                                                                                                     17,1          All ",{}]]},"cursor":{"y":16}}],[1.043033,{"lines":{"16":[["  0 ",{"fg":3}],["i",{"fg":4,"bold":true}],["nt",{"fg":4,"bold":true,"inverse":true}],[" execvp(",{"inverse":true}],["const",{"fg":4,"bold":true,"inverse":true}],[" ",{"inverse":true}],["char",{"fg":4,"bold":true,"inverse":true}],[" *file, ",{"inverse":true}],["char",{"fg":4,"bold":true,"inverse":true}],[" *",{"inverse":true}],["const",{"fg":4,"bold":true,"inverse":true}],[" argv[]); ",{"inverse":true}],["                                                                                                 ",{}]],"39":[["-- VISUAL LINE --",{"bold":true}],["                                                                                                                    17,1          All ",{}]]}}],[3.638991,{"lines":{"16":[["  0 ",{"fg":3}],["int",{"fg":4,"bold":true}],[" execvp(",{}],["const",{"fg":4,"bold":true}],[" ",{}],["char",{"fg":4,"bold":true}],[" *file, ",{}],["char",{"fg":4,"bold":true}],[" *",{}],["const",{"fg":4,"bold":true}],[" argv[]);                                                                                                  ",{}]],"39":[["                                                                                                                                     17,1          All ",{}]]}}],[0.474833,{"lines":{"39":[[":                                                                                                                                                      ",{}]]},"cursor":{"x":1,"y":39}}],[0.516784,{"lines":{"39":[[":q                                                                                                                                                     ",{}]]},"cursor":{"x":2}}],[0.742236,{"cursor":{"x":0}}],[0.002946,{"lines":{"0":[["nermin > ls                                                                                                                                            ",{}]],"1":[["exec.c  primjer_1.c  primjer_2.c                                                                                                                       ",{}]],"2":[["nermin > vim primjer_1.c                                                                                                                               ",{}]],"3":[["nermin > ls                                                                                                                                            ",{}]],"4":[["exec.c  ",{}],["primjer_1",{"fg":2,"bold":true}],["  primjer_1.c  primjer_2.c                                                                                                            ",{}]],"5":[["nermin > vim exec.c                                                                                                                                    ",{}]],"6":[["nermin >                                                                                                                                               ",{}]],"7":[["                                                                                                                                                       ",{}]],"8":[["                                                                                                                                                       ",{}]],"9":[["                                                                                                                                                       ",{}]],"10":[["                                                                                                                                                       ",{}]],"11":[["                                                                                                                                                       ",{}]],"12":[["                                                                                                                                                       ",{}]],"13":[["                                                                                                                                                       ",{}]],"14":[["                                                                                                                                                       ",{}]],"15":[["                                                                                                                                                       ",{}]],"16":[["                                                                                                                                                       ",{}]],"17":[["                                                                                                                                                       ",{}]],"18":[["                                                                                                                                                       ",{}]],"19":[["                                                                                                                                                       ",{}]],"20":[["                                                                                                                                                       ",{}]],"21":[["                                                                                                                                                       ",{}]],"22":[["                                                                                                                                                       ",{}]],"23":[["                                                                                                                                                       ",{}]],"24":[["                                                                                                                                                       ",{}]],"25":[["                                                                                                                                                       ",{}]],"26":[["                                                                                                                                                       ",{}]],"27":[["                                                                                                                                                       ",{}]],"28":[["                                                                                                                                                       ",{}]],"29":[["                                                                                                                                                       ",{}]],"30":[["                                                                                                                                                       ",{}]],"31":[["                                                                                                                                                       ",{}]],"32":[["                                                                                                                                                       ",{}]],"33":[["                                                                                                                                                       ",{}]],"34":[["                                                                                                                                                       ",{}]],"35":[["                                                                                                                                                       ",{}]],"36":[["                                                                                                                                                       ",{}]],"37":[["                                                                                                                                                       ",{}]],"38":[["                                                                                                                                                       ",{}]],"39":[["                                                                                                                                                       ",{}]]},"cursor":{"x":9,"y":6}}],[0.464423,{"lines":{"40":[["[0] 0:bash*Z                                                                                                   \"nermin-SATELLITE-C55-A\" 19:06 10-Okt-14",{"fg":0,"bg":2}]]}}],[0.5362749999999999,{"lines":{"6":[["nermin > v                                                                                                                                             ",{}]]},"cursor":{"x":10}}],[0.127944,{"lines":{"6":[["nermin > vi                                                                                                                                            ",{}]]},"cursor":{"x":11}}],[0.284531,{"lines":{"6":[["nermin > vim                                                                                                                                           ",{}]]},"cursor":{"x":12}}],[0.200431,{"cursor":{"x":13}}],[0.236611,{"lines":{"6":[["nermin > vim p                                                                                                                                         ",{}]]},"cursor":{"x":14}}],[0.164753,{"lines":{"6":[["nermin > vim pr                                                                                                                                        ",{}]]},"cursor":{"x":15}}],[0.227338,{"lines":{"6":[["nermin > vim primjer_                                                                                                                                  ",{}]]},"cursor":{"x":21}}],[0.776367,{"lines":{"6":[["nermin > vim primjer_2                                                                                                                                 ",{}]]},"cursor":{"x":22}}],[0.28916,{"lines":{"6":[["nermin > vim primjer_2.c                                                                                                                               ",{}]]},"cursor":{"x":25}}],[0.518889,{"cursor":{"x":0,"y":7}}],[0.142088,{"lines":{"40":[["[0] 0:vim*Z                                                                                                    \"nermin-SATELLITE-C55-A\" 19:06 10-Okt-14",{"fg":0,"bg":2}]]}}],[0.028322,{"lines":{"0":[["                                                                                                                                                       ",{}]],"1":[["                                                                                                                                                       ",{}]],"2":[["                                                                                                                                                       ",{}]],"3":[["                                                                                                                                                       ",{}]],"4":[["                                                                                                                                                       ",{}]],"5":[["                                                                                                                                                       ",{}]],"6":[["                                                                                                                                                       ",{}]]}}],[0.001738,{"lines":{"39":[["\"primjer_2.c\"                                                                                                                                          ",{}]]},"cursor":{"x":13,"y":39,"visible":false}}],[0.039581,{"lines":{"39":[["\"primjer_2.c\" 34L, 883C                                                                                                                                ",{}]]},"cursor":{"x":23}}],[0.027686,{"lines":{"0":[["  0 ",{"fg":3}],["#include",{"fg":5}],["<stdio.h>",{"fg":2}],["                                                                                                                                  ",{}]],"1":[["  1 ",{"fg":3}],["#include",{"fg":5}],["<unistd.h>",{"fg":2}],["                                                                                                                                 ",{}]],"2":[["  2 ",{"fg":3}],["#include",{"fg":5}],["<sys/types.h>",{"fg":2}],["                                                                                                                              ",{}]],"3":[["  3 ",{"fg":3}],["#include",{"fg":5}],["<sys/wait.h>",{"fg":2}],[" ",{}],["/* zaglavlje u kojem je deklarisana wait f-ja */",{"fg":1}],["                                                                              ",{}]],"4":[["  4 ",{"fg":3}],["                                                                                                                                                   ",{}]],"5":[["  5 ",{"fg":3}],["int",{"fg":4,"bold":true}],[" main(",{}],["int",{"fg":4,"bold":true}],[" argc, ",{}],["char",{"fg":4,"bold":true}],[" *argv[])                                                                                                                   ",{}]],"6":[["  6 ",{"fg":3}],["{                                                                                                                                                  ",{}]],"7":[["  7 ",{"fg":3}],["  ",{}],["int",{"fg":4,"bold":true}],[" status;                                                                                                                                      ",{}]],"8":[["  8 ",{"fg":3}],["  ",{}],["/* U ovu varijablu se zapisuje status terminiranja child",{"fg":1}],["                                                                                         ",{}]],"9":[["  9 ",{"fg":3}],["   * procesa na cije se izvrsenje ceka uz pomoc wait fje */",{"fg":1}],["                                                                                        ",{}]],"10":[[" 10 ",{"fg":3}],["  ",{}],["if",{"fg":4,"bold":true}],[" (argc < ",{}],["2",{"fg":2}],[")                                                                                                                                    ",{}]],"11":[[" 11 ",{"fg":3}],["  {                                                                                                                                                ",{}]],"12":[[" 12 ",{"fg":3}],["    ",{}],["/* validan broj argumenata s komandne linije? */",{"fg":1}],["                                                                                               ",{}]],"13":[[" 13 ",{"fg":3}],["    fprintf (",{}],["stderr",{"fg":2}],[", ",{}],["\"Nacin koristenja: ",{"fg":2}],["%s",{"fg":1,"bold":true}],[" command arg1 arg2 ...",{"fg":2}],["\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[", argv[",{}],["0",{"fg":2}],["]);                                                                     ",{}]],"14":[[" 14 ",{"fg":3}],["    ",{}],["return",{"fg":4,"bold":true}],[" ",{}],["1",{"fg":2}],[";                                                                                                                                      ",{}]],"15":[[" 15 ",{"fg":3}],["  }                                                                                                                                                ",{}]],"16":[[" 16 ",{"fg":3}],["  ",{}],["if",{"fg":4,"bold":true}],[" (fork())                                                                                                                                      ",{}]],"17":[[" 17 ",{"fg":3}],["  {                                                                                                                                                ",{}]],"18":[[" 18 ",{"fg":3}],["    wait(&status);                                                                                                                                 ",{}]]},"cursor":{"x":0,"y":19}}],[7.9e-05,{"lines":{"19":[[" 19 ",{"fg":3}],["    printf(",{}],["\"",{"fg":2}],["\\n",{"fg":1,"bold":true}],["Parent proces sacekao izvrsenje child-a i sada zavrsava!",{"fg":2}],["\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[");                                                                        ",{}]],"20":[[" 20 ",{"fg":3}],["    ",{}],["return",{"fg":4,"bold":true}],[" ",{}],["0",{"fg":2}],[";                                                                                                                                      ",{}]],"21":[[" 21 ",{"fg":3}],["  }                                                                                                                                                ",{}]],"22":[[" 22 ",{"fg":3}],["  ",{}],["else",{"fg":4,"bold":true}],["                                                                                                                                             ",{}]],"23":[[" 23 ",{"fg":3}],["  {                                                                                                                                                ",{}]],"24":[[" 24 ",{"fg":3}],["    printf(",{}],["\"Sada se izvrsava child proces!",{"fg":2}],["\\n\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[");                                                                                                  ",{}]],"25":[[" 25 ",{"fg":3}],["    ",{}],["/* int execvp (const char *file, char *const argv[]); */",{"fg":1}],["                                                                                       ",{}]],"26":[[" 26 ",{"fg":3}],["    ",{}],["if",{"fg":4,"bold":true}],[" (execvp(argv[",{}],["1",{"fg":2}],["],&argv[",{}],["1",{"fg":2}],["]))                                                                                                                  ",{}]],"27":[[" 27 ",{"fg":3}],["    {                                                                                                                                              ",{}]],"28":[[" 28 ",{"fg":3}],["      printf(",{}],["\"Upozorenje: execvp greska.",{"fg":2}],["\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[");                                                                                                      ",{}]],"29":[[" 29 ",{"fg":3}],["      ",{}],["return",{"fg":4,"bold":true}],[" ",{}],["1",{"fg":2}],[";                                                                                                                                    ",{}]],"30":[[" 30 ",{"fg":3}],["    }                                                                                                                                              ",{}]],"31":[[" 31 ",{"fg":3}],["    printf(",{}],["\"Ovo nikad nece biti ispisano!!",{"fg":2}],["\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[");                                                                                                    ",{}]],"32":[[" 32 ",{"fg":3}],["  }                                                                                                                                                ",{}]],"33":[[" 33 ",{"fg":3}],["}                                                                                                                                                  ",{}]],"34":[["~                                                                                                                                                      ",{"fg":4,"bold":true}]],"35":[["~                                                                                                                                                      ",{"fg":4,"bold":true}]],"36":[["~                                                                                                                                                      ",{"fg":4,"bold":true}]],"37":[["~                                                                                                                                                      ",{"fg":4,"bold":true}]],"38":[["~                                                                                                                                                      ",{"fg":4,"bold":true}]],"39":[["\"primjer_2.c\" 34L, 883C                                                                                                              1,1           All ",{}]]},"cursor":{"x":4,"y":0,"visible":true}}],[1.494998,{"lines":{"0":[["  1 ",{"fg":3}],["#include",{"fg":5}],["<stdio.h>",{"fg":2}],["                                                                                                                                  ",{}]],"1":[["  0 ",{"fg":3}],["#include",{"fg":5}],["<unistd.h>",{"fg":2}],["                                                                                                                                 ",{}]],"2":[["  1 ",{"fg":3}],["#include",{"fg":5}],["<sys/types.h>",{"fg":2}],["                                                                                                                              ",{}]],"3":[["  2 ",{"fg":3}],["#include",{"fg":5}],["<sys/wait.h>",{"fg":2}],[" ",{}],["/* zaglavlje u kojem je deklarisana wait f-ja */",{"fg":1}],["                                                                              ",{}]],"4":[["  3 ",{"fg":3}],["                                                                                                                                                   ",{}]],"5":[["  4 ",{"fg":3}],["int",{"fg":4,"bold":true}],[" main(",{}],["int",{"fg":4,"bold":true}],[" argc, ",{}],["char",{"fg":4,"bold":true}],[" *argv[])                                                                                                                   ",{}]],"6":[["  5 ",{"fg":3}],["{                                                                                                                                                  ",{}]],"7":[["  6 ",{"fg":3}],["  ",{}],["int",{"fg":4,"bold":true}],[" status;                                                                                                                                      ",{}]],"8":[["  7 ",{"fg":3}],["  ",{}],["/* U ovu varijablu se zapisuje status terminiranja child",{"fg":1}],["                                                                                         ",{}]],"9":[["  8 ",{"fg":3}],["   * procesa na cije se izvrsenje ceka uz pomoc wait fje */",{"fg":1}],["                                                                                        ",{}]],"10":[["  9 ",{"fg":3}],["  ",{}],["if",{"fg":4,"bold":true}],[" (argc < ",{}],["2",{"fg":2}],[")                                                                                                                                    ",{}]],"11":[[" 10 ",{"fg":3}],["  {                                                                                                                                                ",{}]],"12":[[" 11 ",{"fg":3}],["    ",{}],["/* validan broj argumenata s komandne linije? */",{"fg":1}],["                                                                                               ",{}]],"13":[[" 12 ",{"fg":3}],["    fprintf (",{}],["stderr",{"fg":2}],[", ",{}],["\"Nacin koristenja: ",{"fg":2}],["%s",{"fg":1,"bold":true}],[" command arg1 arg2 ...",{"fg":2}],["\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[", argv[",{}],["0",{"fg":2}],["]);                                                                     ",{}]],"14":[[" 13 ",{"fg":3}],["    ",{}],["return",{"fg":4,"bold":true}],[" ",{}],["1",{"fg":2}],[";                                                                                                                                      ",{}]],"15":[[" 14 ",{"fg":3}],["  }                                                                                                                                                ",{}]],"16":[[" 15 ",{"fg":3}],["  ",{}],["if",{"fg":4,"bold":true}],[" (fork())                                                                                                                                      ",{}]],"17":[[" 16 ",{"fg":3}],["  {                                                                                                                                                ",{}]],"18":[[" 17 ",{"fg":3}],["    wait(&status);                                                                                                                                 ",{}]],"19":[[" 18 ",{"fg":3}],["    printf(",{}],["\"",{"fg":2}],["\\n",{"fg":1,"bold":true}],["Parent proces sacekao izvrsenje child-a i sada zavrsava!",{"fg":2}],["\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[");                                                                        ",{}]],"20":[[" 19 ",{"fg":3}],["    ",{}],["return",{"fg":4,"bold":true}],[" ",{}],["0",{"fg":2}],[";                                                                                                                                      ",{}]],"21":[[" 20 ",{"fg":3}],["  }                                                                                                                                                ",{}]],"22":[[" 21 ",{"fg":3}],["  ",{}],["else",{"fg":4,"bold":true}],["                                                                                                                                             ",{}]],"23":[[" 22 ",{"fg":3}],["  {                                                                                                                                                ",{}]],"24":[[" 23 ",{"fg":3}],["    printf(",{}],["\"Sada se izvrsava child proces!",{"fg":2}],["\\n\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[");                                                                                                  ",{}]]},"cursor":{"y":1}}],[0.002775,{"lines":{"25":[[" 24 ",{"fg":3}],["    ",{}],["/* int execvp (const char *file, char *const argv[]); */",{"fg":1}],["                                                                                       ",{}]],"26":[[" 25 ",{"fg":3}],["    ",{}],["if",{"fg":4,"bold":true}],[" (execvp(argv[",{}],["1",{"fg":2}],["],&argv[",{}],["1",{"fg":2}],["]))                                                                                                                  ",{}]],"27":[[" 26 ",{"fg":3}],["    {                                                                                                                                              ",{}]],"28":[[" 27 ",{"fg":3}],["      printf(",{}],["\"Upozorenje: execvp greska.",{"fg":2}],["\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[");                                                                                                      ",{}]],"29":[[" 28 ",{"fg":3}],["      ",{}],["return",{"fg":4,"bold":true}],[" ",{}],["1",{"fg":2}],[";                                                                                                                                    ",{}]],"30":[[" 29 ",{"fg":3}],["    }                                                                                                                                              ",{}]],"31":[[" 30 ",{"fg":3}],["    printf(",{}],["\"Ovo nikad nece biti ispisano!!",{"fg":2}],["\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[");                                                                                                    ",{}]],"32":[[" 31 ",{"fg":3}],["  }                                                                                                                                                ",{}]],"33":[[" 32 ",{"fg":3}],["}                                                                                                                                                  ",{}]],"39":[["\"primjer_2.c\" 34L, 883C                                                                                                              2,1           All ",{}]]}}],[0.297307,{"lines":{"0":[["  2 ",{"fg":3}],["#include",{"fg":5}],["<stdio.h>",{"fg":2}],["                                                                                                                                  ",{}]],"1":[["  1 ",{"fg":3}],["#include",{"fg":5}],["<unistd.h>",{"fg":2}],["                                                                                                                                 ",{}]],"2":[["  0 ",{"fg":3}],["#include",{"fg":5}],["<sys/types.h>",{"fg":2}],["                                                                                                                              ",{}]],"3":[["  1 ",{"fg":3}],["#include",{"fg":5}],["<sys/wait.h>",{"fg":2}],[" ",{}],["/* zaglavlje u kojem je deklarisana wait f-ja */",{"fg":1}],["                                                                              ",{}]],"4":[["  2 ",{"fg":3}],["                                                                                                                                                   ",{}]],"5":[["  3 ",{"fg":3}],["int",{"fg":4,"bold":true}],[" main(",{}],["int",{"fg":4,"bold":true}],[" argc, ",{}],["char",{"fg":4,"bold":true}],[" *argv[])                                                                                                                   ",{}]],"6":[["  4 ",{"fg":3}],["{                                                                                                                                                  ",{}]],"7":[["  5 ",{"fg":3}],["  ",{}],["int",{"fg":4,"bold":true}],[" status;                                                                                                                                      ",{}]],"8":[["  6 ",{"fg":3}],["  ",{}],["/* U ovu varijablu se zapisuje status terminiranja child",{"fg":1}],["                                                                                         ",{}]],"9":[["  7 ",{"fg":3}],["   * procesa na cije se izvrsenje ceka uz pomoc wait fje */",{"fg":1}],["                                                                                        ",{}]],"10":[["  8 ",{"fg":3}],["  ",{}],["if",{"fg":4,"bold":true}],[" (argc < ",{}],["2",{"fg":2}],[")                                                                                                                                    ",{}]],"11":[["  9 ",{"fg":3}],["  {                                                                                                                                                ",{}]],"12":[[" 10 ",{"fg":3}],["    ",{}],["/* validan broj argumenata s komandne linije? */",{"fg":1}],["                                                                                               ",{}]],"13":[[" 11 ",{"fg":3}],["    fprintf (",{}],["stderr",{"fg":2}],[", ",{}],["\"Nacin koristenja: ",{"fg":2}],["%s",{"fg":1,"bold":true}],[" command arg1 arg2 ...",{"fg":2}],["\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[", argv[",{}],["0",{"fg":2}],["]);                                                                     ",{}]],"14":[[" 12 ",{"fg":3}],["    ",{}],["return",{"fg":4,"bold":true}],[" ",{}],["1",{"fg":2}],[";                                                                                                                                      ",{}]],"15":[[" 13 ",{"fg":3}],["  }                                                                                                                                                ",{}]],"16":[[" 14 ",{"fg":3}],["  ",{}],["if",{"fg":4,"bold":true}],[" (fork())                                                                                                                                      ",{}]],"17":[[" 15 ",{"fg":3}],["  {                                                                                                                                                ",{}]],"18":[[" 16 ",{"fg":3}],["    wait(&status);                                                                                                                                 ",{}]],"19":[[" 17 ",{"fg":3}],["    printf(",{}],["\"",{"fg":2}],["\\n",{"fg":1,"bold":true}],["Parent proces sacekao izvrsenje child-a i sada zavrsava!",{"fg":2}],["\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[");                                                                        ",{}]],"20":[[" 18 ",{"fg":3}],["    ",{}],["return",{"fg":4,"bold":true}],[" ",{}],["0",{"fg":2}],[";                                                                                                                                      ",{}]],"21":[[" 19 ",{"fg":3}],["  }                                                                                                                                                ",{}]],"22":[[" 20 ",{"fg":3}],["  ",{}],["else",{"fg":4,"bold":true}],["                                                                                                                                             ",{}]],"23":[[" 21 ",{"fg":3}],["  {                                                                                                                                                ",{}]],"24":[[" 22 ",{"fg":3}],["    printf(",{}],["\"Sada se izvrsava child proces!",{"fg":2}],["\\n\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[");                                                                                                  ",{}]],"25":[[" 23 ",{"fg":3}],["    ",{}],["/* int execvp (const char *file, char *const argv[]); */",{"fg":1}],["                                                                                       ",{}]],"26":[[" 24 ",{"fg":3}],["    ",{}],["if",{"fg":4,"bold":true}],[" (execvp(argv[",{}],["1",{"fg":2}],["],&argv[",{}],["1",{"fg":2}],["]))                                                                                                                  ",{}]],"27":[[" 25 ",{"fg":3}],["    {                                                                                                                                              ",{}]],"28":[[" 26 ",{"fg":3}],["      printf(",{}],["\"Upozorenje: execvp greska.",{"fg":2}],["\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[");                                                                                                      ",{}]],"29":[[" 27 ",{"fg":3}],["      ",{}],["return",{"fg":4,"bold":true}],[" ",{}],["1",{"fg":2}],[";                                                                                                                                    ",{}]],"30":[[" 28 ",{"fg":3}],["    }                                                                                                                                              ",{}]],"31":[[" 29 ",{"fg":3}],["    printf(",{}],["\"Ovo nikad nece biti ispisano!!",{"fg":2}],["\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[");                                                                                                    ",{}]],"32":[[" 30 ",{"fg":3}],["  }                                                                                                                                                ",{}]],"33":[[" 31 ",{"fg":3}],["}                                                                                                                                                  ",{}]],"39":[["\"primjer_2.c\" 34L, 883C                                                                                                              3,1           All ",{}]]},"cursor":{"y":2}}],[0.252113,{"lines":{"0":[["  3 ",{"fg":3}],["#include",{"fg":5}],["<stdio.h>",{"fg":2}],["                                                                                                                                  ",{}]],"1":[["  2 ",{"fg":3}],["#include",{"fg":5}],["<unistd.h>",{"fg":2}],["                                                                                                                                 ",{}]],"2":[["  1 ",{"fg":3}],["#include",{"fg":5}],["<sys/types.h>",{"fg":2}],["                                                                                                                              ",{}]],"3":[["  0 ",{"fg":3}],["#include",{"fg":5}],["<sys/wait.h>",{"fg":2}],[" ",{}],["/* zaglavlje u kojem je deklarisana wait f-ja */",{"fg":1}],["                                                                              ",{}]],"4":[["  1 ",{"fg":3}],["                                                                                                                                                   ",{}]],"5":[["  2 ",{"fg":3}],["int",{"fg":4,"bold":true}],[" main(",{}],["int",{"fg":4,"bold":true}],[" argc, ",{}],["char",{"fg":4,"bold":true}],[" *argv[])                                                                                                                   ",{}]],"6":[["  3 ",{"fg":3}],["{                                                                                                                                                  ",{}]],"7":[["  4 ",{"fg":3}],["  ",{}],["int",{"fg":4,"bold":true}],[" status;                                                                                                                                      ",{}]],"8":[["  5 ",{"fg":3}],["  ",{}],["/* U ovu varijablu se zapisuje status terminiranja child",{"fg":1}],["                                                                                         ",{}]],"9":[["  6 ",{"fg":3}],["   * procesa na cije se izvrsenje ceka uz pomoc wait fje */",{"fg":1}],["                                                                                        ",{}]],"10":[["  7 ",{"fg":3}],["  ",{}],["if",{"fg":4,"bold":true}],[" (argc < ",{}],["2",{"fg":2}],[")                                                                                                                                    ",{}]],"11":[["  8 ",{"fg":3}],["  {                                                                                                                                                ",{}]],"12":[["  9 ",{"fg":3}],["    ",{}],["/* validan broj argumenata s komandne linije? */",{"fg":1}],["                                                                                               ",{}]],"13":[[" 10 ",{"fg":3}],["    fprintf (",{}],["stderr",{"fg":2}],[", ",{}],["\"Nacin koristenja: ",{"fg":2}],["%s",{"fg":1,"bold":true}],[" command arg1 arg2 ...",{"fg":2}],["\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[", argv[",{}],["0",{"fg":2}],["]);                                                                     ",{}]],"14":[[" 11 ",{"fg":3}],["    ",{}],["return",{"fg":4,"bold":true}],[" ",{}],["1",{"fg":2}],[";                                                                                                                                      ",{}]],"15":[[" 12 ",{"fg":3}],["  }                                                                                                                                                ",{}]],"16":[[" 13 ",{"fg":3}],["  ",{}],["if",{"fg":4,"bold":true}],[" (fork())                                                                                                                                      ",{}]],"17":[[" 14 ",{"fg":3}],["  {                                                                                                                                                ",{}]],"18":[[" 15 ",{"fg":3}],["    wait(&status);                                                                                                                                 ",{}]],"19":[[" 16 ",{"fg":3}],["    printf(",{}],["\"",{"fg":2}],["\\n",{"fg":1,"bold":true}],["Parent proces sacekao izvrsenje child-a i sada zavrsava!",{"fg":2}],["\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[");                                                                        ",{}]],"20":[[" 17 ",{"fg":3}],["    ",{}],["return",{"fg":4,"bold":true}],[" ",{}],["0",{"fg":2}],[";                                                                                                                                      ",{}]],"21":[[" 18 ",{"fg":3}],["  }                                                                                                                                                ",{}]],"22":[[" 19 ",{"fg":3}],["  ",{}],["else",{"fg":4,"bold":true}],["                                                                                                                                             ",{}]],"23":[[" 20 ",{"fg":3}],["  {                                                                                                                                                ",{}]],"24":[[" 21 ",{"fg":3}],["    printf(",{}],["\"Sada se izvrsava child proces!",{"fg":2}],["\\n\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[");                                                                                                  ",{}]],"25":[[" 22 ",{"fg":3}],["    ",{}],["/* int execvp (const char *file, char *const argv[]); */",{"fg":1}],["                                                                                       ",{}]],"26":[[" 23 ",{"fg":3}],["    ",{}],["if",{"fg":4,"bold":true}],[" (execvp(argv[",{}],["1",{"fg":2}],["],&argv[",{}],["1",{"fg":2}],["]))                                                                                                                  ",{}]],"27":[[" 24 ",{"fg":3}],["    {                                                                                                                                              ",{}]],"28":[[" 25 ",{"fg":3}],["      printf(",{}],["\"Upozorenje: execvp greska.",{"fg":2}],["\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[");                                                                                                      ",{}]],"29":[[" 26 ",{"fg":3}],["      ",{}],["return",{"fg":4,"bold":true}],[" ",{}],["1",{"fg":2}],[";                                                                                                                                    ",{}]],"30":[[" 27 ",{"fg":3}],["    }                                                                                                                                              ",{}]],"31":[[" 28 ",{"fg":3}],["    printf(",{}],["\"Ovo nikad nece biti ispisano!!",{"fg":2}],["\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[");                                                                                                    ",{}]],"32":[[" 29 ",{"fg":3}],["  }                                                                                                                                                ",{}]],"33":[[" 30 ",{"fg":3}],["}                                                                                                                                                  ",{}]],"39":[["\"primjer_2.c\" 34L, 883C                                                                                                              4,1           All ",{}]]},"cursor":{"y":3}}],[1.042491,{"lines":{"0":[["  4 ",{"fg":3}],["#include",{"fg":5}],["<stdio.h>",{"fg":2}],["                                                                                                                                  ",{}]],"1":[["  3 ",{"fg":3}],["#include",{"fg":5}],["<unistd.h>",{"fg":2}],["                                                                                                                                 ",{}]],"2":[["  2 ",{"fg":3}],["#include",{"fg":5}],["<sys/types.h>",{"fg":2}],["                                                                                                                              ",{}]],"3":[["  1 ",{"fg":3}],["#include",{"fg":5}],["<sys/wait.h>",{"fg":2}],[" ",{}],["/* zaglavlje u kojem je deklarisana wait f-ja */",{"fg":1}],["                                                                              ",{}]],"4":[["  0 ",{"fg":3}],["                                                                                                                                                   ",{}]],"5":[["  1 ",{"fg":3}],["int",{"fg":4,"bold":true}],[" main(",{}],["int",{"fg":4,"bold":true}],[" argc, ",{}],["char",{"fg":4,"bold":true}],[" *argv[])                                                                                                                   ",{}]],"6":[["  2 ",{"fg":3}],["{                                                                                                                                                  ",{}]],"7":[["  3 ",{"fg":3}],["  ",{}],["int",{"fg":4,"bold":true}],[" status;                                                                                                                                      ",{}]],"8":[["  4 ",{"fg":3}],["  ",{}],["/* U ovu varijablu se zapisuje status terminiranja child",{"fg":1}],["                                                                                         ",{}]],"9":[["  5 ",{"fg":3}],["   * procesa na cije se izvrsenje ceka uz pomoc wait fje */",{"fg":1}],["                                                                                        ",{}]],"10":[["  6 ",{"fg":3}],["  ",{}],["if",{"fg":4,"bold":true}],[" (argc < ",{}],["2",{"fg":2}],[")                                                                                                                                    ",{}]],"11":[["  7 ",{"fg":3}],["  {                                                                                                                                                ",{}]],"12":[["  8 ",{"fg":3}],["    ",{}],["/* validan broj argumenata s komandne linije? */",{"fg":1}],["                                                                                               ",{}]],"13":[["  9 ",{"fg":3}],["    fprintf (",{}],["stderr",{"fg":2}],[", ",{}],["\"Nacin koristenja: ",{"fg":2}],["%s",{"fg":1,"bold":true}],[" command arg1 arg2 ...",{"fg":2}],["\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[", argv[",{}],["0",{"fg":2}],["]);                                                                     ",{}]],"14":[[" 10 ",{"fg":3}],["    ",{}],["return",{"fg":4,"bold":true}],[" ",{}],["1",{"fg":2}],[";                                                                                                                                      ",{}]],"15":[[" 11 ",{"fg":3}],["  }                                                                                                                                                ",{}]],"16":[[" 12 ",{"fg":3}],["  ",{}],["if",{"fg":4,"bold":true}],[" (fork())                                                                                                                                      ",{}]],"17":[[" 13 ",{"fg":3}],["  {                                                                                                                                                ",{}]],"18":[[" 14 ",{"fg":3}],["    wait(&status);                                                                                                                                 ",{}]],"19":[[" 15 ",{"fg":3}],["    printf(",{}],["\"",{"fg":2}],["\\n",{"fg":1,"bold":true}],["Parent proces sacekao izvrsenje child-a i sada zavrsava!",{"fg":2}],["\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[");                                                                        ",{}]],"20":[[" 16 ",{"fg":3}],["    ",{}],["return",{"fg":4,"bold":true}],[" ",{}],["0",{"fg":2}],[";                                                                                                                                      ",{}]],"21":[[" 17 ",{"fg":3}],["  }                                                                                                                                                ",{}]],"22":[[" 18 ",{"fg":3}],["  ",{}],["else",{"fg":4,"bold":true}],["                                                                                                                                             ",{}]],"23":[[" 19 ",{"fg":3}],["  {                                                                                                                                                ",{}]],"24":[[" 20 ",{"fg":3}],["    printf(",{}],["\"Sada se izvrsava child proces!",{"fg":2}],["\\n\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[");                                                                                                  ",{}]],"25":[[" 21 ",{"fg":3}],["    ",{}],["/* int execvp (const char *file, char *const argv[]); */",{"fg":1}],["                                                                                       ",{}]],"26":[[" 22 ",{"fg":3}],["    ",{}],["if",{"fg":4,"bold":true}],[" (execvp(argv[",{}],["1",{"fg":2}],["],&argv[",{}],["1",{"fg":2}],["]))                                                                                                                  ",{}]],"27":[[" 23 ",{"fg":3}],["    {                                                                                                                                              ",{}]],"28":[[" 24 ",{"fg":3}],["      printf(",{}],["\"Upozorenje: execvp greska.",{"fg":2}],["\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[");                                                                                                      ",{}]],"29":[[" 25 ",{"fg":3}],["      ",{}],["return",{"fg":4,"bold":true}],[" ",{}],["1",{"fg":2}],[";                                                                                                                                    ",{}]],"30":[[" 26 ",{"fg":3}],["    }                                                                                                                                              ",{}]],"31":[[" 27 ",{"fg":3}],["    printf(",{}],["\"Ovo nikad nece biti ispisano!!",{"fg":2}],["\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[");                                                                                                    ",{}]],"32":[[" 28 ",{"fg":3}],["  }                                                                                                                                                ",{}]],"33":[[" 29 ",{"fg":3}],["}                                                                                                                                                  ",{}]],"39":[["\"primjer_2.c\" 34L, 883C                                                                                                              5,0-1         All ",{}]]},"cursor":{"y":4}}],[0.231741,{"lines":{"0":[["  5 ",{"fg":3}],["#include",{"fg":5}],["<stdio.h>",{"fg":2}],["                                                                                                                                  ",{}]],"1":[["  4 ",{"fg":3}],["#include",{"fg":5}],["<unistd.h>",{"fg":2}],["                                                                                                                                 ",{}]],"2":[["  3 ",{"fg":3}],["#include",{"fg":5}],["<sys/types.h>",{"fg":2}],["                                                                                                                              ",{}]],"3":[["  2 ",{"fg":3}],["#include",{"fg":5}],["<sys/wait.h>",{"fg":2}],[" ",{}],["/* zaglavlje u kojem je deklarisana wait f-ja */",{"fg":1}],["                                                                              ",{}]],"4":[["  1 ",{"fg":3}],["                                                                                                                                                   ",{}]],"5":[["  0 ",{"fg":3}],["int",{"fg":4,"bold":true}],[" main(",{}],["int",{"fg":4,"bold":true}],[" argc, ",{}],["char",{"fg":4,"bold":true}],[" *argv[])                                                                                                                   ",{}]],"6":[["  1 ",{"fg":3}],["{                                                                                                                                                  ",{}]],"7":[["  2 ",{"fg":3}],["  ",{}],["int",{"fg":4,"bold":true}],[" status;                                                                                                                                      ",{}]],"8":[["  3 ",{"fg":3}],["  ",{}],["/* U ovu varijablu se zapisuje status terminiranja child",{"fg":1}],["                                                                                         ",{}]],"9":[["  4 ",{"fg":3}],["   * procesa na cije se izvrsenje ceka uz pomoc wait fje */",{"fg":1}],["                                                                                        ",{}]],"10":[["  5 ",{"fg":3}],["  ",{}],["if",{"fg":4,"bold":true}],[" (argc < ",{}],["2",{"fg":2}],[")                                                                                                                                    ",{}]],"11":[["  6 ",{"fg":3}],["  {                                                                                                                                                ",{}]],"12":[["  7 ",{"fg":3}],["    ",{}],["/* validan broj argumenata s komandne linije? */",{"fg":1}],["                                                                                               ",{}]],"13":[["  8 ",{"fg":3}],["    fprintf (",{}],["stderr",{"fg":2}],[", ",{}],["\"Nacin koristenja: ",{"fg":2}],["%s",{"fg":1,"bold":true}],[" command arg1 arg2 ...",{"fg":2}],["\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[", argv[",{}],["0",{"fg":2}],["]);                                                                     ",{}]],"14":[["  9 ",{"fg":3}],["    ",{}],["return",{"fg":4,"bold":true}],[" ",{}],["1",{"fg":2}],[";                                                                                                                                      ",{}]],"15":[[" 10 ",{"fg":3}],["  }                                                                                                                                                ",{}]],"16":[[" 11 ",{"fg":3}],["  ",{}],["if",{"fg":4,"bold":true}],[" (fork())                                                                                                                                      ",{}]],"17":[[" 12 ",{"fg":3}],["  {                                                                                                                                                ",{}]],"18":[[" 13 ",{"fg":3}],["    wait(&status);                                                                                                                                 ",{}]],"19":[[" 14 ",{"fg":3}],["    printf(",{}],["\"",{"fg":2}],["\\n",{"fg":1,"bold":true}],["Parent proces sacekao izvrsenje child-a i sada zavrsava!",{"fg":2}],["\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[");                                                                        ",{}]],"20":[[" 15 ",{"fg":3}],["    ",{}],["return",{"fg":4,"bold":true}],[" ",{}],["0",{"fg":2}],[";                                                                                                                                      ",{}]],"21":[[" 16 ",{"fg":3}],["  }                                                                                                                                                ",{}]],"22":[[" 17 ",{"fg":3}],["  ",{}],["else",{"fg":4,"bold":true}],["                                                                                                                                             ",{}]],"23":[[" 18 ",{"fg":3}],["  {                                                                                                                                                ",{}]],"24":[[" 19 ",{"fg":3}],["    printf(",{}],["\"Sada se izvrsava child proces!",{"fg":2}],["\\n\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[");                                                                                                  ",{}]],"25":[[" 20 ",{"fg":3}],["    ",{}],["/* int execvp (const char *file, char *const argv[]); */",{"fg":1}],["                                                                                       ",{}]]},"cursor":{"y":5}}],[0.003817,{"lines":{"26":[[" 21 ",{"fg":3}],["    ",{}],["if",{"fg":4,"bold":true}],[" (execvp(argv[",{}],["1",{"fg":2}],["],&argv[",{}],["1",{"fg":2}],["]))                                                                                                                  ",{}]],"27":[[" 22 ",{"fg":3}],["    {                                                                                                                                              ",{}]],"28":[[" 23 ",{"fg":3}],["      printf(",{}],["\"Upozorenje: execvp greska.",{"fg":2}],["\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[");                                                                                                      ",{}]],"29":[[" 24 ",{"fg":3}],["      ",{}],["return",{"fg":4,"bold":true}],[" ",{}],["1",{"fg":2}],[";                                                                                                                                    ",{}]],"30":[[" 25 ",{"fg":3}],["    }                                                                                                                                              ",{}]],"31":[[" 26 ",{"fg":3}],["    printf(",{}],["\"Ovo nikad nece biti ispisano!!",{"fg":2}],["\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[");                                                                                                    ",{}]],"32":[[" 27 ",{"fg":3}],["  }                                                                                                                                                ",{}]],"33":[[" 28 ",{"fg":3}],["}                                                                                                                                                  ",{}]],"39":[["\"primjer_2.c\" 34L, 883C                                                                                                              6,1           All ",{}]]}}],[0.274823,{"lines":{"0":[["  6 ",{"fg":3}],["#include",{"fg":5}],["<stdio.h>",{"fg":2}],["                                                                                                                                  ",{}]],"1":[["  5 ",{"fg":3}],["#include",{"fg":5}],["<unistd.h>",{"fg":2}],["                                                                                                                                 ",{}]],"2":[["  4 ",{"fg":3}],["#include",{"fg":5}],["<sys/types.h>",{"fg":2}],["                                                                                                                              ",{}]],"3":[["  3 ",{"fg":3}],["#include",{"fg":5}],["<sys/wait.h>",{"fg":2}],[" ",{}],["/* zaglavlje u kojem je deklarisana wait f-ja */",{"fg":1}],["                                                                              ",{}]],"4":[["  2 ",{"fg":3}],["                                                                                                                                                   ",{}]],"5":[["  1 ",{"fg":3}],["int",{"fg":4,"bold":true}],[" main(",{}],["int",{"fg":4,"bold":true}],[" argc, ",{}],["char",{"fg":4,"bold":true}],[" *argv[])                                                                                                                   ",{}]],"6":[["  0 ",{"fg":3}],["{",{"bg":6}],["                                                                                                                                                  ",{}]],"7":[["  1 ",{"fg":3}],["  ",{}],["int",{"fg":4,"bold":true}],[" status;                                                                                                                                      ",{}]],"8":[["  2 ",{"fg":3}],["  ",{}],["/* U ovu varijablu se zapisuje status terminiranja child",{"fg":1}],["                                                                                         ",{}]],"9":[["  3 ",{"fg":3}],["   * procesa na cije se izvrsenje ceka uz pomoc wait fje */",{"fg":1}],["                                                                                        ",{}]],"10":[["  4 ",{"fg":3}],["  ",{}],["if",{"fg":4,"bold":true}],[" (argc < ",{}],["2",{"fg":2}],[")                                                                                                                                    ",{}]],"11":[["  5 ",{"fg":3}],["  {                                                                                                                                                ",{}]],"12":[["  6 ",{"fg":3}],["    ",{}],["/* validan broj argumenata s komandne linije? */",{"fg":1}],["                                                                                               ",{}]],"13":[["  7 ",{"fg":3}],["    fprintf (",{}],["stderr",{"fg":2}],[", ",{}],["\"Nacin koristenja: ",{"fg":2}],["%s",{"fg":1,"bold":true}],[" command arg1 arg2 ...",{"fg":2}],["\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[", argv[",{}],["0",{"fg":2}],["]);                                                                     ",{}]],"14":[["  8 ",{"fg":3}],["    ",{}],["return",{"fg":4,"bold":true}],[" ",{}],["1",{"fg":2}],[";                                                                                                                                      ",{}]],"15":[["  9 ",{"fg":3}],["  }                                                                                                                                                ",{}]],"16":[[" 10 ",{"fg":3}],["  ",{}],["if",{"fg":4,"bold":true}],[" (fork())                                                                                                                                      ",{}]],"17":[[" 11 ",{"fg":3}],["  {                                                                                                                                                ",{}]],"18":[[" 12 ",{"fg":3}],["    wait(&status);                                                                                                                                 ",{}]],"19":[[" 13 ",{"fg":3}],["    printf(",{}],["\"",{"fg":2}],["\\n",{"fg":1,"bold":true}],["Parent proces sacekao izvrsenje child-a i sada zavrsava!",{"fg":2}],["\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[");                                                                        ",{}]],"20":[[" 14 ",{"fg":3}],["    ",{}],["return",{"fg":4,"bold":true}],[" ",{}],["0",{"fg":2}],[";                                                                                                                                      ",{}]],"21":[[" 15 ",{"fg":3}],["  }                                                                                                                                                ",{}]],"22":[[" 16 ",{"fg":3}],["  ",{}],["else",{"fg":4,"bold":true}],["                                                                                                                                             ",{}]],"23":[[" 17 ",{"fg":3}],["  {                                                                                                                                                ",{}]],"24":[[" 18 ",{"fg":3}],["    printf(",{}],["\"Sada se izvrsava child proces!",{"fg":2}],["\\n\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[");                                                                                                  ",{}]],"25":[[" 19 ",{"fg":3}],["    ",{}],["/* int execvp (const char *file, char *const argv[]); */",{"fg":1}],["                                                                                       ",{}]],"26":[[" 20 ",{"fg":3}],["    ",{}],["if",{"fg":4,"bold":true}],[" (execvp(argv[",{}],["1",{"fg":2}],["],&argv[",{}],["1",{"fg":2}],["]))                                                                                                                  ",{}]],"27":[[" 21 ",{"fg":3}],["    {                                                                                                                                              ",{}]],"28":[[" 22 ",{"fg":3}],["      printf(",{}],["\"Upozorenje: execvp greska.",{"fg":2}],["\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[");                                                                                                      ",{}]],"29":[[" 23 ",{"fg":3}],["      ",{}],["return",{"fg":4,"bold":true}],[" ",{}],["1",{"fg":2}],[";                                                                                                                                    ",{}]],"30":[[" 24 ",{"fg":3}],["    }                                                                                                                                              ",{}]],"31":[[" 25 ",{"fg":3}],["    printf(",{}],["\"Ovo nikad nece biti ispisano!!",{"fg":2}],["\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[");                                                                                                    ",{}]],"32":[[" 26 ",{"fg":3}],["  }                                                                                                                                                ",{}]],"33":[[" 27 ",{"fg":3}],["}",{"bg":6}],["                                                                                                                                                  ",{}]],"39":[["\"primjer_2.c\" 34L, 883C                                                                                                              7,1           All ",{}]]},"cursor":{"y":6}}],[0.308814,{"lines":{"0":[["  7 ",{"fg":3}],["#include",{"fg":5}],["<stdio.h>",{"fg":2}],["                                                                                                                                  ",{}]],"1":[["  6 ",{"fg":3}],["#include",{"fg":5}],["<unistd.h>",{"fg":2}],["                                                                                                                                 ",{}]],"2":[["  5 ",{"fg":3}],["#include",{"fg":5}],["<sys/types.h>",{"fg":2}],["                                                                                                                              ",{}]],"3":[["  4 ",{"fg":3}],["#include",{"fg":5}],["<sys/wait.h>",{"fg":2}],[" ",{}],["/* zaglavlje u kojem je deklarisana wait f-ja */",{"fg":1}],["                                                                              ",{}]],"4":[["  3 ",{"fg":3}],["                                                                                                                                                   ",{}]],"5":[["  2 ",{"fg":3}],["int",{"fg":4,"bold":true}],[" main(",{}],["int",{"fg":4,"bold":true}],[" argc, ",{}],["char",{"fg":4,"bold":true}],[" *argv[])                                                                                                                   ",{}]],"6":[["  1 ",{"fg":3}],["{                                                                                                                                                  ",{}]],"7":[["  0 ",{"fg":3}],["  ",{}],["int",{"fg":4,"bold":true}],[" status;                                                                                                                                      ",{}]],"8":[["  1 ",{"fg":3}],["  ",{}],["/* U ovu varijablu se zapisuje status terminiranja child",{"fg":1}],["                                                                                         ",{}]],"9":[["  2 ",{"fg":3}],["   * procesa na cije se izvrsenje ceka uz pomoc wait fje */",{"fg":1}],["                                                                                        ",{}]],"10":[["  3 ",{"fg":3}],["  ",{}],["if",{"fg":4,"bold":true}],[" (argc < ",{}],["2",{"fg":2}],[")                                                                                                                                    ",{}]],"11":[["  4 ",{"fg":3}],["  {                                                                                                                                                ",{}]],"12":[["  5 ",{"fg":3}],["    ",{}],["/* validan broj argumenata s komandne linije? */",{"fg":1}],["                                                                                               ",{}]],"13":[["  6 ",{"fg":3}],["    fprintf (",{}],["stderr",{"fg":2}],[", ",{}],["\"Nacin koristenja: ",{"fg":2}],["%s",{"fg":1,"bold":true}],[" command arg1 arg2 ...",{"fg":2}],["\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[", argv[",{}],["0",{"fg":2}],["]);                                                                     ",{}]],"14":[["  7 ",{"fg":3}],["    ",{}],["return",{"fg":4,"bold":true}],[" ",{}],["1",{"fg":2}],[";                                                                                                                                      ",{}]],"15":[["  8 ",{"fg":3}],["  }                                                                                                                                                ",{}]],"16":[["  9 ",{"fg":3}],["  ",{}],["if",{"fg":4,"bold":true}],[" (fork())                                                                                                                                      ",{}]],"17":[[" 10 ",{"fg":3}],["  {                                                                                                                                                ",{}]],"18":[[" 11 ",{"fg":3}],["    wait(&status);                                                                                                                                 ",{}]],"19":[[" 12 ",{"fg":3}],["    printf(",{}],["\"",{"fg":2}],["\\n",{"fg":1,"bold":true}],["Parent proces sacekao izvrsenje child-a i sada zavrsava!",{"fg":2}],["\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[");                                                                        ",{}]],"20":[[" 13 ",{"fg":3}],["    ",{}],["return",{"fg":4,"bold":true}],[" ",{}],["0",{"fg":2}],[";                                                                                                                                      ",{}]],"21":[[" 14 ",{"fg":3}],["  }                                                                                                                                                ",{}]],"22":[[" 15 ",{"fg":3}],["  ",{}],["else",{"fg":4,"bold":true}],["                                                                                                                                             ",{}]],"23":[[" 16 ",{"fg":3}],["  {                                                                                                                                                ",{}]],"24":[[" 17 ",{"fg":3}],["    printf(",{}],["\"Sada se izvrsava child proces!",{"fg":2}],["\\n\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[");                                                                                                  ",{}]],"25":[[" 18 ",{"fg":3}],["    ",{}],["/* int execvp (const char *file, char *const argv[]); */",{"fg":1}],["                                                                                       ",{}]],"26":[[" 19 ",{"fg":3}],["    ",{}],["if",{"fg":4,"bold":true}],[" (execvp(argv[",{}],["1",{"fg":2}],["],&argv[",{}],["1",{"fg":2}],["]))                                                                                                                  ",{}]],"27":[[" 20 ",{"fg":3}],["    {                                                                                                                                              ",{}]],"28":[[" 21 ",{"fg":3}],["      printf(",{}],["\"Upozorenje: execvp greska.",{"fg":2}],["\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[");                                                                                                      ",{}]],"29":[[" 22 ",{"fg":3}],["      ",{}],["return",{"fg":4,"bold":true}],[" ",{}],["1",{"fg":2}],[";                                                                                                                                    ",{}]],"30":[[" 23 ",{"fg":3}],["    }                                                                                                                                              ",{}]],"31":[[" 24 ",{"fg":3}],["    printf(",{}],["\"Ovo nikad nece biti ispisano!!",{"fg":2}],["\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[");                                                                                                    ",{}]],"32":[[" 25 ",{"fg":3}],["  }                                                                                                                                                ",{}]],"33":[[" 26 ",{"fg":3}],["}                                                                                                                                                  ",{}]],"39":[["\"primjer_2.c\" 34L, 883C                                                                                                              8,1           All ",{}]]},"cursor":{"y":7}}],[0.342485,{"lines":{"0":[["  8 ",{"fg":3}],["#include",{"fg":5}],["<stdio.h>",{"fg":2}],["                                                                                                                                  ",{}]],"1":[["  7 ",{"fg":3}],["#include",{"fg":5}],["<unistd.h>",{"fg":2}],["                                                                                                                                 ",{}]],"2":[["  6 ",{"fg":3}],["#include",{"fg":5}],["<sys/types.h>",{"fg":2}],["                                                                                                                              ",{}]],"3":[["  5 ",{"fg":3}],["#include",{"fg":5}],["<sys/wait.h>",{"fg":2}],[" ",{}],["/* zaglavlje u kojem je deklarisana wait f-ja */",{"fg":1}],["                                                                              ",{}]],"4":[["  4 ",{"fg":3}],["                                                                                                                                                   ",{}]],"5":[["  3 ",{"fg":3}],["int",{"fg":4,"bold":true}],[" main(",{}],["int",{"fg":4,"bold":true}],[" argc, ",{}],["char",{"fg":4,"bold":true}],[" *argv[])                                                                                                                   ",{}]],"6":[["  2 ",{"fg":3}],["{                                                                                                                                                  ",{}]],"7":[["  1 ",{"fg":3}],["  ",{}],["int",{"fg":4,"bold":true}],[" status;                                                                                                                                      ",{}]],"8":[["  0 ",{"fg":3}],["  ",{}],["/* U ovu varijablu se zapisuje status terminiranja child",{"fg":1}],["                                                                                         ",{}]],"9":[["  1 ",{"fg":3}],["   * procesa na cije se izvrsenje ceka uz pomoc wait fje */",{"fg":1}],["                                                                                        ",{}]],"10":[["  2 ",{"fg":3}],["  ",{}],["if",{"fg":4,"bold":true}],[" (argc < ",{}],["2",{"fg":2}],[")                                                                                                                                    ",{}]],"11":[["  3 ",{"fg":3}],["  {                                                                                                                                                ",{}]],"12":[["  4 ",{"fg":3}],["    ",{}],["/* validan broj argumenata s komandne linije? */",{"fg":1}],["                                                                                               ",{}]],"13":[["  5 ",{"fg":3}],["    fprintf (",{}],["stderr",{"fg":2}],[", ",{}],["\"Nacin koristenja: ",{"fg":2}],["%s",{"fg":1,"bold":true}],[" command arg1 arg2 ...",{"fg":2}],["\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[", argv[",{}],["0",{"fg":2}],["]);                                                                     ",{}]],"14":[["  6 ",{"fg":3}],["    ",{}],["return",{"fg":4,"bold":true}],[" ",{}],["1",{"fg":2}],[";                                                                                                                                      ",{}]],"15":[["  7 ",{"fg":3}],["  }                                                                                                                                                ",{}]],"16":[["  8 ",{"fg":3}],["  ",{}],["if",{"fg":4,"bold":true}],[" (fork())                                                                                                                                      ",{}]],"17":[["  9 ",{"fg":3}],["  {                                                                                                                                                ",{}]],"18":[[" 10 ",{"fg":3}],["    wait(&status);                                                                                                                                 ",{}]],"19":[[" 11 ",{"fg":3}],["    printf(",{}],["\"",{"fg":2}],["\\n",{"fg":1,"bold":true}],["Parent proces sacekao izvrsenje child-a i sada zavrsava!",{"fg":2}],["\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[");                                                                        ",{}]],"20":[[" 12 ",{"fg":3}],["    ",{}],["return",{"fg":4,"bold":true}],[" ",{}],["0",{"fg":2}],[";                                                                                                                                      ",{}]],"21":[[" 13 ",{"fg":3}],["  }                                                                                                                                                ",{}]],"22":[[" 14 ",{"fg":3}],["  ",{}],["else",{"fg":4,"bold":true}],["                                                                                                                                             ",{}]],"23":[[" 15 ",{"fg":3}],["  {                                                                                                                                                ",{}]],"24":[[" 16 ",{"fg":3}],["    printf(",{}],["\"Sada se izvrsava child proces!",{"fg":2}],["\\n\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[");                                                                                                  ",{}]],"25":[[" 17 ",{"fg":3}],["    ",{}],["/* int execvp (const char *file, char *const argv[]); */",{"fg":1}],["                                                                                       ",{}]],"26":[[" 18 ",{"fg":3}],["    ",{}],["if",{"fg":4,"bold":true}],[" (execvp(argv[",{}],["1",{"fg":2}],["],&argv[",{}],["1",{"fg":2}],["]))                                                                                                                  ",{}]],"27":[[" 19 ",{"fg":3}],["    {                                                                                                                                              ",{}]],"28":[[" 20 ",{"fg":3}],["      printf(",{}],["\"Upozorenje: execvp greska.",{"fg":2}],["\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[");                                                                                                      ",{}]],"29":[[" 21 ",{"fg":3}],["      ",{}],["return",{"fg":4,"bold":true}],[" ",{}],["1",{"fg":2}],[";                                                                                                                                    ",{}]],"30":[[" 22 ",{"fg":3}],["    }                                                                                                                                              ",{}]],"31":[[" 23 ",{"fg":3}],["    printf(",{}],["\"Ovo nikad nece biti ispisano!!",{"fg":2}],["\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[");                                                                                                    ",{}]],"32":[[" 24 ",{"fg":3}],["  }                                                                                                                                                ",{}]],"33":[[" 25 ",{"fg":3}],["}                                                                                                                                                  ",{}]],"39":[["\"primjer_2.c\" 34L, 883C                                                                                                              9,1           All ",{}]]},"cursor":{"y":8}}],[0.67743,{"lines":{"0":[["  9 ",{"fg":3}],["#include",{"fg":5}],["<stdio.h>",{"fg":2}],["                                                                                                                                  ",{}]],"1":[["  8 ",{"fg":3}],["#include",{"fg":5}],["<unistd.h>",{"fg":2}],["                                                                                                                                 ",{}]],"2":[["  7 ",{"fg":3}],["#include",{"fg":5}],["<sys/types.h>",{"fg":2}],["                                                                                                                              ",{}]],"3":[["  6 ",{"fg":3}],["#include",{"fg":5}],["<sys/wait.h>",{"fg":2}],[" ",{}],["/* zaglavlje u kojem je deklarisana wait f-ja */",{"fg":1}],["                                                                              ",{}]],"4":[["  5 ",{"fg":3}],["                                                                                                                                                   ",{}]],"5":[["  4 ",{"fg":3}],["int",{"fg":4,"bold":true}],[" main(",{}],["int",{"fg":4,"bold":true}],[" argc, ",{}],["char",{"fg":4,"bold":true}],[" *argv[])                                                                                                                   ",{}]],"6":[["  3 ",{"fg":3}],["{                                                                                                                                                  ",{}]],"7":[["  2 ",{"fg":3}],["  ",{}],["int",{"fg":4,"bold":true}],[" status;                                                                                                                                      ",{}]],"8":[["  1 ",{"fg":3}],["  ",{}],["/* U ovu varijablu se zapisuje status terminiranja child",{"fg":1}],["                                                                                         ",{}]],"9":[["  0 ",{"fg":3}],["   * procesa na cije se izvrsenje ceka uz pomoc wait fje */",{"fg":1}],["                                                                                        ",{}]],"10":[["  1 ",{"fg":3}],["  ",{}],["if",{"fg":4,"bold":true}],[" (argc < ",{}],["2",{"fg":2}],[")                                                                                                                                    ",{}]],"11":[["  2 ",{"fg":3}],["  {                                                                                                                                                ",{}]],"12":[["  3 ",{"fg":3}],["    ",{}],["/* validan broj argumenata s komandne linije? */",{"fg":1}],["                                                                                               ",{}]],"13":[["  4 ",{"fg":3}],["    fprintf (",{}],["stderr",{"fg":2}],[", ",{}],["\"Nacin koristenja: ",{"fg":2}],["%s",{"fg":1,"bold":true}],[" command arg1 arg2 ...",{"fg":2}],["\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[", argv[",{}],["0",{"fg":2}],["]);                                                                     ",{}]],"14":[["  5 ",{"fg":3}],["    ",{}],["return",{"fg":4,"bold":true}],[" ",{}],["1",{"fg":2}],[";                                                                                                                                      ",{}]],"15":[["  6 ",{"fg":3}],["  }                                                                                                                                                ",{}]],"16":[["  7 ",{"fg":3}],["  ",{}],["if",{"fg":4,"bold":true}],[" (fork())                                                                                                                                      ",{}]],"17":[["  8 ",{"fg":3}],["  {                                                                                                                                                ",{}]],"18":[["  9 ",{"fg":3}],["    wait(&status);                                                                                                                                 ",{}]],"19":[[" 10 ",{"fg":3}],["    printf(",{}],["\"",{"fg":2}],["\\n",{"fg":1,"bold":true}],["Parent proces sacekao izvrsenje child-a i sada zavrsava!",{"fg":2}],["\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[");                                                                        ",{}]],"20":[[" 11 ",{"fg":3}],["    ",{}],["return",{"fg":4,"bold":true}],[" ",{}],["0",{"fg":2}],[";                                                                                                                                      ",{}]],"21":[[" 12 ",{"fg":3}],["  }                                                                                                                                                ",{}]],"22":[[" 13 ",{"fg":3}],["  ",{}],["else",{"fg":4,"bold":true}],["                                                                                                                                             ",{}]],"23":[[" 14 ",{"fg":3}],["  {                                                                                                                                                ",{}]],"24":[[" 15 ",{"fg":3}],["    printf(",{}],["\"Sada se izvrsava child proces!",{"fg":2}],["\\n\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[");                                                                                                  ",{}]],"25":[[" 16 ",{"fg":3}],["    ",{}],["/* int execvp (const char *file, char *const argv[]); */",{"fg":1}],["                                                                                       ",{}]],"26":[[" 17 ",{"fg":3}],["    ",{}],["if",{"fg":4,"bold":true}],[" (execvp(argv[",{}],["1",{"fg":2}],["],&argv[",{}],["1",{"fg":2}],["]))                                                                                                                  ",{}]],"27":[[" 18 ",{"fg":3}],["    {                                                                                                                                              ",{}]]},"cursor":{"y":9}}],[0.003126,{"lines":{"28":[[" 19 ",{"fg":3}],["      printf(",{}],["\"Upozorenje: execvp greska.",{"fg":2}],["\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[");                                                                                                      ",{}]],"29":[[" 20 ",{"fg":3}],["      ",{}],["return",{"fg":4,"bold":true}],[" ",{}],["1",{"fg":2}],[";                                                                                                                                    ",{}]],"30":[[" 21 ",{"fg":3}],["    }                                                                                                                                              ",{}]],"31":[[" 22 ",{"fg":3}],["    printf(",{}],["\"Ovo nikad nece biti ispisano!!",{"fg":2}],["\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[");                                                                                                    ",{}]],"32":[[" 23 ",{"fg":3}],["  }                                                                                                                                                ",{}]],"33":[[" 24 ",{"fg":3}],["}                                                                                                                                                  ",{}]],"39":[["\"primjer_2.c\" 34L, 883C                                                                                                              10,1          All ",{}]]}}],[0.5034920000000001,{"lines":{"0":[[" 10 ",{"fg":3}],["#include",{"fg":5}],["<stdio.h>",{"fg":2}],["                                                                                                                                  ",{}]],"1":[["  9 ",{"fg":3}],["#include",{"fg":5}],["<unistd.h>",{"fg":2}],["                                                                                                                                 ",{}]],"2":[["  8 ",{"fg":3}],["#include",{"fg":5}],["<sys/types.h>",{"fg":2}],["                                                                                                                              ",{}]],"3":[["  7 ",{"fg":3}],["#include",{"fg":5}],["<sys/wait.h>",{"fg":2}],[" ",{}],["/* zaglavlje u kojem je deklarisana wait f-ja */",{"fg":1}],["                                                                              ",{}]],"4":[["  6 ",{"fg":3}],["                                                                                                                                                   ",{}]],"5":[["  5 ",{"fg":3}],["int",{"fg":4,"bold":true}],[" main(",{}],["int",{"fg":4,"bold":true}],[" argc, ",{}],["char",{"fg":4,"bold":true}],[" *argv[])                                                                                                                   ",{}]],"6":[["  4 ",{"fg":3}],["{                                                                                                                                                  ",{}]],"7":[["  3 ",{"fg":3}],["  ",{}],["int",{"fg":4,"bold":true}],[" status;                                                                                                                                      ",{}]],"8":[["  2 ",{"fg":3}],["  ",{}],["/* U ovu varijablu se zapisuje status terminiranja child",{"fg":1}],["                                                                                         ",{}]],"9":[["  1 ",{"fg":3}],["   * procesa na cije se izvrsenje ceka uz pomoc wait fje */",{"fg":1}],["                                                                                        ",{}]],"10":[["  0 ",{"fg":3}],["  ",{}],["if",{"fg":4,"bold":true}],[" (argc < ",{}],["2",{"fg":2}],[")                                                                                                                                    ",{}]],"11":[["  1 ",{"fg":3}],["  {                                                                                                                                                ",{}]],"12":[["  2 ",{"fg":3}],["    ",{}],["/* validan broj argumenata s komandne linije? */",{"fg":1}],["                                                                                               ",{}]],"13":[["  3 ",{"fg":3}],["    fprintf (",{}],["stderr",{"fg":2}],[", ",{}],["\"Nacin koristenja: ",{"fg":2}],["%s",{"fg":1,"bold":true}],[" command arg1 arg2 ...",{"fg":2}],["\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[", argv[",{}],["0",{"fg":2}],["]);                                                                     ",{}]],"14":[["  4 ",{"fg":3}],["    ",{}],["return",{"fg":4,"bold":true}],[" ",{}],["1",{"fg":2}],[";                                                                                                                                      ",{}]],"15":[["  5 ",{"fg":3}],["  }                                                                                                                                                ",{}]],"16":[["  6 ",{"fg":3}],["  ",{}],["if",{"fg":4,"bold":true}],[" (fork())                                                                                                                                      ",{}]],"17":[["  7 ",{"fg":3}],["  {                                                                                                                                                ",{}]],"18":[["  8 ",{"fg":3}],["    wait(&status);                                                                                                                                 ",{}]],"19":[["  9 ",{"fg":3}],["    printf(",{}],["\"",{"fg":2}],["\\n",{"fg":1,"bold":true}],["Parent proces sacekao izvrsenje child-a i sada zavrsava!",{"fg":2}],["\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[");                                                                        ",{}]],"20":[[" 10 ",{"fg":3}],["    ",{}],["return",{"fg":4,"bold":true}],[" ",{}],["0",{"fg":2}],[";                                                                                                                                      ",{}]],"21":[[" 11 ",{"fg":3}],["  }                                                                                                                                                ",{}]],"22":[[" 12 ",{"fg":3}],["  ",{}],["else",{"fg":4,"bold":true}],["                                                                                                                                             ",{}]],"23":[[" 13 ",{"fg":3}],["  {                                                                                                                                                ",{}]],"24":[[" 14 ",{"fg":3}],["    printf(",{}],["\"Sada se izvrsava child proces!",{"fg":2}],["\\n\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[");                                                                                                  ",{}]],"25":[[" 15 ",{"fg":3}],["    ",{}],["/* int execvp (const char *file, char *const argv[]); */",{"fg":1}],["                                                                                       ",{}]],"26":[[" 16 ",{"fg":3}],["    ",{}],["if",{"fg":4,"bold":true}],[" (execvp(argv[",{}],["1",{"fg":2}],["],&argv[",{}],["1",{"fg":2}],["]))                                                                                                                  ",{}]],"27":[[" 17 ",{"fg":3}],["    {                                                                                                                                              ",{}]],"28":[[" 18 ",{"fg":3}],["      printf(",{}],["\"Upozorenje: execvp greska.",{"fg":2}],["\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[");                                                                                                      ",{}]],"29":[[" 19 ",{"fg":3}],["      ",{}],["return",{"fg":4,"bold":true}],[" ",{}],["1",{"fg":2}],[";                                                                                                                                    ",{}]],"30":[[" 20 ",{"fg":3}],["    }                                                                                                                                              ",{}]],"31":[[" 21 ",{"fg":3}],["    printf(",{}],["\"Ovo nikad nece biti ispisano!!",{"fg":2}],["\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[");                                                                                                    ",{}]],"32":[[" 22 ",{"fg":3}],["  }                                                                                                                                                ",{}]],"33":[[" 23 ",{"fg":3}],["}                                                                                                                                                  ",{}]],"39":[["\"primjer_2.c\" 34L, 883C                                                                                                              11,1          All ",{}]]},"cursor":{"y":10}}],[2.648361,{"lines":{"39":[["\"primjer_2.c\" 34L, 883C                                                                                                              11,3          All ",{}]]},"cursor":{"x":6}}],[3.408686,{"lines":{"0":[[" 11 ",{"fg":3}],["#include",{"fg":5}],["<stdio.h>",{"fg":2}],["                                                                                                                                  ",{}]],"1":[[" 10 ",{"fg":3}],["#include",{"fg":5}],["<unistd.h>",{"fg":2}],["                                                                                                                                 ",{}]],"2":[["  9 ",{"fg":3}],["#include",{"fg":5}],["<sys/types.h>",{"fg":2}],["                                                                                                                              ",{}]],"3":[["  8 ",{"fg":3}],["#include",{"fg":5}],["<sys/wait.h>",{"fg":2}],[" ",{}],["/* zaglavlje u kojem je deklarisana wait f-ja */",{"fg":1}],["                                                                              ",{}]],"4":[["  7 ",{"fg":3}],["                                                                                                                                                   ",{}]],"5":[["  6 ",{"fg":3}],["int",{"fg":4,"bold":true}],[" main(",{}],["int",{"fg":4,"bold":true}],[" argc, ",{}],["char",{"fg":4,"bold":true}],[" *argv[])                                                                                                                   ",{}]],"6":[["  5 ",{"fg":3}],["{                                                                                                                                                  ",{}]],"7":[["  4 ",{"fg":3}],["  ",{}],["int",{"fg":4,"bold":true}],[" status;                                                                                                                                      ",{}]],"8":[["  3 ",{"fg":3}],["  ",{}],["/* U ovu varijablu se zapisuje status terminiranja child",{"fg":1}],["                                                                                         ",{}]],"9":[["  2 ",{"fg":3}],["   * procesa na cije se izvrsenje ceka uz pomoc wait fje */",{"fg":1}],["                                                                                        ",{}]],"10":[["  1 ",{"fg":3}],["  ",{}],["if",{"fg":4,"bold":true}],[" (argc < ",{}],["2",{"fg":2}],[")                                                                                                                                    ",{}]],"11":[["  0 ",{"fg":3}],["  ",{}],["{",{"bg":6}],["                                                                                                                                                ",{}]],"12":[["  1 ",{"fg":3}],["    ",{}],["/* validan broj argumenata s komandne linije? */",{"fg":1}],["                                                                                               ",{}]],"13":[["  2 ",{"fg":3}],["    fprintf (",{}],["stderr",{"fg":2}],[", ",{}],["\"Nacin koristenja: ",{"fg":2}],["%s",{"fg":1,"bold":true}],[" command arg1 arg2 ...",{"fg":2}],["\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[", argv[",{}],["0",{"fg":2}],["]);                                                                     ",{}]],"14":[["  3 ",{"fg":3}],["    ",{}],["return",{"fg":4,"bold":true}],[" ",{}],["1",{"fg":2}],[";                                                                                                                                      ",{}]],"15":[["  4 ",{"fg":3}],["  ",{}],["}",{"bg":6}],["                                                                                                                                                ",{}]],"16":[["  5 ",{"fg":3}],["  ",{}],["if",{"fg":4,"bold":true}],[" (fork())                                                                                                                                      ",{}]],"17":[["  6 ",{"fg":3}],["  {                                                                                                                                                ",{}]],"18":[["  7 ",{"fg":3}],["    wait(&status);                                                                                                                                 ",{}]],"19":[["  8 ",{"fg":3}],["    printf(",{}],["\"",{"fg":2}],["\\n",{"fg":1,"bold":true}],["Parent proces sacekao izvrsenje child-a i sada zavrsava!",{"fg":2}],["\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[");                                                                        ",{}]],"20":[["  9 ",{"fg":3}],["    ",{}],["return",{"fg":4,"bold":true}],[" ",{}],["0",{"fg":2}],[";                                                                                                                                      ",{}]],"21":[[" 10 ",{"fg":3}],["  }                                                                                                                                                ",{}]],"22":[[" 11 ",{"fg":3}],["  ",{}],["else",{"fg":4,"bold":true}],["                                                                                                                                             ",{}]],"23":[[" 12 ",{"fg":3}],["  {                                                                                                                                                ",{}]],"24":[[" 13 ",{"fg":3}],["    printf(",{}],["\"Sada se izvrsava child proces!",{"fg":2}],["\\n\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[");                                                                                                  ",{}]],"25":[[" 14 ",{"fg":3}],["    ",{}],["/* int execvp (const char *file, char *const argv[]); */",{"fg":1}],["                                                                                       ",{}]],"26":[[" 15 ",{"fg":3}],["    ",{}],["if",{"fg":4,"bold":true}],[" (execvp(argv[",{}],["1",{"fg":2}],["],&argv[",{}],["1",{"fg":2}],["]))                                                                                                                  ",{}]],"27":[[" 16 ",{"fg":3}],["    {                                                                                                                                              ",{}]],"28":[[" 17 ",{"fg":3}],["      printf(",{}],["\"Upozorenje: execvp greska.",{"fg":2}],["\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[");                                                                                                      ",{}]],"29":[[" 18 ",{"fg":3}],["      ",{}],["return",{"fg":4,"bold":true}],[" ",{}],["1",{"fg":2}],[";                                                                                                                                    ",{}]],"30":[[" 19 ",{"fg":3}],["    }                                                                                                                                              ",{}]],"31":[[" 20 ",{"fg":3}],["    printf(",{}],["\"Ovo nikad nece biti ispisano!!",{"fg":2}],["\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[");                                                                                                    ",{}]],"32":[[" 21 ",{"fg":3}],["  }                                                                                                                                                ",{}]],"33":[[" 22 ",{"fg":3}],["}                                                                                                                                                  ",{}]],"39":[["\"primjer_2.c\" 34L, 883C                                                                                                              12,3          All ",{}]]},"cursor":{"y":11}}],[0.279385,{"lines":{"0":[[" 12 ",{"fg":3}],["#include",{"fg":5}],["<stdio.h>",{"fg":2}],["                                                                                                                                  ",{}]],"1":[[" 11 ",{"fg":3}],["#include",{"fg":5}],["<unistd.h>",{"fg":2}],["                                                                                                                                 ",{}]],"2":[[" 10 ",{"fg":3}],["#include",{"fg":5}],["<sys/types.h>",{"fg":2}],["                                                                                                                              ",{}]],"3":[["  9 ",{"fg":3}],["#include",{"fg":5}],["<sys/wait.h>",{"fg":2}],[" ",{}],["/* zaglavlje u kojem je deklarisana wait f-ja */",{"fg":1}],["                                                                              ",{}]],"4":[["  8 ",{"fg":3}],["                                                                                                                                                   ",{}]],"5":[["  7 ",{"fg":3}],["int",{"fg":4,"bold":true}],[" main(",{}],["int",{"fg":4,"bold":true}],[" argc, ",{}],["char",{"fg":4,"bold":true}],[" *argv[])                                                                                                                   ",{}]],"6":[["  6 ",{"fg":3}],["{                                                                                                                                                  ",{}]],"7":[["  5 ",{"fg":3}],["  ",{}],["int",{"fg":4,"bold":true}],[" status;                                                                                                                                      ",{}]],"8":[["  4 ",{"fg":3}],["  ",{}],["/* U ovu varijablu se zapisuje status terminiranja child",{"fg":1}],["                                                                                         ",{}]],"9":[["  3 ",{"fg":3}],["   * procesa na cije se izvrsenje ceka uz pomoc wait fje */",{"fg":1}],["                                                                                        ",{}]],"10":[["  2 ",{"fg":3}],["  ",{}],["if",{"fg":4,"bold":true}],[" (argc < ",{}],["2",{"fg":2}],[")                                                                                                                                    ",{}]],"11":[["  1 ",{"fg":3}],["  {                                                                                                                                                ",{}]],"12":[["  0 ",{"fg":3}],["    ",{}],["/* validan broj argumenata s komandne linije? */",{"fg":1}],["                                                                                               ",{}]],"13":[["  1 ",{"fg":3}],["    fprintf (",{}],["stderr",{"fg":2}],[", ",{}],["\"Nacin koristenja: ",{"fg":2}],["%s",{"fg":1,"bold":true}],[" command arg1 arg2 ...",{"fg":2}],["\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[", argv[",{}],["0",{"fg":2}],["]);                                                                     ",{}]],"14":[["  2 ",{"fg":3}],["    ",{}],["return",{"fg":4,"bold":true}],[" ",{}],["1",{"fg":2}],[";                                                                                                                                      ",{}]],"15":[["  3 ",{"fg":3}],["  }                                                                                                                                                ",{}]],"16":[["  4 ",{"fg":3}],["  ",{}],["if",{"fg":4,"bold":true}],[" (fork())                                                                                                                                      ",{}]],"17":[["  5 ",{"fg":3}],["  {                                                                                                                                                ",{}]],"18":[["  6 ",{"fg":3}],["    wait(&status);                                                                                                                                 ",{}]],"19":[["  7 ",{"fg":3}],["    printf(",{}],["\"",{"fg":2}],["\\n",{"fg":1,"bold":true}],["Parent proces sacekao izvrsenje child-a i sada zavrsava!",{"fg":2}],["\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[");                                                                        ",{}]],"20":[["  8 ",{"fg":3}],["    ",{}],["return",{"fg":4,"bold":true}],[" ",{}],["0",{"fg":2}],[";                                                                                                                                      ",{}]],"21":[["  9 ",{"fg":3}],["  }                                                                                                                                                ",{}]],"22":[[" 10 ",{"fg":3}],["  ",{}],["else",{"fg":4,"bold":true}],["                                                                                                                                             ",{}]],"23":[[" 11 ",{"fg":3}],["  {                                                                                                                                                ",{}]],"24":[[" 12 ",{"fg":3}],["    printf(",{}],["\"Sada se izvrsava child proces!",{"fg":2}],["\\n\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[");                                                                                                  ",{}]],"25":[[" 13 ",{"fg":3}],["    ",{}],["/* int execvp (const char *file, char *const argv[]); */",{"fg":1}],["                                                                                       ",{}]],"26":[[" 14 ",{"fg":3}],["    ",{}],["if",{"fg":4,"bold":true}],[" (execvp(argv[",{}],["1",{"fg":2}],["],&argv[",{}],["1",{"fg":2}],["]))                                                                                                                  ",{}]],"27":[[" 15 ",{"fg":3}],["    {                                                                                                                                              ",{}]],"28":[[" 16 ",{"fg":3}],["      printf(",{}],["\"Upozorenje: execvp greska.",{"fg":2}],["\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[");                                                                                                      ",{}]],"29":[[" 17 ",{"fg":3}],["      ",{}],["return",{"fg":4,"bold":true}],[" ",{}],["1",{"fg":2}],[";                                                                                                                                    ",{}]],"30":[[" 18 ",{"fg":3}],["    }                                                                                                                                              ",{}]],"31":[[" 19 ",{"fg":3}],["    printf(",{}],["\"Ovo nikad nece biti ispisano!!",{"fg":2}],["\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[");                                                                                                    ",{}]],"32":[[" 20 ",{"fg":3}],["  }                                                                                                                                                ",{}]],"33":[[" 21 ",{"fg":3}],["}                                                                                                                                                  ",{}]],"39":[["\"primjer_2.c\" 34L, 883C                                                                                                              13,3          All ",{}]]},"cursor":{"y":12}}],[0.348397,{"lines":{"0":[[" 13 ",{"fg":3}],["#include",{"fg":5}],["<stdio.h>",{"fg":2}],["                                                                                                                                  ",{}]],"1":[[" 12 ",{"fg":3}],["#include",{"fg":5}],["<unistd.h>",{"fg":2}],["                                                                                                                                 ",{}]],"2":[[" 11 ",{"fg":3}],["#include",{"fg":5}],["<sys/types.h>",{"fg":2}],["                                                                                                                              ",{}]],"3":[[" 10 ",{"fg":3}],["#include",{"fg":5}],["<sys/wait.h>",{"fg":2}],[" ",{}],["/* zaglavlje u kojem je deklarisana wait f-ja */",{"fg":1}],["                                                                              ",{}]],"4":[["  9 ",{"fg":3}],["                                                                                                                                                   ",{}]],"5":[["  8 ",{"fg":3}],["int",{"fg":4,"bold":true}],[" main(",{}],["int",{"fg":4,"bold":true}],[" argc, ",{}],["char",{"fg":4,"bold":true}],[" *argv[])                                                                                                                   ",{}]],"6":[["  7 ",{"fg":3}],["{                                                                                                                                                  ",{}]],"7":[["  6 ",{"fg":3}],["  ",{}],["int",{"fg":4,"bold":true}],[" status;                                                                                                                                      ",{}]],"8":[["  5 ",{"fg":3}],["  ",{}],["/* U ovu varijablu se zapisuje status terminiranja child",{"fg":1}],["                                                                                         ",{}]],"9":[["  4 ",{"fg":3}],["   * procesa na cije se izvrsenje ceka uz pomoc wait fje */",{"fg":1}],["                                                                                        ",{}]],"10":[["  3 ",{"fg":3}],["  ",{}],["if",{"fg":4,"bold":true}],[" (argc < ",{}],["2",{"fg":2}],[")                                                                                                                                    ",{}]],"11":[["  2 ",{"fg":3}],["  {                                                                                                                                                ",{}]],"12":[["  1 ",{"fg":3}],["    ",{}],["/* validan broj argumenata s komandne linije? */",{"fg":1}],["                                                                                               ",{}]],"13":[["  0 ",{"fg":3}],["    fprintf (",{}],["stderr",{"fg":2}],[", ",{}],["\"Nacin koristenja: ",{"fg":2}],["%s",{"fg":1,"bold":true}],[" command arg1 arg2 ...",{"fg":2}],["\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[", argv[",{}],["0",{"fg":2}],["]);                                                                     ",{}]],"14":[["  1 ",{"fg":3}],["    ",{}],["return",{"fg":4,"bold":true}],[" ",{}],["1",{"fg":2}],[";                                                                                                                                      ",{}]],"15":[["  2 ",{"fg":3}],["  }                                                                                                                                                ",{}]],"16":[["  3 ",{"fg":3}],["  ",{}],["if",{"fg":4,"bold":true}],[" (fork())                                                                                                                                      ",{}]],"17":[["  4 ",{"fg":3}],["  {                                                                                                                                                ",{}]],"18":[["  5 ",{"fg":3}],["    wait(&status);                                                                                                                                 ",{}]],"19":[["  6 ",{"fg":3}],["    printf(",{}],["\"",{"fg":2}],["\\n",{"fg":1,"bold":true}],["Parent proces sacekao izvrsenje child-a i sada zavrsava!",{"fg":2}],["\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[");                                                                        ",{}]],"20":[["  7 ",{"fg":3}],["    ",{}],["return",{"fg":4,"bold":true}],[" ",{}],["0",{"fg":2}],[";                                                                                                                                      ",{}]],"21":[["  8 ",{"fg":3}],["  }                                                                                                                                                ",{}]],"22":[["  9 ",{"fg":3}],["  ",{}],["else",{"fg":4,"bold":true}],["                                                                                                                                             ",{}]],"23":[[" 10 ",{"fg":3}],["  {                                                                                                                                                ",{}]],"24":[[" 11 ",{"fg":3}],["    printf(",{}],["\"Sada se izvrsava child proces!",{"fg":2}],["\\n\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[");                                                                                                  ",{}]],"25":[[" 12 ",{"fg":3}],["    ",{}],["/* int execvp (const char *file, char *const argv[]); */",{"fg":1}],["                                                                                       ",{}]],"26":[[" 13 ",{"fg":3}],["    ",{}],["if",{"fg":4,"bold":true}],[" (execvp(argv[",{}],["1",{"fg":2}],["],&argv[",{}],["1",{"fg":2}],["]))                                                                                                                  ",{}]],"27":[[" 14 ",{"fg":3}],["    {                                                                                                                                              ",{}]],"28":[[" 15 ",{"fg":3}],["      printf(",{}],["\"Upozorenje: execvp greska.",{"fg":2}],["\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[");                                                                                                      ",{}]],"29":[[" 16 ",{"fg":3}],["      ",{}],["return",{"fg":4,"bold":true}],[" ",{}],["1",{"fg":2}],[";                                                                                                                                    ",{}]]},"cursor":{"y":13}}],[0.004464999999999999,{"lines":{"30":[[" 17 ",{"fg":3}],["    }                                                                                                                                              ",{}]],"31":[[" 18 ",{"fg":3}],["    printf(",{}],["\"Ovo nikad nece biti ispisano!!",{"fg":2}],["\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[");                                                                                                    ",{}]],"32":[[" 19 ",{"fg":3}],["  }                                                                                                                                                ",{}]],"33":[[" 20 ",{"fg":3}],["}                                                                                                                                                  ",{}]],"39":[["\"primjer_2.c\" 34L, 883C                                                                                                              14,3          All ",{}]]}}],[3.505745,{"lines":{"0":[[" 14 ",{"fg":3}],["#include",{"fg":5}],["<stdio.h>",{"fg":2}],["                                                                                                                                  ",{}]],"1":[[" 13 ",{"fg":3}],["#include",{"fg":5}],["<unistd.h>",{"fg":2}],["                                                                                                                                 ",{}]],"2":[[" 12 ",{"fg":3}],["#include",{"fg":5}],["<sys/types.h>",{"fg":2}],["                                                                                                                              ",{}]],"3":[[" 11 ",{"fg":3}],["#include",{"fg":5}],["<sys/wait.h>",{"fg":2}],[" ",{}],["/* zaglavlje u kojem je deklarisana wait f-ja */",{"fg":1}],["                                                                              ",{}]],"4":[[" 10 ",{"fg":3}],["                                                                                                                                                   ",{}]],"5":[["  9 ",{"fg":3}],["int",{"fg":4,"bold":true}],[" main(",{}],["int",{"fg":4,"bold":true}],[" argc, ",{}],["char",{"fg":4,"bold":true}],[" *argv[])                                                                                                                   ",{}]],"6":[["  8 ",{"fg":3}],["{                                                                                                                                                  ",{}]],"7":[["  7 ",{"fg":3}],["  ",{}],["int",{"fg":4,"bold":true}],[" status;                                                                                                                                      ",{}]],"8":[["  6 ",{"fg":3}],["  ",{}],["/* U ovu varijablu se zapisuje status terminiranja child",{"fg":1}],["                                                                                         ",{}]],"9":[["  5 ",{"fg":3}],["   * procesa na cije se izvrsenje ceka uz pomoc wait fje */",{"fg":1}],["                                                                                        ",{}]],"10":[["  4 ",{"fg":3}],["  ",{}],["if",{"fg":4,"bold":true}],[" (argc < ",{}],["2",{"fg":2}],[")                                                                                                                                    ",{}]],"11":[["  3 ",{"fg":3}],["  {                                                                                                                                                ",{}]],"12":[["  2 ",{"fg":3}],["    ",{}],["/* validan broj argumenata s komandne linije? */",{"fg":1}],["                                                                                               ",{}]],"13":[["  1 ",{"fg":3}],["    fprintf (",{}],["stderr",{"fg":2}],[", ",{}],["\"Nacin koristenja: ",{"fg":2}],["%s",{"fg":1,"bold":true}],[" command arg1 arg2 ...",{"fg":2}],["\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[", argv[",{}],["0",{"fg":2}],["]);                                                                     ",{}]],"14":[["  0 ",{"fg":3}],["    ",{}],["return",{"fg":4,"bold":true}],[" ",{}],["1",{"fg":2}],[";                                                                                                                                      ",{}]],"15":[["  1 ",{"fg":3}],["  }                                                                                                                                                ",{}]],"16":[["  2 ",{"fg":3}],["  ",{}],["if",{"fg":4,"bold":true}],[" (fork())                                                                                                                                      ",{}]],"17":[["  3 ",{"fg":3}],["  {                                                                                                                                                ",{}]],"18":[["  4 ",{"fg":3}],["    wait(&status);                                                                                                                                 ",{}]],"19":[["  5 ",{"fg":3}],["    printf(",{}],["\"",{"fg":2}],["\\n",{"fg":1,"bold":true}],["Parent proces sacekao izvrsenje child-a i sada zavrsava!",{"fg":2}],["\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[");                                                                        ",{}]],"20":[["  6 ",{"fg":3}],["    ",{}],["return",{"fg":4,"bold":true}],[" ",{}],["0",{"fg":2}],[";                                                                                                                                      ",{}]],"21":[["  7 ",{"fg":3}],["  }                                                                                                                                                ",{}]],"22":[["  8 ",{"fg":3}],["  ",{}],["else",{"fg":4,"bold":true}],["                                                                                                                                             ",{}]],"23":[["  9 ",{"fg":3}],["  {                                                                                                                                                ",{}]],"24":[[" 10 ",{"fg":3}],["    printf(",{}],["\"Sada se izvrsava child proces!",{"fg":2}],["\\n\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[");                                                                                                  ",{}]],"25":[[" 11 ",{"fg":3}],["    ",{}],["/* int execvp (const char *file, char *const argv[]); */",{"fg":1}],["                                                                                       ",{}]],"26":[[" 12 ",{"fg":3}],["    ",{}],["if",{"fg":4,"bold":true}],[" (execvp(argv[",{}],["1",{"fg":2}],["],&argv[",{}],["1",{"fg":2}],["]))                                                                                                                  ",{}]],"27":[[" 13 ",{"fg":3}],["    {                                                                                                                                              ",{}]],"28":[[" 14 ",{"fg":3}],["      printf(",{}],["\"Upozorenje: execvp greska.",{"fg":2}],["\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[");                                                                                                      ",{}]],"29":[[" 15 ",{"fg":3}],["      ",{}],["return",{"fg":4,"bold":true}],[" ",{}],["1",{"fg":2}],[";                                                                                                                                    ",{}]],"30":[[" 16 ",{"fg":3}],["    }                                                                                                                                              ",{}]],"31":[[" 17 ",{"fg":3}],["    printf(",{}],["\"Ovo nikad nece biti ispisano!!",{"fg":2}],["\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[");                                                                                                    ",{}]],"32":[[" 18 ",{"fg":3}],["  }                                                                                                                                                ",{}]],"33":[[" 19 ",{"fg":3}],["}                                                                                                                                                  ",{}]],"39":[["\"primjer_2.c\" 34L, 883C                                                                                                              15,3          All ",{}]]},"cursor":{"y":14}}],[0.779505,{"lines":{"0":[[" 15 ",{"fg":3}],["#include",{"fg":5}],["<stdio.h>",{"fg":2}],["                                                                                                                                  ",{}]],"1":[[" 14 ",{"fg":3}],["#include",{"fg":5}],["<unistd.h>",{"fg":2}],["                                                                                                                                 ",{}]],"2":[[" 13 ",{"fg":3}],["#include",{"fg":5}],["<sys/types.h>",{"fg":2}],["                                                                                                                              ",{}]],"3":[[" 12 ",{"fg":3}],["#include",{"fg":5}],["<sys/wait.h>",{"fg":2}],[" ",{}],["/* zaglavlje u kojem je deklarisana wait f-ja */",{"fg":1}],["                                                                              ",{}]],"4":[[" 11 ",{"fg":3}],["                                                                                                                                                   ",{}]],"5":[[" 10 ",{"fg":3}],["int",{"fg":4,"bold":true}],[" main(",{}],["int",{"fg":4,"bold":true}],[" argc, ",{}],["char",{"fg":4,"bold":true}],[" *argv[])                                                                                                                   ",{}]],"6":[["  9 ",{"fg":3}],["{                                                                                                                                                  ",{}]],"7":[["  8 ",{"fg":3}],["  ",{}],["int",{"fg":4,"bold":true}],[" status;                                                                                                                                      ",{}]],"8":[["  7 ",{"fg":3}],["  ",{}],["/* U ovu varijablu se zapisuje status terminiranja child",{"fg":1}],["                                                                                         ",{}]],"9":[["  6 ",{"fg":3}],["   * procesa na cije se izvrsenje ceka uz pomoc wait fje */",{"fg":1}],["                                                                                        ",{}]],"10":[["  5 ",{"fg":3}],["  ",{}],["if",{"fg":4,"bold":true}],[" (argc < ",{}],["2",{"fg":2}],[")                                                                                                                                    ",{}]],"11":[["  4 ",{"fg":3}],["  ",{}],["{",{"bg":6}],["                                                                                                                                                ",{}]],"12":[["  3 ",{"fg":3}],["    ",{}],["/* validan broj argumenata s komandne linije? */",{"fg":1}],["                                                                                               ",{}]],"13":[["  2 ",{"fg":3}],["    fprintf (",{}],["stderr",{"fg":2}],[", ",{}],["\"Nacin koristenja: ",{"fg":2}],["%s",{"fg":1,"bold":true}],[" command arg1 arg2 ...",{"fg":2}],["\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[", argv[",{}],["0",{"fg":2}],["]);                                                                     ",{}]],"14":[["  1 ",{"fg":3}],["    ",{}],["return",{"fg":4,"bold":true}],[" ",{}],["1",{"fg":2}],[";                                                                                                                                      ",{}]],"15":[["  0 ",{"fg":3}],["  ",{}],["}",{"bg":6}],["                                                                                                                                                ",{}]],"16":[["  1 ",{"fg":3}],["  ",{}],["if",{"fg":4,"bold":true}],[" (fork())                                                                                                                                      ",{}]],"17":[["  2 ",{"fg":3}],["  {                                                                                                                                                ",{}]],"18":[["  3 ",{"fg":3}],["    wait(&status);                                                                                                                                 ",{}]],"19":[["  4 ",{"fg":3}],["    printf(",{}],["\"",{"fg":2}],["\\n",{"fg":1,"bold":true}],["Parent proces sacekao izvrsenje child-a i sada zavrsava!",{"fg":2}],["\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[");                                                                        ",{}]],"20":[["  5 ",{"fg":3}],["    ",{}],["return",{"fg":4,"bold":true}],[" ",{}],["0",{"fg":2}],[";                                                                                                                                      ",{}]],"21":[["  6 ",{"fg":3}],["  }                                                                                                                                                ",{}]],"22":[["  7 ",{"fg":3}],["  ",{}],["else",{"fg":4,"bold":true}],["                                                                                                                                             ",{}]],"23":[["  8 ",{"fg":3}],["  {                                                                                                                                                ",{}]],"24":[["  9 ",{"fg":3}],["    printf(",{}],["\"Sada se izvrsava child proces!",{"fg":2}],["\\n\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[");                                                                                                  ",{}]],"25":[[" 10 ",{"fg":3}],["    ",{}],["/* int execvp (const char *file, char *const argv[]); */",{"fg":1}],["                                                                                       ",{}]],"26":[[" 11 ",{"fg":3}],["    ",{}],["if",{"fg":4,"bold":true}],[" (execvp(argv[",{}],["1",{"fg":2}],["],&argv[",{}],["1",{"fg":2}],["]))                                                                                                                  ",{}]],"27":[[" 12 ",{"fg":3}],["    {                                                                                                                                              ",{}]],"28":[[" 13 ",{"fg":3}],["      printf(",{}],["\"Upozorenje: execvp greska.",{"fg":2}],["\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[");                                                                                                      ",{}]],"29":[[" 14 ",{"fg":3}],["      ",{}],["return",{"fg":4,"bold":true}],[" ",{}],["1",{"fg":2}],[";                                                                                                                                    ",{}]],"30":[[" 15 ",{"fg":3}],["    }                                                                                                                                              ",{}]],"31":[[" 16 ",{"fg":3}],["    printf(",{}],["\"Ovo nikad nece biti ispisano!!",{"fg":2}],["\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[");                                                                                                    ",{}]],"32":[[" 17 ",{"fg":3}],["  }                                                                                                                                                ",{}]],"33":[[" 18 ",{"fg":3}],["}                                                                                                                                                  ",{}]],"39":[["\"primjer_2.c\" 34L, 883C                                                                                                              16,3          All ",{}]]},"cursor":{"y":15}}],[0.571977,{"lines":{"0":[[" 16 ",{"fg":3}],["#include",{"fg":5}],["<stdio.h>",{"fg":2}],["                                                                                                                                  ",{}]],"1":[[" 15 ",{"fg":3}],["#include",{"fg":5}],["<unistd.h>",{"fg":2}],["                                                                                                                                 ",{}]],"2":[[" 14 ",{"fg":3}],["#include",{"fg":5}],["<sys/types.h>",{"fg":2}],["                                                                                                                              ",{}]],"3":[[" 13 ",{"fg":3}],["#include",{"fg":5}],["<sys/wait.h>",{"fg":2}],[" ",{}],["/* zaglavlje u kojem je deklarisana wait f-ja */",{"fg":1}],["                                                                              ",{}]],"4":[[" 12 ",{"fg":3}],["                                                                                                                                                   ",{}]],"5":[[" 11 ",{"fg":3}],["int",{"fg":4,"bold":true}],[" main(",{}],["int",{"fg":4,"bold":true}],[" argc, ",{}],["char",{"fg":4,"bold":true}],[" *argv[])                                                                                                                   ",{}]],"6":[[" 10 ",{"fg":3}],["{                                                                                                                                                  ",{}]],"7":[["  9 ",{"fg":3}],["  ",{}],["int",{"fg":4,"bold":true}],[" status;                                                                                                                                      ",{}]],"8":[["  8 ",{"fg":3}],["  ",{}],["/* U ovu varijablu se zapisuje status terminiranja child",{"fg":1}],["                                                                                         ",{}]],"9":[["  7 ",{"fg":3}],["   * procesa na cije se izvrsenje ceka uz pomoc wait fje */",{"fg":1}],["                                                                                        ",{}]],"10":[["  6 ",{"fg":3}],["  ",{}],["if",{"fg":4,"bold":true}],[" (argc < ",{}],["2",{"fg":2}],[")                                                                                                                                    ",{}]],"11":[["  5 ",{"fg":3}],["  {                                                                                                                                                ",{}]],"12":[["  4 ",{"fg":3}],["    ",{}],["/* validan broj argumenata s komandne linije? */",{"fg":1}],["                                                                                               ",{}]],"13":[["  3 ",{"fg":3}],["    fprintf (",{}],["stderr",{"fg":2}],[", ",{}],["\"Nacin koristenja: ",{"fg":2}],["%s",{"fg":1,"bold":true}],[" command arg1 arg2 ...",{"fg":2}],["\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[", argv[",{}],["0",{"fg":2}],["]);                                                                     ",{}]],"14":[["  2 ",{"fg":3}],["    ",{}],["return",{"fg":4,"bold":true}],[" ",{}],["1",{"fg":2}],[";                                                                                                                                      ",{}]],"15":[["  1 ",{"fg":3}],["  }                                                                                                                                                ",{}]],"16":[["  0 ",{"fg":3}],["  ",{}],["if",{"fg":4,"bold":true}],[" (fork())                                                                                                                                      ",{}]],"17":[["  1 ",{"fg":3}],["  {                                                                                                                                                ",{}]],"18":[["  2 ",{"fg":3}],["    wait(&status);                                                                                                                                 ",{}]],"19":[["  3 ",{"fg":3}],["    printf(",{}],["\"",{"fg":2}],["\\n",{"fg":1,"bold":true}],["Parent proces sacekao izvrsenje child-a i sada zavrsava!",{"fg":2}],["\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[");                                                                        ",{}]],"20":[["  4 ",{"fg":3}],["    ",{}],["return",{"fg":4,"bold":true}],[" ",{}],["0",{"fg":2}],[";                                                                                                                                      ",{}]],"21":[["  5 ",{"fg":3}],["  }                                                                                                                                                ",{}]],"22":[["  6 ",{"fg":3}],["  ",{}],["else",{"fg":4,"bold":true}],["                                                                                                                                             ",{}]],"23":[["  7 ",{"fg":3}],["  {                                                                                                                                                ",{}]],"24":[["  8 ",{"fg":3}],["    printf(",{}],["\"Sada se izvrsava child proces!",{"fg":2}],["\\n\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[");                                                                                                  ",{}]],"25":[["  9 ",{"fg":3}],["    ",{}],["/* int execvp (const char *file, char *const argv[]); */",{"fg":1}],["                                                                                       ",{}]],"26":[[" 10 ",{"fg":3}],["    ",{}],["if",{"fg":4,"bold":true}],[" (execvp(argv[",{}],["1",{"fg":2}],["],&argv[",{}],["1",{"fg":2}],["]))                                                                                                                  ",{}]],"27":[[" 11 ",{"fg":3}],["    {                                                                                                                                              ",{}]],"28":[[" 12 ",{"fg":3}],["      printf(",{}],["\"Upozorenje: execvp greska.",{"fg":2}],["\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[");                                                                                                      ",{}]],"29":[[" 13 ",{"fg":3}],["      ",{}],["return",{"fg":4,"bold":true}],[" ",{}],["1",{"fg":2}],[";                                                                                                                                    ",{}]],"30":[[" 14 ",{"fg":3}],["    }                                                                                                                                              ",{}]],"31":[[" 15 ",{"fg":3}],["    printf(",{}],["\"Ovo nikad nece biti ispisano!!",{"fg":2}],["\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[");                                                                                                    ",{}]],"32":[[" 16 ",{"fg":3}],["  }                                                                                                                                                ",{}]],"33":[[" 17 ",{"fg":3}],["}                                                                                                                                                  ",{}]],"39":[["\"primjer_2.c\" 34L, 883C                                                                                                              17,3          All ",{}]]},"cursor":{"y":16}}],[4.866803,{"lines":{"0":[[" 17 ",{"fg":3}],["#include",{"fg":5}],["<stdio.h>",{"fg":2}],["                                                                                                                                  ",{}]],"1":[[" 16 ",{"fg":3}],["#include",{"fg":5}],["<unistd.h>",{"fg":2}],["                                                                                                                                 ",{}]],"2":[[" 15 ",{"fg":3}],["#include",{"fg":5}],["<sys/types.h>",{"fg":2}],["                                                                                                                              ",{}]],"3":[[" 14 ",{"fg":3}],["#include",{"fg":5}],["<sys/wait.h>",{"fg":2}],[" ",{}],["/* zaglavlje u kojem je deklarisana wait f-ja */",{"fg":1}],["                                                                              ",{}]],"4":[[" 13 ",{"fg":3}],["                                                                                                                                                   ",{}]],"5":[[" 12 ",{"fg":3}],["int",{"fg":4,"bold":true}],[" main(",{}],["int",{"fg":4,"bold":true}],[" argc, ",{}],["char",{"fg":4,"bold":true}],[" *argv[])                                                                                                                   ",{}]],"6":[[" 11 ",{"fg":3}],["{                                                                                                                                                  ",{}]],"7":[[" 10 ",{"fg":3}],["  ",{}],["int",{"fg":4,"bold":true}],[" status;                                                                                                                                      ",{}]],"8":[["  9 ",{"fg":3}],["  ",{}],["/* U ovu varijablu se zapisuje status terminiranja child",{"fg":1}],["                                                                                         ",{}]],"9":[["  8 ",{"fg":3}],["   * procesa na cije se izvrsenje ceka uz pomoc wait fje */",{"fg":1}],["                                                                                        ",{}]],"10":[["  7 ",{"fg":3}],["  ",{}],["if",{"fg":4,"bold":true}],[" (argc < ",{}],["2",{"fg":2}],[")                                                                                                                                    ",{}]],"11":[["  6 ",{"fg":3}],["  {                                                                                                                                                ",{}]],"12":[["  5 ",{"fg":3}],["    ",{}],["/* validan broj argumenata s komandne linije? */",{"fg":1}],["                                                                                               ",{}]],"13":[["  4 ",{"fg":3}],["    fprintf (",{}],["stderr",{"fg":2}],[", ",{}],["\"Nacin koristenja: ",{"fg":2}],["%s",{"fg":1,"bold":true}],[" command arg1 arg2 ...",{"fg":2}],["\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[", argv[",{}],["0",{"fg":2}],["]);                                                                     ",{}]],"14":[["  3 ",{"fg":3}],["    ",{}],["return",{"fg":4,"bold":true}],[" ",{}],["1",{"fg":2}],[";                                                                                                                                      ",{}]],"15":[["  2 ",{"fg":3}],["  }                                                                                                                                                ",{}]],"16":[["  1 ",{"fg":3}],["  ",{}],["if",{"fg":4,"bold":true}],[" (fork())                                                                                                                                      ",{}]],"17":[["  0 ",{"fg":3}],["  ",{}],["{",{"bg":6}],["                                                                                                                                                ",{}]],"18":[["  1 ",{"fg":3}],["    wait(&status);                                                                                                                                 ",{}]],"19":[["  2 ",{"fg":3}],["    printf(",{}],["\"",{"fg":2}],["\\n",{"fg":1,"bold":true}],["Parent proces sacekao izvrsenje child-a i sada zavrsava!",{"fg":2}],["\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[");                                                                        ",{}]],"20":[["  3 ",{"fg":3}],["    ",{}],["return",{"fg":4,"bold":true}],[" ",{}],["0",{"fg":2}],[";                                                                                                                                      ",{}]],"21":[["  4 ",{"fg":3}],["  ",{}],["}",{"bg":6}],["                                                                                                                                                ",{}]],"22":[["  5 ",{"fg":3}],["  ",{}],["else",{"fg":4,"bold":true}],["                                                                                                                                             ",{}]],"23":[["  6 ",{"fg":3}],["  {                                                                                                                                                ",{}]],"24":[["  7 ",{"fg":3}],["    printf(",{}],["\"Sada se izvrsava child proces!",{"fg":2}],["\\n\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[");                                                                                                  ",{}]],"25":[["  8 ",{"fg":3}],["    ",{}],["/* int execvp (const char *file, char *const argv[]); */",{"fg":1}],["                                                                                       ",{}]],"26":[["  9 ",{"fg":3}],["    ",{}],["if",{"fg":4,"bold":true}],[" (execvp(argv[",{}],["1",{"fg":2}],["],&argv[",{}],["1",{"fg":2}],["]))                                                                                                                  ",{}]],"27":[[" 10 ",{"fg":3}],["    {                                                                                                                                              ",{}]],"28":[[" 11 ",{"fg":3}],["      printf(",{}],["\"Upozorenje: execvp greska.",{"fg":2}],["\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[");                                                                                                      ",{}]],"29":[[" 12 ",{"fg":3}],["      ",{}],["return",{"fg":4,"bold":true}],[" ",{}],["1",{"fg":2}],[";                                                                                                                                    ",{}]],"30":[[" 13 ",{"fg":3}],["    }                                                                                                                                              ",{}]],"31":[[" 14 ",{"fg":3}],["    printf(",{}],["\"Ovo nikad nece biti ispisano!!",{"fg":2}],["\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[");                                                                                                    ",{}]]},"cursor":{"y":17}}],[0.004267999999999999,{"lines":{"32":[[" 15 ",{"fg":3}],["  }                                                                                                                                                ",{}]],"33":[[" 16 ",{"fg":3}],["}                                                                                                                                                  ",{}]],"39":[["\"primjer_2.c\" 34L, 883C                                                                                                              18,3          All ",{}]]}}],[0.286977,{"lines":{"0":[[" 18 ",{"fg":3}],["#include",{"fg":5}],["<stdio.h>",{"fg":2}],["                                                                                                                                  ",{}]],"1":[[" 17 ",{"fg":3}],["#include",{"fg":5}],["<unistd.h>",{"fg":2}],["                                                                                                                                 ",{}]],"2":[[" 16 ",{"fg":3}],["#include",{"fg":5}],["<sys/types.h>",{"fg":2}],["                                                                                                                              ",{}]],"3":[[" 15 ",{"fg":3}],["#include",{"fg":5}],["<sys/wait.h>",{"fg":2}],[" ",{}],["/* zaglavlje u kojem je deklarisana wait f-ja */",{"fg":1}],["                                                                              ",{}]],"4":[[" 14 ",{"fg":3}],["                                                                                                                                                   ",{}]],"5":[[" 13 ",{"fg":3}],["int",{"fg":4,"bold":true}],[" main(",{}],["int",{"fg":4,"bold":true}],[" argc, ",{}],["char",{"fg":4,"bold":true}],[" *argv[])                                                                                                                   ",{}]],"6":[[" 12 ",{"fg":3}],["{                                                                                                                                                  ",{}]],"7":[[" 11 ",{"fg":3}],["  ",{}],["int",{"fg":4,"bold":true}],[" status;                                                                                                                                      ",{}]],"8":[[" 10 ",{"fg":3}],["  ",{}],["/* U ovu varijablu se zapisuje status terminiranja child",{"fg":1}],["                                                                                         ",{}]],"9":[["  9 ",{"fg":3}],["   * procesa na cije se izvrsenje ceka uz pomoc wait fje */",{"fg":1}],["                                                                                        ",{}]],"10":[["  8 ",{"fg":3}],["  ",{}],["if",{"fg":4,"bold":true}],[" (argc < ",{}],["2",{"fg":2}],[")                                                                                                                                    ",{}]],"11":[["  7 ",{"fg":3}],["  {                                                                                                                                                ",{}]],"12":[["  6 ",{"fg":3}],["    ",{}],["/* validan broj argumenata s komandne linije? */",{"fg":1}],["                                                                                               ",{}]],"13":[["  5 ",{"fg":3}],["    fprintf (",{}],["stderr",{"fg":2}],[", ",{}],["\"Nacin koristenja: ",{"fg":2}],["%s",{"fg":1,"bold":true}],[" command arg1 arg2 ...",{"fg":2}],["\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[", argv[",{}],["0",{"fg":2}],["]);                                                                     ",{}]],"14":[["  4 ",{"fg":3}],["    ",{}],["return",{"fg":4,"bold":true}],[" ",{}],["1",{"fg":2}],[";                                                                                                                                      ",{}]],"15":[["  3 ",{"fg":3}],["  }                                                                                                                                                ",{}]],"16":[["  2 ",{"fg":3}],["  ",{}],["if",{"fg":4,"bold":true}],[" (fork())                                                                                                                                      ",{}]],"17":[["  1 ",{"fg":3}],["  {                                                                                                                                                ",{}]],"18":[["  0 ",{"fg":3}],["    wait(&status);                                                                                                                                 ",{}]],"19":[["  1 ",{"fg":3}],["    printf(",{}],["\"",{"fg":2}],["\\n",{"fg":1,"bold":true}],["Parent proces sacekao izvrsenje child-a i sada zavrsava!",{"fg":2}],["\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[");                                                                        ",{}]],"20":[["  2 ",{"fg":3}],["    ",{}],["return",{"fg":4,"bold":true}],[" ",{}],["0",{"fg":2}],[";                                                                                                                                      ",{}]],"21":[["  3 ",{"fg":3}],["  }                                                                                                                                                ",{}]],"22":[["  4 ",{"fg":3}],["  ",{}],["else",{"fg":4,"bold":true}],["                                                                                                                                             ",{}]],"23":[["  5 ",{"fg":3}],["  {                                                                                                                                                ",{}]],"24":[["  6 ",{"fg":3}],["    printf(",{}],["\"Sada se izvrsava child proces!",{"fg":2}],["\\n\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[");                                                                                                  ",{}]],"25":[["  7 ",{"fg":3}],["    ",{}],["/* int execvp (const char *file, char *const argv[]); */",{"fg":1}],["                                                                                       ",{}]],"26":[["  8 ",{"fg":3}],["    ",{}],["if",{"fg":4,"bold":true}],[" (execvp(argv[",{}],["1",{"fg":2}],["],&argv[",{}],["1",{"fg":2}],["]))                                                                                                                  ",{}]],"27":[["  9 ",{"fg":3}],["    {                                                                                                                                              ",{}]],"28":[[" 10 ",{"fg":3}],["      printf(",{}],["\"Upozorenje: execvp greska.",{"fg":2}],["\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[");                                                                                                      ",{}]],"29":[[" 11 ",{"fg":3}],["      ",{}],["return",{"fg":4,"bold":true}],[" ",{}],["1",{"fg":2}],[";                                                                                                                                    ",{}]],"30":[[" 12 ",{"fg":3}],["    }                                                                                                                                              ",{}]],"31":[[" 13 ",{"fg":3}],["    printf(",{}],["\"Ovo nikad nece biti ispisano!!",{"fg":2}],["\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[");                                                                                                    ",{}]],"32":[[" 14 ",{"fg":3}],["  }                                                                                                                                                ",{}]],"33":[[" 15 ",{"fg":3}],["}                                                                                                                                                  ",{}]],"39":[["\"primjer_2.c\" 34L, 883C                                                                                                              19,3          All ",{}]]},"cursor":{"y":18}}],[0.6163999999999999,{"lines":{"0":[[" 19 ",{"fg":3}],["#include",{"fg":5}],["<stdio.h>",{"fg":2}],["                                                                                                                                  ",{}]],"1":[[" 18 ",{"fg":3}],["#include",{"fg":5}],["<unistd.h>",{"fg":2}],["                                                                                                                                 ",{}]],"2":[[" 17 ",{"fg":3}],["#include",{"fg":5}],["<sys/types.h>",{"fg":2}],["                                                                                                                              ",{}]],"3":[[" 16 ",{"fg":3}],["#include",{"fg":5}],["<sys/wait.h>",{"fg":2}],[" ",{}],["/* zaglavlje u kojem je deklarisana wait f-ja */",{"fg":1}],["                                                                              ",{}]],"4":[[" 15 ",{"fg":3}],["                                                                                                                                                   ",{}]],"5":[[" 14 ",{"fg":3}],["int",{"fg":4,"bold":true}],[" main(",{}],["int",{"fg":4,"bold":true}],[" argc, ",{}],["char",{"fg":4,"bold":true}],[" *argv[])                                                                                                                   ",{}]],"6":[[" 13 ",{"fg":3}],["{                                                                                                                                                  ",{}]],"7":[[" 12 ",{"fg":3}],["  ",{}],["int",{"fg":4,"bold":true}],[" status;                                                                                                                                      ",{}]],"8":[[" 11 ",{"fg":3}],["  ",{}],["/* U ovu varijablu se zapisuje status terminiranja child",{"fg":1}],["                                                                                         ",{}]],"9":[[" 10 ",{"fg":3}],["   * procesa na cije se izvrsenje ceka uz pomoc wait fje */",{"fg":1}],["                                                                                        ",{}]],"10":[["  9 ",{"fg":3}],["  ",{}],["if",{"fg":4,"bold":true}],[" (argc < ",{}],["2",{"fg":2}],[")                                                                                                                                    ",{}]],"11":[["  8 ",{"fg":3}],["  {                                                                                                                                                ",{}]],"12":[["  7 ",{"fg":3}],["    ",{}],["/* validan broj argumenata s komandne linije? */",{"fg":1}],["                                                                                               ",{}]],"13":[["  6 ",{"fg":3}],["    fprintf (",{}],["stderr",{"fg":2}],[", ",{}],["\"Nacin koristenja: ",{"fg":2}],["%s",{"fg":1,"bold":true}],[" command arg1 arg2 ...",{"fg":2}],["\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[", argv[",{}],["0",{"fg":2}],["]);                                                                     ",{}]],"14":[["  5 ",{"fg":3}],["    ",{}],["return",{"fg":4,"bold":true}],[" ",{}],["1",{"fg":2}],[";                                                                                                                                      ",{}]],"15":[["  4 ",{"fg":3}],["  }                                                                                                                                                ",{}]],"16":[["  3 ",{"fg":3}],["  ",{}],["if",{"fg":4,"bold":true}],[" (fork())                                                                                                                                      ",{}]],"17":[["  2 ",{"fg":3}],["  {                                                                                                                                                ",{}]],"18":[["  1 ",{"fg":3}],["    wait(&status);                                                                                                                                 ",{}]],"19":[["  0 ",{"fg":3}],["    printf(",{}],["\"",{"fg":2}],["\\n",{"fg":1,"bold":true}],["Parent proces sacekao izvrsenje child-a i sada zavrsava!",{"fg":2}],["\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[");                                                                        ",{}]],"20":[["  1 ",{"fg":3}],["    ",{}],["return",{"fg":4,"bold":true}],[" ",{}],["0",{"fg":2}],[";                                                                                                                                      ",{}]],"21":[["  2 ",{"fg":3}],["  }                                                                                                                                                ",{}]],"22":[["  3 ",{"fg":3}],["  ",{}],["else",{"fg":4,"bold":true}],["                                                                                                                                             ",{}]],"23":[["  4 ",{"fg":3}],["  {                                                                                                                                                ",{}]],"24":[["  5 ",{"fg":3}],["    printf(",{}],["\"Sada se izvrsava child proces!",{"fg":2}],["\\n\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[");                                                                                                  ",{}]],"25":[["  6 ",{"fg":3}],["    ",{}],["/* int execvp (const char *file, char *const argv[]); */",{"fg":1}],["                                                                                       ",{}]],"26":[["  7 ",{"fg":3}],["    ",{}],["if",{"fg":4,"bold":true}],[" (execvp(argv[",{}],["1",{"fg":2}],["],&argv[",{}],["1",{"fg":2}],["]))                                                                                                                  ",{}]],"27":[["  8 ",{"fg":3}],["    {                                                                                                                                              ",{}]],"28":[["  9 ",{"fg":3}],["      printf(",{}],["\"Upozorenje: execvp greska.",{"fg":2}],["\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[");                                                                                                      ",{}]],"29":[[" 10 ",{"fg":3}],["      ",{}],["return",{"fg":4,"bold":true}],[" ",{}],["1",{"fg":2}],[";                                                                                                                                    ",{}]],"30":[[" 11 ",{"fg":3}],["    }                                                                                                                                              ",{}]],"31":[[" 12 ",{"fg":3}],["    printf(",{}],["\"Ovo nikad nece biti ispisano!!",{"fg":2}],["\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[");                                                                                                    ",{}]],"32":[[" 13 ",{"fg":3}],["  }                                                                                                                                                ",{}]],"33":[[" 14 ",{"fg":3}],["}                                                                                                                                                  ",{}]],"39":[["\"primjer_2.c\" 34L, 883C                                                                                                              20,3          All ",{}]]},"cursor":{"y":19}}],[0.233317,{"lines":{"0":[[" 20 ",{"fg":3}],["#include",{"fg":5}],["<stdio.h>",{"fg":2}],["                                                                                                                                  ",{}]],"1":[[" 19 ",{"fg":3}],["#include",{"fg":5}],["<unistd.h>",{"fg":2}],["                                                                                                                                 ",{}]],"2":[[" 18 ",{"fg":3}],["#include",{"fg":5}],["<sys/types.h>",{"fg":2}],["                                                                                                                              ",{}]],"3":[[" 17 ",{"fg":3}],["#include",{"fg":5}],["<sys/wait.h>",{"fg":2}],[" ",{}],["/* zaglavlje u kojem je deklarisana wait f-ja */",{"fg":1}],["                                                                              ",{}]],"4":[[" 16 ",{"fg":3}],["                                                                                                                                                   ",{}]],"5":[[" 15 ",{"fg":3}],["int",{"fg":4,"bold":true}],[" main(",{}],["int",{"fg":4,"bold":true}],[" argc, ",{}],["char",{"fg":4,"bold":true}],[" *argv[])                                                                                                                   ",{}]],"6":[[" 14 ",{"fg":3}],["{                                                                                                                                                  ",{}]],"7":[[" 13 ",{"fg":3}],["  ",{}],["int",{"fg":4,"bold":true}],[" status;                                                                                                                                      ",{}]],"8":[[" 12 ",{"fg":3}],["  ",{}],["/* U ovu varijablu se zapisuje status terminiranja child",{"fg":1}],["                                                                                         ",{}]],"9":[[" 11 ",{"fg":3}],["   * procesa na cije se izvrsenje ceka uz pomoc wait fje */",{"fg":1}],["                                                                                        ",{}]],"10":[[" 10 ",{"fg":3}],["  ",{}],["if",{"fg":4,"bold":true}],[" (argc < ",{}],["2",{"fg":2}],[")                                                                                                                                    ",{}]],"11":[["  9 ",{"fg":3}],["  {                                                                                                                                                ",{}]],"12":[["  8 ",{"fg":3}],["    ",{}],["/* validan broj argumenata s komandne linije? */",{"fg":1}],["                                                                                               ",{}]],"13":[["  7 ",{"fg":3}],["    fprintf (",{}],["stderr",{"fg":2}],[", ",{}],["\"Nacin koristenja: ",{"fg":2}],["%s",{"fg":1,"bold":true}],[" command arg1 arg2 ...",{"fg":2}],["\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[", argv[",{}],["0",{"fg":2}],["]);                                                                     ",{}]],"14":[["  6 ",{"fg":3}],["    ",{}],["return",{"fg":4,"bold":true}],[" ",{}],["1",{"fg":2}],[";                                                                                                                                      ",{}]],"15":[["  5 ",{"fg":3}],["  }                                                                                                                                                ",{}]],"16":[["  4 ",{"fg":3}],["  ",{}],["if",{"fg":4,"bold":true}],[" (fork())                                                                                                                                      ",{}]],"17":[["  3 ",{"fg":3}],["  {                                                                                                                                                ",{}]],"18":[["  2 ",{"fg":3}],["    wait(&status);                                                                                                                                 ",{}]],"19":[["  1 ",{"fg":3}],["    printf(",{}],["\"",{"fg":2}],["\\n",{"fg":1,"bold":true}],["Parent proces sacekao izvrsenje child-a i sada zavrsava!",{"fg":2}],["\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[");                                                                        ",{}]],"20":[["  0 ",{"fg":3}],["    ",{}],["return",{"fg":4,"bold":true}],[" ",{}],["0",{"fg":2}],[";                                                                                                                                      ",{}]],"21":[["  1 ",{"fg":3}],["  }                                                                                                                                                ",{}]],"22":[["  2 ",{"fg":3}],["  ",{}],["else",{"fg":4,"bold":true}],["                                                                                                                                             ",{}]],"23":[["  3 ",{"fg":3}],["  {                                                                                                                                                ",{}]],"24":[["  4 ",{"fg":3}],["    printf(",{}],["\"Sada se izvrsava child proces!",{"fg":2}],["\\n\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[");                                                                                                  ",{}]],"25":[["  5 ",{"fg":3}],["    ",{}],["/* int execvp (const char *file, char *const argv[]); */",{"fg":1}],["                                                                                       ",{}]],"26":[["  6 ",{"fg":3}],["    ",{}],["if",{"fg":4,"bold":true}],[" (execvp(argv[",{}],["1",{"fg":2}],["],&argv[",{}],["1",{"fg":2}],["]))                                                                                                                  ",{}]],"27":[["  7 ",{"fg":3}],["    {                                                                                                                                              ",{}]],"28":[["  8 ",{"fg":3}],["      printf(",{}],["\"Upozorenje: execvp greska.",{"fg":2}],["\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[");                                                                                                      ",{}]],"29":[["  9 ",{"fg":3}],["      ",{}],["return",{"fg":4,"bold":true}],[" ",{}],["1",{"fg":2}],[";                                                                                                                                    ",{}]],"30":[[" 10 ",{"fg":3}],["    }                                                                                                                                              ",{}]],"31":[[" 11 ",{"fg":3}],["    printf(",{}],["\"Ovo nikad nece biti ispisano!!",{"fg":2}],["\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[");                                                                                                    ",{}]],"32":[[" 12 ",{"fg":3}],["  }                                                                                                                                                ",{}]],"33":[[" 13 ",{"fg":3}],["}                                                                                                                                                  ",{}]],"39":[["\"primjer_2.c\" 34L, 883C                                                                                                              21,3          All ",{}]]},"cursor":{"y":20}}],[0.213759,{"lines":{"0":[[" 21 ",{"fg":3}],["#include",{"fg":5}],["<stdio.h>",{"fg":2}],["                                                                                                                                  ",{}]],"1":[[" 20 ",{"fg":3}],["#include",{"fg":5}],["<unistd.h>",{"fg":2}],["                                                                                                                                 ",{}]],"2":[[" 19 ",{"fg":3}],["#include",{"fg":5}],["<sys/types.h>",{"fg":2}],["                                                                                                                              ",{}]],"3":[[" 18 ",{"fg":3}],["#include",{"fg":5}],["<sys/wait.h>",{"fg":2}],[" ",{}],["/* zaglavlje u kojem je deklarisana wait f-ja */",{"fg":1}],["                                                                              ",{}]],"4":[[" 17 ",{"fg":3}],["                                                                                                                                                   ",{}]],"5":[[" 16 ",{"fg":3}],["int",{"fg":4,"bold":true}],[" main(",{}],["int",{"fg":4,"bold":true}],[" argc, ",{}],["char",{"fg":4,"bold":true}],[" *argv[])                                                                                                                   ",{}]],"6":[[" 15 ",{"fg":3}],["{                                                                                                                                                  ",{}]],"7":[[" 14 ",{"fg":3}],["  ",{}],["int",{"fg":4,"bold":true}],[" status;                                                                                                                                      ",{}]],"8":[[" 13 ",{"fg":3}],["  ",{}],["/* U ovu varijablu se zapisuje status terminiranja child",{"fg":1}],["                                                                                         ",{}]],"9":[[" 12 ",{"fg":3}],["   * procesa na cije se izvrsenje ceka uz pomoc wait fje */",{"fg":1}],["                                                                                        ",{}]],"10":[[" 11 ",{"fg":3}],["  ",{}],["if",{"fg":4,"bold":true}],[" (argc < ",{}],["2",{"fg":2}],[")                                                                                                                                    ",{}]],"11":[[" 10 ",{"fg":3}],["  {                                                                                                                                                ",{}]],"12":[["  9 ",{"fg":3}],["    ",{}],["/* validan broj argumenata s komandne linije? */",{"fg":1}],["                                                                                               ",{}]],"13":[["  8 ",{"fg":3}],["    fprintf (",{}],["stderr",{"fg":2}],[", ",{}],["\"Nacin koristenja: ",{"fg":2}],["%s",{"fg":1,"bold":true}],[" command arg1 arg2 ...",{"fg":2}],["\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[", argv[",{}],["0",{"fg":2}],["]);                                                                     ",{}]],"14":[["  7 ",{"fg":3}],["    ",{}],["return",{"fg":4,"bold":true}],[" ",{}],["1",{"fg":2}],[";                                                                                                                                      ",{}]],"15":[["  6 ",{"fg":3}],["  }                                                                                                                                                ",{}]],"16":[["  5 ",{"fg":3}],["  ",{}],["if",{"fg":4,"bold":true}],[" (fork())                                                                                                                                      ",{}]],"17":[["  4 ",{"fg":3}],["  ",{}],["{",{"bg":6}],["                                                                                                                                                ",{}]],"18":[["  3 ",{"fg":3}],["    wait(&status);                                                                                                                                 ",{}]],"19":[["  2 ",{"fg":3}],["    printf(",{}],["\"",{"fg":2}],["\\n",{"fg":1,"bold":true}],["Parent proces sacekao izvrsenje child-a i sada zavrsava!",{"fg":2}],["\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[");                                                                        ",{}]],"20":[["  1 ",{"fg":3}],["    ",{}],["return",{"fg":4,"bold":true}],[" ",{}],["0",{"fg":2}],[";                                                                                                                                      ",{}]],"21":[["  0 ",{"fg":3}],["  ",{}],["}",{"bg":6}],["                                                                                                                                                ",{}]],"22":[["  1 ",{"fg":3}],["  ",{}],["else",{"fg":4,"bold":true}],["                                                                                                                                             ",{}]],"23":[["  2 ",{"fg":3}],["  {                                                                                                                                                ",{}]],"24":[["  3 ",{"fg":3}],["    printf(",{}],["\"Sada se izvrsava child proces!",{"fg":2}],["\\n\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[");                                                                                                  ",{}]],"25":[["  4 ",{"fg":3}],["    ",{}],["/* int execvp (const char *file, char *const argv[]); */",{"fg":1}],["                                                                                       ",{}]],"26":[["  5 ",{"fg":3}],["    ",{}],["if",{"fg":4,"bold":true}],[" (execvp(argv[",{}],["1",{"fg":2}],["],&argv[",{}],["1",{"fg":2}],["]))                                                                                                                  ",{}]],"27":[["  6 ",{"fg":3}],["    {                                                                                                                                              ",{}]],"28":[["  7 ",{"fg":3}],["      printf(",{}],["\"Upozorenje: execvp greska.",{"fg":2}],["\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[");                                                                                                      ",{}]],"29":[["  8 ",{"fg":3}],["      ",{}],["return",{"fg":4,"bold":true}],[" ",{}],["1",{"fg":2}],[";                                                                                                                                    ",{}]]},"cursor":{"y":21}}],[0.004044,{"lines":{"30":[["  9 ",{"fg":3}],["    }                                                                                                                                              ",{}]],"31":[[" 10 ",{"fg":3}],["    printf(",{}],["\"Ovo nikad nece biti ispisano!!",{"fg":2}],["\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[");                                                                                                    ",{}]],"32":[[" 11 ",{"fg":3}],["  }                                                                                                                                                ",{}]],"33":[[" 12 ",{"fg":3}],["}                                                                                                                                                  ",{}]],"39":[["\"primjer_2.c\" 34L, 883C                                                                                                              22,3          All ",{}]]}}],[0.220618,{"lines":{"0":[[" 22 ",{"fg":3}],["#include",{"fg":5}],["<stdio.h>",{"fg":2}],["                                                                                                                                  ",{}]],"1":[[" 21 ",{"fg":3}],["#include",{"fg":5}],["<unistd.h>",{"fg":2}],["                                                                                                                                 ",{}]],"2":[[" 20 ",{"fg":3}],["#include",{"fg":5}],["<sys/types.h>",{"fg":2}],["                                                                                                                              ",{}]],"3":[[" 19 ",{"fg":3}],["#include",{"fg":5}],["<sys/wait.h>",{"fg":2}],[" ",{}],["/* zaglavlje u kojem je deklarisana wait f-ja */",{"fg":1}],["                                                                              ",{}]],"4":[[" 18 ",{"fg":3}],["                                                                                                                                                   ",{}]],"5":[[" 17 ",{"fg":3}],["int",{"fg":4,"bold":true}],[" main(",{}],["int",{"fg":4,"bold":true}],[" argc, ",{}],["char",{"fg":4,"bold":true}],[" *argv[])                                                                                                                   ",{}]],"6":[[" 16 ",{"fg":3}],["{                                                                                                                                                  ",{}]],"7":[[" 15 ",{"fg":3}],["  ",{}],["int",{"fg":4,"bold":true}],[" status;                                                                                                                                      ",{}]],"8":[[" 14 ",{"fg":3}],["  ",{}],["/* U ovu varijablu se zapisuje status terminiranja child",{"fg":1}],["                                                                                         ",{}]],"9":[[" 13 ",{"fg":3}],["   * procesa na cije se izvrsenje ceka uz pomoc wait fje */",{"fg":1}],["                                                                                        ",{}]],"10":[[" 12 ",{"fg":3}],["  ",{}],["if",{"fg":4,"bold":true}],[" (argc < ",{}],["2",{"fg":2}],[")                                                                                                                                    ",{}]],"11":[[" 11 ",{"fg":3}],["  {                                                                                                                                                ",{}]],"12":[[" 10 ",{"fg":3}],["    ",{}],["/* validan broj argumenata s komandne linije? */",{"fg":1}],["                                                                                               ",{}]],"13":[["  9 ",{"fg":3}],["    fprintf (",{}],["stderr",{"fg":2}],[", ",{}],["\"Nacin koristenja: ",{"fg":2}],["%s",{"fg":1,"bold":true}],[" command arg1 arg2 ...",{"fg":2}],["\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[", argv[",{}],["0",{"fg":2}],["]);                                                                     ",{}]],"14":[["  8 ",{"fg":3}],["    ",{}],["return",{"fg":4,"bold":true}],[" ",{}],["1",{"fg":2}],[";                                                                                                                                      ",{}]],"15":[["  7 ",{"fg":3}],["  }                                                                                                                                                ",{}]],"16":[["  6 ",{"fg":3}],["  ",{}],["if",{"fg":4,"bold":true}],[" (fork())                                                                                                                                      ",{}]],"17":[["  5 ",{"fg":3}],["  {                                                                                                                                                ",{}]],"18":[["  4 ",{"fg":3}],["    wait(&status);                                                                                                                                 ",{}]],"19":[["  3 ",{"fg":3}],["    printf(",{}],["\"",{"fg":2}],["\\n",{"fg":1,"bold":true}],["Parent proces sacekao izvrsenje child-a i sada zavrsava!",{"fg":2}],["\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[");                                                                        ",{}]],"20":[["  2 ",{"fg":3}],["    ",{}],["return",{"fg":4,"bold":true}],[" ",{}],["0",{"fg":2}],[";                                                                                                                                      ",{}]],"21":[["  1 ",{"fg":3}],["  }                                                                                                                                                ",{}]],"22":[["  0 ",{"fg":3}],["  ",{}],["else",{"fg":4,"bold":true}],["                                                                                                                                             ",{}]],"23":[["  1 ",{"fg":3}],["  {                                                                                                                                                ",{}]],"24":[["  2 ",{"fg":3}],["    printf(",{}],["\"Sada se izvrsava child proces!",{"fg":2}],["\\n\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[");                                                                                                  ",{}]],"25":[["  3 ",{"fg":3}],["    ",{}],["/* int execvp (const char *file, char *const argv[]); */",{"fg":1}],["                                                                                       ",{}]],"26":[["  4 ",{"fg":3}],["    ",{}],["if",{"fg":4,"bold":true}],[" (execvp(argv[",{}],["1",{"fg":2}],["],&argv[",{}],["1",{"fg":2}],["]))                                                                                                                  ",{}]],"27":[["  5 ",{"fg":3}],["    {                                                                                                                                              ",{}]],"28":[["  6 ",{"fg":3}],["      printf(",{}],["\"Upozorenje: execvp greska.",{"fg":2}],["\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[");                                                                                                      ",{}]],"29":[["  7 ",{"fg":3}],["      ",{}],["return",{"fg":4,"bold":true}],[" ",{}],["1",{"fg":2}],[";                                                                                                                                    ",{}]],"30":[["  8 ",{"fg":3}],["    }                                                                                                                                              ",{}]],"31":[["  9 ",{"fg":3}],["    printf(",{}],["\"Ovo nikad nece biti ispisano!!",{"fg":2}],["\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[");                                                                                                    ",{}]],"32":[[" 10 ",{"fg":3}],["  }                                                                                                                                                ",{}]],"33":[[" 11 ",{"fg":3}],["}                                                                                                                                                  ",{}]],"39":[["\"primjer_2.c\" 34L, 883C                                                                                                              23,3          All ",{}]]},"cursor":{"y":22}}],[0.22118,{"lines":{"0":[[" 23 ",{"fg":3}],["#include",{"fg":5}],["<stdio.h>",{"fg":2}],["                                                                                                                                  ",{}]],"1":[[" 22 ",{"fg":3}],["#include",{"fg":5}],["<unistd.h>",{"fg":2}],["                                                                                                                                 ",{}]],"2":[[" 21 ",{"fg":3}],["#include",{"fg":5}],["<sys/types.h>",{"fg":2}],["                                                                                                                              ",{}]],"3":[[" 20 ",{"fg":3}],["#include",{"fg":5}],["<sys/wait.h>",{"fg":2}],[" ",{}],["/* zaglavlje u kojem je deklarisana wait f-ja */",{"fg":1}],["                                                                              ",{}]],"4":[[" 19 ",{"fg":3}],["                                                                                                                                                   ",{}]],"5":[[" 18 ",{"fg":3}],["int",{"fg":4,"bold":true}],[" main(",{}],["int",{"fg":4,"bold":true}],[" argc, ",{}],["char",{"fg":4,"bold":true}],[" *argv[])                                                                                                                   ",{}]],"6":[[" 17 ",{"fg":3}],["{                                                                                                                                                  ",{}]],"7":[[" 16 ",{"fg":3}],["  ",{}],["int",{"fg":4,"bold":true}],[" status;                                                                                                                                      ",{}]],"8":[[" 15 ",{"fg":3}],["  ",{}],["/* U ovu varijablu se zapisuje status terminiranja child",{"fg":1}],["                                                                                         ",{}]],"9":[[" 14 ",{"fg":3}],["   * procesa na cije se izvrsenje ceka uz pomoc wait fje */",{"fg":1}],["                                                                                        ",{}]],"10":[[" 13 ",{"fg":3}],["  ",{}],["if",{"fg":4,"bold":true}],[" (argc < ",{}],["2",{"fg":2}],[")                                                                                                                                    ",{}]],"11":[[" 12 ",{"fg":3}],["  {                                                                                                                                                ",{}]],"12":[[" 11 ",{"fg":3}],["    ",{}],["/* validan broj argumenata s komandne linije? */",{"fg":1}],["                                                                                               ",{}]],"13":[[" 10 ",{"fg":3}],["    fprintf (",{}],["stderr",{"fg":2}],[", ",{}],["\"Nacin koristenja: ",{"fg":2}],["%s",{"fg":1,"bold":true}],[" command arg1 arg2 ...",{"fg":2}],["\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[", argv[",{}],["0",{"fg":2}],["]);                                                                     ",{}]],"14":[["  9 ",{"fg":3}],["    ",{}],["return",{"fg":4,"bold":true}],[" ",{}],["1",{"fg":2}],[";                                                                                                                                      ",{}]],"15":[["  8 ",{"fg":3}],["  }                                                                                                                                                ",{}]],"16":[["  7 ",{"fg":3}],["  ",{}],["if",{"fg":4,"bold":true}],[" (fork())                                                                                                                                      ",{}]],"17":[["  6 ",{"fg":3}],["  {                                                                                                                                                ",{}]],"18":[["  5 ",{"fg":3}],["    wait(&status);                                                                                                                                 ",{}]],"19":[["  4 ",{"fg":3}],["    printf(",{}],["\"",{"fg":2}],["\\n",{"fg":1,"bold":true}],["Parent proces sacekao izvrsenje child-a i sada zavrsava!",{"fg":2}],["\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[");                                                                        ",{}]],"20":[["  3 ",{"fg":3}],["    ",{}],["return",{"fg":4,"bold":true}],[" ",{}],["0",{"fg":2}],[";                                                                                                                                      ",{}]],"21":[["  2 ",{"fg":3}],["  }                                                                                                                                                ",{}]],"22":[["  1 ",{"fg":3}],["  ",{}],["else",{"fg":4,"bold":true}],["                                                                                                                                             ",{}]],"23":[["  0 ",{"fg":3}],["  ",{}],["{",{"bg":6}],["                                                                                                                                                ",{}]],"24":[["  1 ",{"fg":3}],["    printf(",{}],["\"Sada se izvrsava child proces!",{"fg":2}],["\\n\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[");                                                                                                  ",{}]],"25":[["  2 ",{"fg":3}],["    ",{}],["/* int execvp (const char *file, char *const argv[]); */",{"fg":1}],["                                                                                       ",{}]],"26":[["  3 ",{"fg":3}],["    ",{}],["if",{"fg":4,"bold":true}],[" (execvp(argv[",{}],["1",{"fg":2}],["],&argv[",{}],["1",{"fg":2}],["]))                                                                                                                  ",{}]],"27":[["  4 ",{"fg":3}],["    {                                                                                                                                              ",{}]],"28":[["  5 ",{"fg":3}],["      printf(",{}],["\"Upozorenje: execvp greska.",{"fg":2}],["\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[");                                                                                                      ",{}]],"29":[["  6 ",{"fg":3}],["      ",{}],["return",{"fg":4,"bold":true}],[" ",{}],["1",{"fg":2}],[";                                                                                                                                    ",{}]],"30":[["  7 ",{"fg":3}],["    }                                                                                                                                              ",{}]],"31":[["  8 ",{"fg":3}],["    printf(",{}],["\"Ovo nikad nece biti ispisano!!",{"fg":2}],["\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[");                                                                                                    ",{}]],"32":[["  9 ",{"fg":3}],["  ",{}],["}",{"bg":6}],["                                                                                                                                                ",{}]],"33":[[" 10 ",{"fg":3}],["}                                                                                                                                                  ",{}]],"39":[["\"primjer_2.c\" 34L, 883C                                                                                                              24,3          All ",{}]]},"cursor":{"y":23}}],[0.346963,{"lines":{"0":[[" 24 ",{"fg":3}],["#include",{"fg":5}],["<stdio.h>",{"fg":2}],["                                                                                                                                  ",{}]],"1":[[" 23 ",{"fg":3}],["#include",{"fg":5}],["<unistd.h>",{"fg":2}],["                                                                                                                                 ",{}]],"2":[[" 22 ",{"fg":3}],["#include",{"fg":5}],["<sys/types.h>",{"fg":2}],["                                                                                                                              ",{}]],"3":[[" 21 ",{"fg":3}],["#include",{"fg":5}],["<sys/wait.h>",{"fg":2}],[" ",{}],["/* zaglavlje u kojem je deklarisana wait f-ja */",{"fg":1}],["                                                                              ",{}]],"4":[[" 20 ",{"fg":3}],["                                                                                                                                                   ",{}]],"5":[[" 19 ",{"fg":3}],["int",{"fg":4,"bold":true}],[" main(",{}],["int",{"fg":4,"bold":true}],[" argc, ",{}],["char",{"fg":4,"bold":true}],[" *argv[])                                                                                                                   ",{}]],"6":[[" 18 ",{"fg":3}],["{                                                                                                                                                  ",{}]],"7":[[" 17 ",{"fg":3}],["  ",{}],["int",{"fg":4,"bold":true}],[" status;                                                                                                                                      ",{}]],"8":[[" 16 ",{"fg":3}],["  ",{}],["/* U ovu varijablu se zapisuje status terminiranja child",{"fg":1}],["                                                                                         ",{}]],"9":[[" 15 ",{"fg":3}],["   * procesa na cije se izvrsenje ceka uz pomoc wait fje */",{"fg":1}],["                                                                                        ",{}]],"10":[[" 14 ",{"fg":3}],["  ",{}],["if",{"fg":4,"bold":true}],[" (argc < ",{}],["2",{"fg":2}],[")                                                                                                                                    ",{}]],"11":[[" 13 ",{"fg":3}],["  {                                                                                                                                                ",{}]],"12":[[" 12 ",{"fg":3}],["    ",{}],["/* validan broj argumenata s komandne linije? */",{"fg":1}],["                                                                                               ",{}]],"13":[[" 11 ",{"fg":3}],["    fprintf (",{}],["stderr",{"fg":2}],[", ",{}],["\"Nacin koristenja: ",{"fg":2}],["%s",{"fg":1,"bold":true}],[" command arg1 arg2 ...",{"fg":2}],["\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[", argv[",{}],["0",{"fg":2}],["]);                                                                     ",{}]],"14":[[" 10 ",{"fg":3}],["    ",{}],["return",{"fg":4,"bold":true}],[" ",{}],["1",{"fg":2}],[";                                                                                                                                      ",{}]],"15":[["  9 ",{"fg":3}],["  }                                                                                                                                                ",{}]],"16":[["  8 ",{"fg":3}],["  ",{}],["if",{"fg":4,"bold":true}],[" (fork())                                                                                                                                      ",{}]],"17":[["  7 ",{"fg":3}],["  {                                                                                                                                                ",{}]],"18":[["  6 ",{"fg":3}],["    wait(&status);                                                                                                                                 ",{}]],"19":[["  5 ",{"fg":3}],["    printf(",{}],["\"",{"fg":2}],["\\n",{"fg":1,"bold":true}],["Parent proces sacekao izvrsenje child-a i sada zavrsava!",{"fg":2}],["\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[");                                                                        ",{}]],"20":[["  4 ",{"fg":3}],["    ",{}],["return",{"fg":4,"bold":true}],[" ",{}],["0",{"fg":2}],[";                                                                                                                                      ",{}]],"21":[["  3 ",{"fg":3}],["  }                                                                                                                                                ",{}]],"22":[["  2 ",{"fg":3}],["  ",{}],["else",{"fg":4,"bold":true}],["                                                                                                                                             ",{}]],"23":[["  1 ",{"fg":3}],["  {                                                                                                                                                ",{}]],"24":[["  0 ",{"fg":3}],["    printf(",{}],["\"Sada se izvrsava child proces!",{"fg":2}],["\\n\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[");                                                                                                  ",{}]],"25":[["  1 ",{"fg":3}],["    ",{}],["/* int execvp (const char *file, char *const argv[]); */",{"fg":1}],["                                                                                       ",{}]],"26":[["  2 ",{"fg":3}],["    ",{}],["if",{"fg":4,"bold":true}],[" (execvp(argv[",{}],["1",{"fg":2}],["],&argv[",{}],["1",{"fg":2}],["]))                                                                                                                  ",{}]],"27":[["  3 ",{"fg":3}],["    {                                                                                                                                              ",{}]],"28":[["  4 ",{"fg":3}],["      printf(",{}],["\"Upozorenje: execvp greska.",{"fg":2}],["\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[");                                                                                                      ",{}]],"29":[["  5 ",{"fg":3}],["      ",{}],["return",{"fg":4,"bold":true}],[" ",{}],["1",{"fg":2}],[";                                                                                                                                    ",{}]],"30":[["  6 ",{"fg":3}],["    }                                                                                                                                              ",{}]],"31":[["  7 ",{"fg":3}],["    printf(",{}],["\"Ovo nikad nece biti ispisano!!",{"fg":2}],["\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[");                                                                                                    ",{}]],"32":[["  8 ",{"fg":3}],["  }                                                                                                                                                ",{}]],"33":[["  9 ",{"fg":3}],["}                                                                                                                                                  ",{}]],"39":[["\"primjer_2.c\" 34L, 883C                                                                                                              25,3          All ",{}]]},"cursor":{"y":24}}],[3.325073,{"lines":{"0":[[" 25 ",{"fg":3}],["#include",{"fg":5}],["<stdio.h>",{"fg":2}],["                                                                                                                                  ",{}]],"1":[[" 24 ",{"fg":3}],["#include",{"fg":5}],["<unistd.h>",{"fg":2}],["                                                                                                                                 ",{}]],"2":[[" 23 ",{"fg":3}],["#include",{"fg":5}],["<sys/types.h>",{"fg":2}],["                                                                                                                              ",{}]],"3":[[" 22 ",{"fg":3}],["#include",{"fg":5}],["<sys/wait.h>",{"fg":2}],[" ",{}],["/* zaglavlje u kojem je deklarisana wait f-ja */",{"fg":1}],["                                                                              ",{}]],"4":[[" 21 ",{"fg":3}],["                                                                                                                                                   ",{}]],"5":[[" 20 ",{"fg":3}],["int",{"fg":4,"bold":true}],[" main(",{}],["int",{"fg":4,"bold":true}],[" argc, ",{}],["char",{"fg":4,"bold":true}],[" *argv[])                                                                                                                   ",{}]],"6":[[" 19 ",{"fg":3}],["{                                                                                                                                                  ",{}]],"7":[[" 18 ",{"fg":3}],["  ",{}],["int",{"fg":4,"bold":true}],[" status;                                                                                                                                      ",{}]],"8":[[" 17 ",{"fg":3}],["  ",{}],["/* U ovu varijablu se zapisuje status terminiranja child",{"fg":1}],["                                                                                         ",{}]],"9":[[" 16 ",{"fg":3}],["   * procesa na cije se izvrsenje ceka uz pomoc wait fje */",{"fg":1}],["                                                                                        ",{}]],"10":[[" 15 ",{"fg":3}],["  ",{}],["if",{"fg":4,"bold":true}],[" (argc < ",{}],["2",{"fg":2}],[")                                                                                                                                    ",{}]],"11":[[" 14 ",{"fg":3}],["  {                                                                                                                                                ",{}]],"12":[[" 13 ",{"fg":3}],["    ",{}],["/* validan broj argumenata s komandne linije? */",{"fg":1}],["                                                                                               ",{}]],"13":[[" 12 ",{"fg":3}],["    fprintf (",{}],["stderr",{"fg":2}],[", ",{}],["\"Nacin koristenja: ",{"fg":2}],["%s",{"fg":1,"bold":true}],[" command arg1 arg2 ...",{"fg":2}],["\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[", argv[",{}],["0",{"fg":2}],["]);                                                                     ",{}]],"14":[[" 11 ",{"fg":3}],["    ",{}],["return",{"fg":4,"bold":true}],[" ",{}],["1",{"fg":2}],[";                                                                                                                                      ",{}]],"15":[[" 10 ",{"fg":3}],["  }                                                                                                                                                ",{}]],"16":[["  9 ",{"fg":3}],["  ",{}],["if",{"fg":4,"bold":true}],[" (fork())                                                                                                                                      ",{}]],"17":[["  8 ",{"fg":3}],["  {                                                                                                                                                ",{}]],"18":[["  7 ",{"fg":3}],["    wait(&status);                                                                                                                                 ",{}]],"19":[["  6 ",{"fg":3}],["    printf(",{}],["\"",{"fg":2}],["\\n",{"fg":1,"bold":true}],["Parent proces sacekao izvrsenje child-a i sada zavrsava!",{"fg":2}],["\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[");                                                                        ",{}]],"20":[["  5 ",{"fg":3}],["    ",{}],["return",{"fg":4,"bold":true}],[" ",{}],["0",{"fg":2}],[";                                                                                                                                      ",{}]],"21":[["  4 ",{"fg":3}],["  }                                                                                                                                                ",{}]],"22":[["  3 ",{"fg":3}],["  ",{}],["else",{"fg":4,"bold":true}],["                                                                                                                                             ",{}]],"23":[["  2 ",{"fg":3}],["  {                                                                                                                                                ",{}]],"24":[["  1 ",{"fg":3}],["    printf(",{}],["\"Sada se izvrsava child proces!",{"fg":2}],["\\n\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[");                                                                                                  ",{}]],"25":[["  0 ",{"fg":3}],["    ",{}],["/* int execvp (const char *file, char *const argv[]); */",{"fg":1}],["                                                                                       ",{}]],"26":[["  1 ",{"fg":3}],["    ",{}],["if",{"fg":4,"bold":true}],[" (execvp(argv[",{}],["1",{"fg":2}],["],&argv[",{}],["1",{"fg":2}],["]))                                                                                                                  ",{}]],"27":[["  2 ",{"fg":3}],["    {                                                                                                                                              ",{}]],"28":[["  3 ",{"fg":3}],["      printf(",{}],["\"Upozorenje: execvp greska.",{"fg":2}],["\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[");                                                                                                      ",{}]],"29":[["  4 ",{"fg":3}],["      ",{}],["return",{"fg":4,"bold":true}],[" ",{}],["1",{"fg":2}],[";                                                                                                                                    ",{}]],"30":[["  5 ",{"fg":3}],["    }                                                                                                                                              ",{}]],"31":[["  6 ",{"fg":3}],["    printf(",{}],["\"Ovo nikad nece biti ispisano!!",{"fg":2}],["\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[");                                                                                                    ",{}]]},"cursor":{"y":25}}],[0.002761,{"lines":{"32":[["  7 ",{"fg":3}],["  }                                                                                                                                                ",{}]],"33":[["  8 ",{"fg":3}],["}                                                                                                                                                  ",{}]],"39":[["\"primjer_2.c\" 34L, 883C                                                                                                              26,3          All ",{}]]}}],[0.6560589999999999,{"lines":{"0":[[" 26 ",{"fg":3}],["#include",{"fg":5}],["<stdio.h>",{"fg":2}],["                                                                                                                                  ",{}]],"1":[[" 25 ",{"fg":3}],["#include",{"fg":5}],["<unistd.h>",{"fg":2}],["                                                                                                                                 ",{}]],"2":[[" 24 ",{"fg":3}],["#include",{"fg":5}],["<sys/types.h>",{"fg":2}],["                                                                                                                              ",{}]],"3":[[" 23 ",{"fg":3}],["#include",{"fg":5}],["<sys/wait.h>",{"fg":2}],[" ",{}],["/* zaglavlje u kojem je deklarisana wait f-ja */",{"fg":1}],["                                                                              ",{}]],"4":[[" 22 ",{"fg":3}],["                                                                                                                                                   ",{}]],"5":[[" 21 ",{"fg":3}],["int",{"fg":4,"bold":true}],[" main(",{}],["int",{"fg":4,"bold":true}],[" argc, ",{}],["char",{"fg":4,"bold":true}],[" *argv[])                                                                                                                   ",{}]],"6":[[" 20 ",{"fg":3}],["{                                                                                                                                                  ",{}]],"7":[[" 19 ",{"fg":3}],["  ",{}],["int",{"fg":4,"bold":true}],[" status;                                                                                                                                      ",{}]],"8":[[" 18 ",{"fg":3}],["  ",{}],["/* U ovu varijablu se zapisuje status terminiranja child",{"fg":1}],["                                                                                         ",{}]],"9":[[" 17 ",{"fg":3}],["   * procesa na cije se izvrsenje ceka uz pomoc wait fje */",{"fg":1}],["                                                                                        ",{}]],"10":[[" 16 ",{"fg":3}],["  ",{}],["if",{"fg":4,"bold":true}],[" (argc < ",{}],["2",{"fg":2}],[")                                                                                                                                    ",{}]],"11":[[" 15 ",{"fg":3}],["  {                                                                                                                                                ",{}]],"12":[[" 14 ",{"fg":3}],["    ",{}],["/* validan broj argumenata s komandne linije? */",{"fg":1}],["                                                                                               ",{}]],"13":[[" 13 ",{"fg":3}],["    fprintf (",{}],["stderr",{"fg":2}],[", ",{}],["\"Nacin koristenja: ",{"fg":2}],["%s",{"fg":1,"bold":true}],[" command arg1 arg2 ...",{"fg":2}],["\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[", argv[",{}],["0",{"fg":2}],["]);                                                                     ",{}]],"14":[[" 12 ",{"fg":3}],["    ",{}],["return",{"fg":4,"bold":true}],[" ",{}],["1",{"fg":2}],[";                                                                                                                                      ",{}]],"15":[[" 11 ",{"fg":3}],["  }                                                                                                                                                ",{}]],"16":[[" 10 ",{"fg":3}],["  ",{}],["if",{"fg":4,"bold":true}],[" (fork())                                                                                                                                      ",{}]],"17":[["  9 ",{"fg":3}],["  {                                                                                                                                                ",{}]],"18":[["  8 ",{"fg":3}],["    wait(&status);                                                                                                                                 ",{}]],"19":[["  7 ",{"fg":3}],["    printf(",{}],["\"",{"fg":2}],["\\n",{"fg":1,"bold":true}],["Parent proces sacekao izvrsenje child-a i sada zavrsava!",{"fg":2}],["\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[");                                                                        ",{}]],"20":[["  6 ",{"fg":3}],["    ",{}],["return",{"fg":4,"bold":true}],[" ",{}],["0",{"fg":2}],[";                                                                                                                                      ",{}]],"21":[["  5 ",{"fg":3}],["  }                                                                                                                                                ",{}]],"22":[["  4 ",{"fg":3}],["  ",{}],["else",{"fg":4,"bold":true}],["                                                                                                                                             ",{}]],"23":[["  3 ",{"fg":3}],["  {                                                                                                                                                ",{}]],"24":[["  2 ",{"fg":3}],["    printf(",{}],["\"Sada se izvrsava child proces!",{"fg":2}],["\\n\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[");                                                                                                  ",{}]],"25":[["  1 ",{"fg":3}],["    ",{}],["/* int execvp (const char *file, char *const argv[]); */",{"fg":1}],["                                                                                       ",{}]],"26":[["  0 ",{"fg":3}],["    ",{}],["if",{"fg":4,"bold":true}],[" (execvp(argv[",{}],["1",{"fg":2}],["],&argv[",{}],["1",{"fg":2}],["]))                                                                                                                  ",{}]],"27":[["  1 ",{"fg":3}],["    {                                                                                                                                              ",{}]],"28":[["  2 ",{"fg":3}],["      printf(",{}],["\"Upozorenje: execvp greska.",{"fg":2}],["\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[");                                                                                                      ",{}]],"29":[["  3 ",{"fg":3}],["      ",{}],["return",{"fg":4,"bold":true}],[" ",{}],["1",{"fg":2}],[";                                                                                                                                    ",{}]],"30":[["  4 ",{"fg":3}],["    }                                                                                                                                              ",{}]],"31":[["  5 ",{"fg":3}],["    printf(",{}],["\"Ovo nikad nece biti ispisano!!",{"fg":2}],["\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[");                                                                                                    ",{}]],"32":[["  6 ",{"fg":3}],["  }                                                                                                                                                ",{}]],"33":[["  7 ",{"fg":3}],["}                                                                                                                                                  ",{}]],"39":[["\"primjer_2.c\" 34L, 883C                                                                                                              27,3          All ",{}]]},"cursor":{"y":26}}],[0.947066,{"lines":{"0":[[" 27 ",{"fg":3}],["#include",{"fg":5}],["<stdio.h>",{"fg":2}],["                                                                                                                                  ",{}]],"1":[[" 26 ",{"fg":3}],["#include",{"fg":5}],["<unistd.h>",{"fg":2}],["                                                                                                                                 ",{}]],"2":[[" 25 ",{"fg":3}],["#include",{"fg":5}],["<sys/types.h>",{"fg":2}],["                                                                                                                              ",{}]],"3":[[" 24 ",{"fg":3}],["#include",{"fg":5}],["<sys/wait.h>",{"fg":2}],[" ",{}],["/* zaglavlje u kojem je deklarisana wait f-ja */",{"fg":1}],["                                                                              ",{}]],"4":[[" 23 ",{"fg":3}],["                                                                                                                                                   ",{}]],"5":[[" 22 ",{"fg":3}],["int",{"fg":4,"bold":true}],[" main(",{}],["int",{"fg":4,"bold":true}],[" argc, ",{}],["char",{"fg":4,"bold":true}],[" *argv[])                                                                                                                   ",{}]],"6":[[" 21 ",{"fg":3}],["{                                                                                                                                                  ",{}]],"7":[[" 20 ",{"fg":3}],["  ",{}],["int",{"fg":4,"bold":true}],[" status;                                                                                                                                      ",{}]],"8":[[" 19 ",{"fg":3}],["  ",{}],["/* U ovu varijablu se zapisuje status terminiranja child",{"fg":1}],["                                                                                         ",{}]],"9":[[" 18 ",{"fg":3}],["   * procesa na cije se izvrsenje ceka uz pomoc wait fje */",{"fg":1}],["                                                                                        ",{}]],"10":[[" 17 ",{"fg":3}],["  ",{}],["if",{"fg":4,"bold":true}],[" (argc < ",{}],["2",{"fg":2}],[")                                                                                                                                    ",{}]],"11":[[" 16 ",{"fg":3}],["  {                                                                                                                                                ",{}]],"12":[[" 15 ",{"fg":3}],["    ",{}],["/* validan broj argumenata s komandne linije? */",{"fg":1}],["                                                                                               ",{}]],"13":[[" 14 ",{"fg":3}],["    fprintf (",{}],["stderr",{"fg":2}],[", ",{}],["\"Nacin koristenja: ",{"fg":2}],["%s",{"fg":1,"bold":true}],[" command arg1 arg2 ...",{"fg":2}],["\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[", argv[",{}],["0",{"fg":2}],["]);                                                                     ",{}]],"14":[[" 13 ",{"fg":3}],["    ",{}],["return",{"fg":4,"bold":true}],[" ",{}],["1",{"fg":2}],[";                                                                                                                                      ",{}]],"15":[[" 12 ",{"fg":3}],["  }                                                                                                                                                ",{}]],"16":[[" 11 ",{"fg":3}],["  ",{}],["if",{"fg":4,"bold":true}],[" (fork())                                                                                                                                      ",{}]],"17":[[" 10 ",{"fg":3}],["  {                                                                                                                                                ",{}]],"18":[["  9 ",{"fg":3}],["    wait(&status);                                                                                                                                 ",{}]],"19":[["  8 ",{"fg":3}],["    printf(",{}],["\"",{"fg":2}],["\\n",{"fg":1,"bold":true}],["Parent proces sacekao izvrsenje child-a i sada zavrsava!",{"fg":2}],["\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[");                                                                        ",{}]],"20":[["  7 ",{"fg":3}],["    ",{}],["return",{"fg":4,"bold":true}],[" ",{}],["0",{"fg":2}],[";                                                                                                                                      ",{}]],"21":[["  6 ",{"fg":3}],["  }                                                                                                                                                ",{}]],"22":[["  5 ",{"fg":3}],["  ",{}],["else",{"fg":4,"bold":true}],["                                                                                                                                             ",{}]],"23":[["  4 ",{"fg":3}],["  {                                                                                                                                                ",{}]],"24":[["  3 ",{"fg":3}],["    printf(",{}],["\"Sada se izvrsava child proces!",{"fg":2}],["\\n\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[");                                                                                                  ",{}]],"25":[["  2 ",{"fg":3}],["    ",{}],["/* int execvp (const char *file, char *const argv[]); */",{"fg":1}],["                                                                                       ",{}]],"26":[["  1 ",{"fg":3}],["    ",{}],["if",{"fg":4,"bold":true}],[" (execvp(argv[",{}],["1",{"fg":2}],["],&argv[",{}],["1",{"fg":2}],["]))                                                                                                                  ",{}]],"27":[["  0 ",{"fg":3}],["    {                                                                                                                                              ",{}]],"28":[["  1 ",{"fg":3}],["      printf(",{}],["\"Upozorenje: execvp greska.",{"fg":2}],["\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[");                                                                                                      ",{}]],"29":[["  2 ",{"fg":3}],["      ",{}],["return",{"fg":4,"bold":true}],[" ",{}],["1",{"fg":2}],[";                                                                                                                                    ",{}]],"30":[["  3 ",{"fg":3}],["    }                                                                                                                                              ",{}]],"31":[["  4 ",{"fg":3}],["    printf(",{}],["\"Ovo nikad nece biti ispisano!!",{"fg":2}],["\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[");                                                                                                    ",{}]],"32":[["  5 ",{"fg":3}],["  }                                                                                                                                                ",{}]],"33":[["  6 ",{"fg":3}],["}                                                                                                                                                  ",{}]],"39":[["\"primjer_2.c\" 34L, 883C                                                                                                              28,3          All ",{}]]},"cursor":{"y":27}}],[0.233829,{"lines":{"0":[[" 28 ",{"fg":3}],["#include",{"fg":5}],["<stdio.h>",{"fg":2}],["                                                                                                                                  ",{}]],"1":[[" 27 ",{"fg":3}],["#include",{"fg":5}],["<unistd.h>",{"fg":2}],["                                                                                                                                 ",{}]],"2":[[" 26 ",{"fg":3}],["#include",{"fg":5}],["<sys/types.h>",{"fg":2}],["                                                                                                                              ",{}]],"3":[[" 25 ",{"fg":3}],["#include",{"fg":5}],["<sys/wait.h>",{"fg":2}],[" ",{}],["/* zaglavlje u kojem je deklarisana wait f-ja */",{"fg":1}],["                                                                              ",{}]],"4":[[" 24 ",{"fg":3}],["                                                                                                                                                   ",{}]],"5":[[" 23 ",{"fg":3}],["int",{"fg":4,"bold":true}],[" main(",{}],["int",{"fg":4,"bold":true}],[" argc, ",{}],["char",{"fg":4,"bold":true}],[" *argv[])                                                                                                                   ",{}]],"6":[[" 22 ",{"fg":3}],["{                                                                                                                                                  ",{}]],"7":[[" 21 ",{"fg":3}],["  ",{}],["int",{"fg":4,"bold":true}],[" status;                                                                                                                                      ",{}]],"8":[[" 20 ",{"fg":3}],["  ",{}],["/* U ovu varijablu se zapisuje status terminiranja child",{"fg":1}],["                                                                                         ",{}]],"9":[[" 19 ",{"fg":3}],["   * procesa na cije se izvrsenje ceka uz pomoc wait fje */",{"fg":1}],["                                                                                        ",{}]],"10":[[" 18 ",{"fg":3}],["  ",{}],["if",{"fg":4,"bold":true}],[" (argc < ",{}],["2",{"fg":2}],[")                                                                                                                                    ",{}]],"11":[[" 17 ",{"fg":3}],["  {                                                                                                                                                ",{}]],"12":[[" 16 ",{"fg":3}],["    ",{}],["/* validan broj argumenata s komandne linije? */",{"fg":1}],["                                                                                               ",{}]],"13":[[" 15 ",{"fg":3}],["    fprintf (",{}],["stderr",{"fg":2}],[", ",{}],["\"Nacin koristenja: ",{"fg":2}],["%s",{"fg":1,"bold":true}],[" command arg1 arg2 ...",{"fg":2}],["\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[", argv[",{}],["0",{"fg":2}],["]);                                                                     ",{}]],"14":[[" 14 ",{"fg":3}],["    ",{}],["return",{"fg":4,"bold":true}],[" ",{}],["1",{"fg":2}],[";                                                                                                                                      ",{}]],"15":[[" 13 ",{"fg":3}],["  }                                                                                                                                                ",{}]],"16":[[" 12 ",{"fg":3}],["  ",{}],["if",{"fg":4,"bold":true}],[" (fork())                                                                                                                                      ",{}]],"17":[[" 11 ",{"fg":3}],["  {                                                                                                                                                ",{}]],"18":[[" 10 ",{"fg":3}],["    wait(&status);                                                                                                                                 ",{}]],"19":[["  9 ",{"fg":3}],["    printf(",{}],["\"",{"fg":2}],["\\n",{"fg":1,"bold":true}],["Parent proces sacekao izvrsenje child-a i sada zavrsava!",{"fg":2}],["\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[");                                                                        ",{}]],"20":[["  8 ",{"fg":3}],["    ",{}],["return",{"fg":4,"bold":true}],[" ",{}],["0",{"fg":2}],[";                                                                                                                                      ",{}]],"21":[["  7 ",{"fg":3}],["  }                                                                                                                                                ",{}]],"22":[["  6 ",{"fg":3}],["  ",{}],["else",{"fg":4,"bold":true}],["                                                                                                                                             ",{}]],"23":[["  5 ",{"fg":3}],["  {                                                                                                                                                ",{}]],"24":[["  4 ",{"fg":3}],["    printf(",{}],["\"Sada se izvrsava child proces!",{"fg":2}],["\\n\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[");                                                                                                  ",{}]],"25":[["  3 ",{"fg":3}],["    ",{}],["/* int execvp (const char *file, char *const argv[]); */",{"fg":1}],["                                                                                       ",{}]],"26":[["  2 ",{"fg":3}],["    ",{}],["if",{"fg":4,"bold":true}],[" (execvp(argv[",{}],["1",{"fg":2}],["],&argv[",{}],["1",{"fg":2}],["]))                                                                                                                  ",{}]],"27":[["  1 ",{"fg":3}],["    {                                                                                                                                              ",{}]],"28":[["  0 ",{"fg":3}],["      printf(",{}],["\"Upozorenje: execvp greska.",{"fg":2}],["\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[");                                                                                                      ",{}]],"29":[["  1 ",{"fg":3}],["      ",{}],["return",{"fg":4,"bold":true}],[" ",{}],["1",{"fg":2}],[";                                                                                                                                    ",{}]],"30":[["  2 ",{"fg":3}],["    }                                                                                                                                              ",{}]],"31":[["  3 ",{"fg":3}],["    printf(",{}],["\"Ovo nikad nece biti ispisano!!",{"fg":2}],["\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[");                                                                                                    ",{}]],"32":[["  4 ",{"fg":3}],["  }                                                                                                                                                ",{}]],"33":[["  5 ",{"fg":3}],["}                                                                                                                                                  ",{}]],"39":[["\"primjer_2.c\" 34L, 883C                                                                                                              29,3          All ",{}]]},"cursor":{"y":28}}],[0.200679,{"lines":{"0":[[" 29 ",{"fg":3}],["#include",{"fg":5}],["<stdio.h>",{"fg":2}],["                                                                                                                                  ",{}]],"1":[[" 28 ",{"fg":3}],["#include",{"fg":5}],["<unistd.h>",{"fg":2}],["                                                                                                                                 ",{}]],"2":[[" 27 ",{"fg":3}],["#include",{"fg":5}],["<sys/types.h>",{"fg":2}],["                                                                                                                              ",{}]],"3":[[" 26 ",{"fg":3}],["#include",{"fg":5}],["<sys/wait.h>",{"fg":2}],[" ",{}],["/* zaglavlje u kojem je deklarisana wait f-ja */",{"fg":1}],["                                                                              ",{}]],"4":[[" 25 ",{"fg":3}],["                                                                                                                                                   ",{}]],"5":[[" 24 ",{"fg":3}],["int",{"fg":4,"bold":true}],[" main(",{}],["int",{"fg":4,"bold":true}],[" argc, ",{}],["char",{"fg":4,"bold":true}],[" *argv[])                                                                                                                   ",{}]],"6":[[" 23 ",{"fg":3}],["{                                                                                                                                                  ",{}]],"7":[[" 22 ",{"fg":3}],["  ",{}],["int",{"fg":4,"bold":true}],[" status;                                                                                                                                      ",{}]],"8":[[" 21 ",{"fg":3}],["  ",{}],["/* U ovu varijablu se zapisuje status terminiranja child",{"fg":1}],["                                                                                         ",{}]],"9":[[" 20 ",{"fg":3}],["   * procesa na cije se izvrsenje ceka uz pomoc wait fje */",{"fg":1}],["                                                                                        ",{}]],"10":[[" 19 ",{"fg":3}],["  ",{}],["if",{"fg":4,"bold":true}],[" (argc < ",{}],["2",{"fg":2}],[")                                                                                                                                    ",{}]],"11":[[" 18 ",{"fg":3}],["  {                                                                                                                                                ",{}]],"12":[[" 17 ",{"fg":3}],["    ",{}],["/* validan broj argumenata s komandne linije? */",{"fg":1}],["                                                                                               ",{}]],"13":[[" 16 ",{"fg":3}],["    fprintf (",{}],["stderr",{"fg":2}],[", ",{}],["\"Nacin koristenja: ",{"fg":2}],["%s",{"fg":1,"bold":true}],[" command arg1 arg2 ...",{"fg":2}],["\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[", argv[",{}],["0",{"fg":2}],["]);                                                                     ",{}]],"14":[[" 15 ",{"fg":3}],["    ",{}],["return",{"fg":4,"bold":true}],[" ",{}],["1",{"fg":2}],[";                                                                                                                                      ",{}]],"15":[[" 14 ",{"fg":3}],["  }                                                                                                                                                ",{}]],"16":[[" 13 ",{"fg":3}],["  ",{}],["if",{"fg":4,"bold":true}],[" (fork())                                                                                                                                      ",{}]],"17":[[" 12 ",{"fg":3}],["  {                                                                                                                                                ",{}]],"18":[[" 11 ",{"fg":3}],["    wait(&status);                                                                                                                                 ",{}]],"19":[[" 10 ",{"fg":3}],["    printf(",{}],["\"",{"fg":2}],["\\n",{"fg":1,"bold":true}],["Parent proces sacekao izvrsenje child-a i sada zavrsava!",{"fg":2}],["\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[");                                                                        ",{}]],"20":[["  9 ",{"fg":3}],["    ",{}],["return",{"fg":4,"bold":true}],[" ",{}],["0",{"fg":2}],[";                                                                                                                                      ",{}]],"21":[["  8 ",{"fg":3}],["  }                                                                                                                                                ",{}]],"22":[["  7 ",{"fg":3}],["  ",{}],["else",{"fg":4,"bold":true}],["                                                                                                                                             ",{}]],"23":[["  6 ",{"fg":3}],["  {                                                                                                                                                ",{}]],"24":[["  5 ",{"fg":3}],["    printf(",{}],["\"Sada se izvrsava child proces!",{"fg":2}],["\\n\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[");                                                                                                  ",{}]],"25":[["  4 ",{"fg":3}],["    ",{}],["/* int execvp (const char *file, char *const argv[]); */",{"fg":1}],["                                                                                       ",{}]]},"cursor":{"y":29}}],[0.004492,{"lines":{"26":[["  3 ",{"fg":3}],["    ",{}],["if",{"fg":4,"bold":true}],[" (execvp(argv[",{}],["1",{"fg":2}],["],&argv[",{}],["1",{"fg":2}],["]))                                                                                                                  ",{}]],"27":[["  2 ",{"fg":3}],["    {                                                                                                                                              ",{}]],"28":[["  1 ",{"fg":3}],["      printf(",{}],["\"Upozorenje: execvp greska.",{"fg":2}],["\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[");                                                                                                      ",{}]],"29":[["  0 ",{"fg":3}],["      ",{}],["return",{"fg":4,"bold":true}],[" ",{}],["1",{"fg":2}],[";                                                                                                                                    ",{}]],"30":[["  1 ",{"fg":3}],["    }                                                                                                                                              ",{}]],"31":[["  2 ",{"fg":3}],["    printf(",{}],["\"Ovo nikad nece biti ispisano!!",{"fg":2}],["\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[");                                                                                                    ",{}]],"32":[["  3 ",{"fg":3}],["  }                                                                                                                                                ",{}]],"33":[["  4 ",{"fg":3}],["}                                                                                                                                                  ",{}]],"39":[["\"primjer_2.c\" 34L, 883C                                                                                                              30,3          All ",{}]]}}],[0.219473,{"lines":{"0":[[" 30 ",{"fg":3}],["#include",{"fg":5}],["<stdio.h>",{"fg":2}],["                                                                                                                                  ",{}]],"1":[[" 29 ",{"fg":3}],["#include",{"fg":5}],["<unistd.h>",{"fg":2}],["                                                                                                                                 ",{}]],"2":[[" 28 ",{"fg":3}],["#include",{"fg":5}],["<sys/types.h>",{"fg":2}],["                                                                                                                              ",{}]],"3":[[" 27 ",{"fg":3}],["#include",{"fg":5}],["<sys/wait.h>",{"fg":2}],[" ",{}],["/* zaglavlje u kojem je deklarisana wait f-ja */",{"fg":1}],["                                                                              ",{}]],"4":[[" 26 ",{"fg":3}],["                                                                                                                                                   ",{}]],"5":[[" 25 ",{"fg":3}],["int",{"fg":4,"bold":true}],[" main(",{}],["int",{"fg":4,"bold":true}],[" argc, ",{}],["char",{"fg":4,"bold":true}],[" *argv[])                                                                                                                   ",{}]],"6":[[" 24 ",{"fg":3}],["{                                                                                                                                                  ",{}]],"7":[[" 23 ",{"fg":3}],["  ",{}],["int",{"fg":4,"bold":true}],[" status;                                                                                                                                      ",{}]],"8":[[" 22 ",{"fg":3}],["  ",{}],["/* U ovu varijablu se zapisuje status terminiranja child",{"fg":1}],["                                                                                         ",{}]],"9":[[" 21 ",{"fg":3}],["   * procesa na cije se izvrsenje ceka uz pomoc wait fje */",{"fg":1}],["                                                                                        ",{}]],"10":[[" 20 ",{"fg":3}],["  ",{}],["if",{"fg":4,"bold":true}],[" (argc < ",{}],["2",{"fg":2}],[")                                                                                                                                    ",{}]],"11":[[" 19 ",{"fg":3}],["  {                                                                                                                                                ",{}]],"12":[[" 18 ",{"fg":3}],["    ",{}],["/* validan broj argumenata s komandne linije? */",{"fg":1}],["                                                                                               ",{}]],"13":[[" 17 ",{"fg":3}],["    fprintf (",{}],["stderr",{"fg":2}],[", ",{}],["\"Nacin koristenja: ",{"fg":2}],["%s",{"fg":1,"bold":true}],[" command arg1 arg2 ...",{"fg":2}],["\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[", argv[",{}],["0",{"fg":2}],["]);                                                                     ",{}]],"14":[[" 16 ",{"fg":3}],["    ",{}],["return",{"fg":4,"bold":true}],[" ",{}],["1",{"fg":2}],[";                                                                                                                                      ",{}]],"15":[[" 15 ",{"fg":3}],["  }                                                                                                                                                ",{}]],"16":[[" 14 ",{"fg":3}],["  ",{}],["if",{"fg":4,"bold":true}],[" (fork())                                                                                                                                      ",{}]],"17":[[" 13 ",{"fg":3}],["  {                                                                                                                                                ",{}]],"18":[[" 12 ",{"fg":3}],["    wait(&status);                                                                                                                                 ",{}]],"19":[[" 11 ",{"fg":3}],["    printf(",{}],["\"",{"fg":2}],["\\n",{"fg":1,"bold":true}],["Parent proces sacekao izvrsenje child-a i sada zavrsava!",{"fg":2}],["\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[");                                                                        ",{}]],"20":[[" 10 ",{"fg":3}],["    ",{}],["return",{"fg":4,"bold":true}],[" ",{}],["0",{"fg":2}],[";                                                                                                                                      ",{}]],"21":[["  9 ",{"fg":3}],["  }                                                                                                                                                ",{}]],"22":[["  8 ",{"fg":3}],["  ",{}],["else",{"fg":4,"bold":true}],["                                                                                                                                             ",{}]],"23":[["  7 ",{"fg":3}],["  {                                                                                                                                                ",{}]],"24":[["  6 ",{"fg":3}],["    printf(",{}],["\"Sada se izvrsava child proces!",{"fg":2}],["\\n\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[");                                                                                                  ",{}]],"25":[["  5 ",{"fg":3}],["    ",{}],["/* int execvp (const char *file, char *const argv[]); */",{"fg":1}],["                                                                                       ",{}]],"26":[["  4 ",{"fg":3}],["    ",{}],["if",{"fg":4,"bold":true}],[" (execvp(argv[",{}],["1",{"fg":2}],["],&argv[",{}],["1",{"fg":2}],["]))                                                                                                                  ",{}]],"27":[["  3 ",{"fg":3}],["    {                                                                                                                                              ",{}]],"28":[["  2 ",{"fg":3}],["      printf(",{}],["\"Upozorenje: execvp greska.",{"fg":2}],["\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[");                                                                                                      ",{}]],"29":[["  1 ",{"fg":3}],["      ",{}],["return",{"fg":4,"bold":true}],[" ",{}],["1",{"fg":2}],[";                                                                                                                                    ",{}]],"30":[["  0 ",{"fg":3}],["    }                                                                                                                                              ",{}]],"31":[["  1 ",{"fg":3}],["    printf(",{}],["\"Ovo nikad nece biti ispisano!!",{"fg":2}],["\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[");                                                                                                    ",{}]],"32":[["  2 ",{"fg":3}],["  }                                                                                                                                                ",{}]],"33":[["  3 ",{"fg":3}],["}                                                                                                                                                  ",{}]],"39":[["\"primjer_2.c\" 34L, 883C                                                                                                              31,3          All ",{}]]},"cursor":{"y":30}}],[0.640398,{"lines":{"40":[["[0] 0:vim*Z                                                                                                    \"nermin-SATELLITE-C55-A\" 19:07 10-Okt-14",{"fg":0,"bg":2}]]}}],[1.520352,{"lines":{"0":[[" 30 ",{"fg":3}],["#include",{"fg":5}],["<stdio.h>",{"fg":2}],["                                                      │                                                                           ",{}]],"1":[[" 29 ",{"fg":3}],["#include",{"fg":5}],["<unistd.h>",{"fg":2}],["                                                     │                                                                           ",{}]],"2":[[" 28 ",{"fg":3}],["#include",{"fg":5}],["<sys/types.h>",{"fg":2}],["                                                  │                                                                           ",{}]],"3":[[" 27 ",{"fg":3}],["#include",{"fg":5}],["<sys/wait.h>",{"fg":2}],[" ",{}],["/* zaglavlje u kojem je deklarisana wait f-ja */",{"fg":1}],["  │                                                                           ",{}]],"4":[[" 26 ",{"fg":3}],["                                                                       │                                                                           ",{}]],"5":[[" 25 ",{"fg":3}],["int",{"fg":4,"bold":true}],[" main(",{}],["int",{"fg":4,"bold":true}],[" argc, ",{}],["char",{"fg":4,"bold":true}],[" *argv[])                                       │                                                                           ",{}]],"6":[[" 24 ",{"fg":3}],["{                                                                      │                                                                           ",{}]],"7":[[" 23 ",{"fg":3}],["  ",{}],["int",{"fg":4,"bold":true}],[" status;                                                          │                                                                           ",{}]],"8":[[" 22 ",{"fg":3}],["  ",{}],["/* U ovu varijablu se zapisuje status terminiranja child",{"fg":1}],["             │                                                                           ",{}]],"9":[[" 21 ",{"fg":3}],["   * procesa na cije se izvrsenje ceka uz pomoc wait fje */",{"fg":1}],["            │                                                                           ",{}]],"10":[[" 20 ",{"fg":3}],["  ",{}],["if",{"fg":4,"bold":true}],[" (argc < ",{}],["2",{"fg":2}],[")                                                        │                                                                           ",{}]],"11":[[" 19 ",{"fg":3}],["  {                                                                    │                                                                           ",{}]],"12":[[" 18 ",{"fg":3}],["    ",{}],["/* validan broj argumenata s komandne linije? */",{"fg":1}],["                   │                                                                           ",{}]],"13":[[" 17 ",{"fg":3}],["    fprintf (",{}],["stderr",{"fg":2}],[", ",{}],["\"Nacin koristenja: ",{"fg":2}],["%s",{"fg":1,"bold":true}],[" command arg1 arg2 ...",{"fg":2}],["\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[", ar│v[",{}],["0",{"fg":2}],["]);                                                                     ",{}]],"14":[[" 16 ",{"fg":3}],["    ",{}],["return",{"fg":4,"bold":true}],[" ",{}],["1",{"fg":2}],[";                                                          │                                                                           ",{}]],"15":[[" 15 ",{"fg":3}],["  }                                                                    │                                                                           ",{}]],"16":[[" 14 ",{"fg":3}],["  ",{}],["if",{"fg":4,"bold":true}],[" (fork())                                                          │                                                                           ",{}]],"17":[[" 13 ",{"fg":3}],["  {                                                                    │                                                                           ",{}]],"18":[[" 12 ",{"fg":3}],["    wait(&status);                                                     │                                                                           ",{}]],"19":[[" 11 ",{"fg":3}],["    printf(",{}],["\"",{"fg":2}],["\\n",{"fg":1,"bold":true}],["Parent proces sacekao izvrsenje child-a i sada zavrsava!",{"fg":2}],["\\",{"fg":1,"bold":true}],["│",{}],["\"",{"fg":2}],[");                                                                        ",{}]],"20":[[" 10 ",{"fg":3}],["    ",{}],["return",{"fg":4,"bold":true}],[" ",{}],["0",{"fg":2}],[";                                                          │                                                                           ",{}]],"21":[["  9 ",{"fg":3}],["  }                                                                    ",{}],["│",{"fg":2}],["                                                                           ",{}]],"22":[["  8 ",{"fg":3}],["  ",{}],["else",{"fg":4,"bold":true}],["                                                                 ",{}],["│",{"fg":2}],["                                                                           ",{}]],"23":[["  7 ",{"fg":3}],["  {                                                                    ",{}],["│",{"fg":2}],["                                                                           ",{}]],"24":[["  6 ",{"fg":3}],["    printf(",{}],["\"Sada se izvrsava child proces!",{"fg":2}],["\\n\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[");                      ",{}],["│",{"fg":2}],["                                                                           ",{}]],"25":[["  5 ",{"fg":3}],["    ",{}],["/* int execvp (const char *file, char *const argv[]); */",{"fg":1}],["           ",{}],["│",{"fg":2}],["                                                                           ",{}]],"26":[["  4 ",{"fg":3}],["    ",{}],["if",{"fg":4,"bold":true}],[" (execvp(argv[",{}],["1",{"fg":2}],["],&argv[",{}],["1",{"fg":2}],["]))                                      ",{}],["│",{"fg":2}],["                                                                           ",{}]],"27":[["  3 ",{"fg":3}],["    {                                                                  ",{}],["│",{"fg":2}],["                                                                           ",{}]],"28":[["  2 ",{"fg":3}],["      printf(",{}],["\"Upozorenje: execvp greska.",{"fg":2}],["\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[");                          ",{}],["│",{"fg":2}],["                                                                           ",{}]],"29":[["  1 ",{"fg":3}],["      ",{}],["return",{"fg":4,"bold":true}],[" ",{}],["1",{"fg":2}],[";                                                        ",{}],["│",{"fg":2}],["                                                                           ",{}]],"30":[["  0 ",{"fg":3}],["    }                                                                  ",{}],["│",{"fg":2}],["                                                                           ",{}]],"31":[["  1 ",{"fg":3}],["    printf(",{}],["\"Ovo nikad nece biti ispisano!!",{"fg":2}],["\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[");                        ",{}],["│",{"fg":2}],["                                                                           ",{}]],"32":[["  2 ",{"fg":3}],["  }                                                                    ",{}],["│",{"fg":2}],["                                                                           ",{}]],"33":[["  3 ",{"fg":3}],["}                                                                      ",{}],["│",{"fg":2}],["                                                                           ",{}]],"34":[["~                                                                          ",{"fg":4,"bold":true}],["│",{"fg":2}],["                                                                           ",{"fg":4,"bold":true}]],"35":[["~                                                                          ",{"fg":4,"bold":true}],["│",{"fg":2}],["                                                                           ",{"fg":4,"bold":true}]],"36":[["~                                                                          ",{"fg":4,"bold":true}],["│",{"fg":2}],["                                                                           ",{"fg":4,"bold":true}]],"37":[["~                                                                          ",{"fg":4,"bold":true}],["│",{"fg":2}],["                                                                           ",{"fg":4,"bold":true}]],"38":[["~                                                                          ",{"fg":4,"bold":true}],["│",{"fg":2}],["                                                                           ",{"fg":4,"bold":true}]],"39":[["\"primjer_2.c\" 34L, 883C                                                    ",{}],["│",{"fg":2}],["                                                         31,3          All ",{}]]},"cursor":{"x":33,"y":5,"visible":false}}],[0.008537999999999999,{"lines":{"0":[[" 30 ",{"fg":3}],["#include",{"fg":5}],["<stdio.h>",{"fg":2}],["                                                      │nermin > ls                                                                ",{}]],"1":[[" 29 ",{"fg":3}],["#include",{"fg":5}],["<unistd.h>",{"fg":2}],["                                                     │exec.c  primjer_1.c  primjer_2.c                                           ",{}]],"2":[[" 28 ",{"fg":3}],["#include",{"fg":5}],["<sys/types.h>",{"fg":2}],["                                                  │nermin > gcc -o primjer_1 primjer_1.c                                      ",{}]],"3":[[" 27 ",{"fg":3}],["#include",{"fg":5}],["<sys/wait.h>",{"fg":2}],[" ",{}],["/* zaglavlje u kojem je deklarisana wait f-ja */",{"fg":1}],["  │nermin > ls                                                                ",{}]],"4":[[" 26 ",{"fg":3}],["                                                                       │exec.c  ",{}],["primjer_1",{"fg":2,"bold":true}],["  primjer_1.c  primjer_2.c                                ",{}]],"5":[[" 25 ",{"fg":3}],["int",{"fg":4,"bold":true}],[" main(",{}],["int",{"fg":4,"bold":true}],[" argc, ",{}],["char",{"fg":4,"bold":true}],[" *argv[])                                       │nermin > ./primjer_1                                                       ",{}]],"6":[[" 24 ",{"fg":3}],["{                                                                      │Parent proces sa PID = 2752, ID = 2752                                     ",{}]],"7":[[" 23 ",{"fg":3}],["  ",{}],["int",{"fg":4,"bold":true}],[" status;                                                          │Child proces sa PID = 2753, ID = 2752                                      ",{}]],"8":[[" 22 ",{"fg":3}],["  ",{}],["/* U ovu varijablu se zapisuje status terminiranja child",{"fg":1}],["             │nermin >                                                                   ",{}]],"13":[[" 17 ",{"fg":3}],["    fprintf (",{}],["stderr",{"fg":2}],[", ",{}],["\"Nacin koristenja: ",{"fg":2}],["%s",{"fg":1,"bold":true}],[" command arg1 arg2 ...",{"fg":2}],["\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[", ar│                                                                           ",{}]],"14":[["    ",{"fg":3}],["gv[",{}],["0",{"fg":2}],["]);                                                                │                                                                           ",{}]],"15":[[" 16 ",{"fg":3}],["    ",{}],["return",{"fg":4,"bold":true}],[" ",{}],["1",{"fg":2}],[";                                                          │                                                                           ",{}]],"16":[[" 15 ",{"fg":3}],["  }                                                                    │                                                                           ",{}]],"17":[[" 14 ",{"fg":3}],["  ",{}],["if",{"fg":4,"bold":true}],[" (fork())                                                          │                                                                           ",{}]],"18":[[" 13 ",{"fg":3}],["  {                                                                    │                                                                           ",{}]],"19":[[" 12 ",{"fg":3}],["    wait(&status);                                                     │                                                                           ",{}]],"20":[[" 11 ",{"fg":3}],["    printf(",{}],["\"",{"fg":2}],["\\n",{"fg":1,"bold":true}],["Parent proces sacekao izvrsenje child-a i sada zavrsava!",{"fg":2}],["\\",{"fg":1,"bold":true}],["│                                                                           ",{}]],"21":[["    ",{"fg":3}],["n",{"fg":1,"bold":true}],["\"",{"fg":2}],[");                                                                   ",{}],["│",{"fg":2}],["                                                                           ",{}]],"22":[[" 10 ",{"fg":3}],["    ",{}],["return",{"fg":4,"bold":true}],[" ",{}],["0",{"fg":2}],[";                                                          ",{}],["│",{"fg":2}],["                                                                           ",{}]],"23":[["  9 ",{"fg":3}],["  }                                                                    ",{}],["│",{"fg":2}],["                                                                           ",{}]],"24":[["  8 ",{"fg":3}],["  ",{}],["else",{"fg":4,"bold":true}],["                                                                 ",{}],["│",{"fg":2}],["                                                                           ",{}]],"25":[["  7 ",{"fg":3}],["  {                                                                    ",{}],["│",{"fg":2}],["                                                                           ",{}]],"26":[["  6 ",{"fg":3}],["    printf(",{}],["\"Sada se izvrsava child proces!",{"fg":2}],["\\n\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[");                      ",{}],["│",{"fg":2}],["                                                                           ",{}]],"27":[["  5 ",{"fg":3}],["    ",{}],["/* int execvp (const char *file, char *const argv[]); */",{"fg":1}],["           ",{}],["│",{"fg":2}],["                                                                           ",{}]],"28":[["  4 ",{"fg":3}],["    ",{}],["if",{"fg":4,"bold":true}],[" (execvp(argv[",{}],["1",{"fg":2}],["],&argv[",{}],["1",{"fg":2}],["]))                                      ",{}],["│",{"fg":2}],["                                                                           ",{}]],"29":[["  3 ",{"fg":3}],["    {                                                                  ",{}],["│",{"fg":2}],["                                                                           ",{}]],"30":[["  2 ",{"fg":3}],["      printf(",{}],["\"Upozorenje: execvp greska.",{"fg":2}],["\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[");                          ",{}],["│",{"fg":2}],["                                                                           ",{}]],"31":[["  1 ",{"fg":3}],["      ",{}],["return",{"fg":4,"bold":true}],[" ",{}],["1",{"fg":2}],[";                                                        ",{}],["│",{"fg":2}],["                                                                           ",{}]],"32":[["  0 ",{"fg":3}],["    }                                                                  ",{}],["│",{"fg":2}],["                                                                           ",{}]],"33":[["  1 ",{"fg":3}],["    printf(",{}],["\"Ovo nikad nece biti ispisano!!",{"fg":2}],["\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[");                        ",{}],["│",{"fg":2}],["                                                                           ",{}]],"34":[["  2 ",{"fg":3}],["  }                                                                    ",{}],["│",{"fg":2}],["                                                                           ",{}]],"35":[["  3 ",{"fg":3}],["}                                                                      ",{}],["│",{"fg":2}],["                                                                           ",{}]],"36":[["~                                                                          ",{"fg":4,"bold":true}],["│",{"fg":2}],["                                                                           ",{}]],"37":[["~                                                                          ",{"fg":4,"bold":true}],["│",{"fg":2}],["                                                                           ",{}]],"38":[["~                                                                          ",{"fg":4,"bold":true}],["│",{"fg":2}],["                                                                           ",{}]],"39":[["                                                         31,3          All ",{}],["│",{"fg":2}],["                                                                           ",{}]],"40":[["[0] 0:vim*                                                                                                     \"nermin-SATELLITE-C55-A\" 19:07 10-Okt-14",{"fg":0,"bg":2}]]},"cursor":{"x":85,"y":8,"visible":true}}],[0.218848,{"lines":{"40":[["[0] 0:bash*                                                                                                    \"nermin-SATELLITE-C55-A\" 19:07 10-Okt-14",{"fg":0,"bg":2}]]}}],[2.501281,{"lines":{"0":[[" 30 ",{"fg":3}],["#include",{"fg":5}],["<stdio.h>",{"fg":2}],["                                                      │                                                                           ",{}]],"1":[[" 29 ",{"fg":3}],["#include",{"fg":5}],["<unistd.h>",{"fg":2}],["                                                     │                                                                           ",{}]],"2":[[" 28 ",{"fg":3}],["#include",{"fg":5}],["<sys/types.h>",{"fg":2}],["                                                  │                                                                           ",{}]],"3":[[" 27 ",{"fg":3}],["#include",{"fg":5}],["<sys/wait.h>",{"fg":2}],[" ",{}],["/* zaglavlje u kojem je deklarisana wait f-ja */",{"fg":1}],["  │                                                                           ",{}]],"4":[[" 26 ",{"fg":3}],["                                                                       │                                                                           ",{}]],"5":[[" 25 ",{"fg":3}],["int",{"fg":4,"bold":true}],[" main(",{}],["int",{"fg":4,"bold":true}],[" argc, ",{}],["char",{"fg":4,"bold":true}],[" *argv[])                                       │                                                                           ",{}]],"6":[[" 24 ",{"fg":3}],["{                                                                      │                                                                           ",{}]],"7":[[" 23 ",{"fg":3}],["  ",{}],["int",{"fg":4,"bold":true}],[" status;                                                          │                                                                           ",{}]],"8":[[" 22 ",{"fg":3}],["  ",{}],["/* U ovu varijablu se zapisuje status terminiranja child",{"fg":1}],["             │                                                                           ",{}]]},"cursor":{"x":97,"y":12}}],[0.000143,{"lines":{"0":[[" 30 ",{"fg":3}],["#include",{"fg":5}],["<stdio.h>",{"fg":2}],["                                                      │nermin >                                                                   ",{}]]},"cursor":{"x":85,"y":0}}],[1.299834,{"lines":{"0":[[" 30 ",{"fg":3}],["#include",{"fg":5}],["<stdio.h>",{"fg":2}],["                                                      │nermin > l                                                                 ",{}]]},"cursor":{"x":86}}],[0.18552,{"lines":{"0":[[" 30 ",{"fg":3}],["#include",{"fg":5}],["<stdio.h>",{"fg":2}],["                                                      │nermin > ls                                                                ",{}]]},"cursor":{"x":87}}],[0.209862,{"cursor":{"x":76,"y":1}}],[0.001082,{"lines":{"1":[[" 29 ",{"fg":3}],["#include",{"fg":5}],["<unistd.h>",{"fg":2}],["                                                     │exec.c  ",{}],["primjer_1",{"fg":2,"bold":true}],["  primjer_1.c  primjer_2.c                                ",{}]],"2":[[" 28 ",{"fg":3}],["#include",{"fg":5}],["<sys/types.h>",{"fg":2}],["                                                  │nermin >                                                                   ",{}]]},"cursor":{"x":85,"y":2}}],[0.740954,{"lines":{"2":[[" 28 ",{"fg":3}],["#include",{"fg":5}],["<sys/types.h>",{"fg":2}],["                                                  │nermin > g                                                                 ",{}]]},"cursor":{"x":86}}],[0.398738,{"lines":{"2":[[" 28 ",{"fg":3}],["#include",{"fg":5}],["<sys/types.h>",{"fg":2}],["                                                  │nermin > gc                                                                ",{}]]},"cursor":{"x":87}}],[0.197896,{"lines":{"2":[[" 28 ",{"fg":3}],["#include",{"fg":5}],["<sys/types.h>",{"fg":2}],["                                                  │nermin > gcc                                                               ",{}]]},"cursor":{"x":88}}],[0.36279,{"cursor":{"x":89}}],[0.335731,{"lines":{"2":[[" 28 ",{"fg":3}],["#include",{"fg":5}],["<sys/types.h>",{"fg":2}],["                                                  │nermin > gcc -                                                             ",{}]]},"cursor":{"x":90}}],[0.407431,{"lines":{"2":[[" 28 ",{"fg":3}],["#include",{"fg":5}],["<sys/types.h>",{"fg":2}],["                                                  │nermin > gcc -o                                                            ",{}]]},"cursor":{"x":91}}],[0.218586,{"cursor":{"x":92}}],[0.202023,{"lines":{"2":[[" 28 ",{"fg":3}],["#include",{"fg":5}],["<sys/types.h>",{"fg":2}],["                                                  │nermin > gcc -o p                                                          ",{}]]},"cursor":{"x":93}}],[0.270505,{"lines":{"2":[[" 28 ",{"fg":3}],["#include",{"fg":5}],["<sys/types.h>",{"fg":2}],["                                                  │nermin > gcc -o pr                                                         ",{}]]},"cursor":{"x":94}}],[0.175723,{"lines":{"2":[[" 28 ",{"fg":3}],["#include",{"fg":5}],["<sys/types.h>",{"fg":2}],["                                                  │nermin > gcc -o pri                                                        ",{}]]},"cursor":{"x":95}}],[0.345699,{"lines":{"2":[[" 28 ",{"fg":3}],["#include",{"fg":5}],["<sys/types.h>",{"fg":2}],["                                                  │nermin > gcc -o prim                                                       ",{}]]},"cursor":{"x":96}}],[0.273155,{"lines":{"2":[[" 28 ",{"fg":3}],["#include",{"fg":5}],["<sys/types.h>",{"fg":2}],["                                                  │nermin > gcc -o primj                                                      ",{}]]},"cursor":{"x":97}}],[0.186368,{"lines":{"2":[[" 28 ",{"fg":3}],["#include",{"fg":5}],["<sys/types.h>",{"fg":2}],["                                                  │nermin > gcc -o primje                                                     ",{}]]},"cursor":{"x":98}}],[0.173901,{"lines":{"2":[[" 28 ",{"fg":3}],["#include",{"fg":5}],["<sys/types.h>",{"fg":2}],["                                                  │nermin > gcc -o primjer                                                    ",{}]]},"cursor":{"x":99}}],[0.433752,{"lines":{"2":[[" 28 ",{"fg":3}],["#include",{"fg":5}],["<sys/types.h>",{"fg":2}],["                                                  │nermin > gcc -o primjer_                                                   ",{}]]},"cursor":{"x":100}}],[0.441419,{"lines":{"2":[[" 28 ",{"fg":3}],["#include",{"fg":5}],["<sys/types.h>",{"fg":2}],["                                                  │nermin > gcc -o primjer_2                                                  ",{}]]},"cursor":{"x":101}}],[0.241621,{"cursor":{"x":102}}],[0.353133,{"lines":{"2":[[" 28 ",{"fg":3}],["#include",{"fg":5}],["<sys/types.h>",{"fg":2}],["                                                  │nermin > gcc -o primjer_2 p                                                ",{}]]},"cursor":{"x":103}}],[0.36374,{"lines":{"2":[[" 28 ",{"fg":3}],["#include",{"fg":5}],["<sys/types.h>",{"fg":2}],["                                                  │nermin > gcc -o primjer_2 pr                                               ",{}]]},"cursor":{"x":104}}],[0.267023,{"lines":{"2":[[" 28 ",{"fg":3}],["#include",{"fg":5}],["<sys/types.h>",{"fg":2}],["                                                  │nermin > gcc -o primjer_2 primjer_                                         ",{}]]},"cursor":{"x":110}}],[0.423853,{"lines":{"2":[[" 28 ",{"fg":3}],["#include",{"fg":5}],["<sys/types.h>",{"fg":2}],["                                                  │nermin > gcc -o primjer_2 primjer_2                                        ",{}]]},"cursor":{"x":111}}],[0.22644,{"lines":{"2":[[" 28 ",{"fg":3}],["#include",{"fg":5}],["<sys/types.h>",{"fg":2}],["                                                  │nermin > gcc -o primjer_2 primjer_2.c                                      ",{}]]},"cursor":{"x":114}}],[2.01039,{"cursor":{"x":76,"y":3}}],[0.182536,{"lines":{"3":[[" 27 ",{"fg":3}],["#include",{"fg":5}],["<sys/wait.h>",{"fg":2}],[" ",{}],["/* zaglavlje u kojem je deklarisana wait f-ja */",{"fg":1}],["  │nermin >                                                                   ",{}]]},"cursor":{"x":85}}],[1.026442,{"lines":{"3":[[" 27 ",{"fg":3}],["#include",{"fg":5}],["<sys/wait.h>",{"fg":2}],[" ",{}],["/* zaglavlje u kojem je deklarisana wait f-ja */",{"fg":1}],["  │nermin > l                                                                 ",{}]]},"cursor":{"x":86}}],[0.224491,{"lines":{"3":[[" 27 ",{"fg":3}],["#include",{"fg":5}],["<sys/wait.h>",{"fg":2}],[" ",{}],["/* zaglavlje u kojem je deklarisana wait f-ja */",{"fg":1}],["  │nermin > ls                                                                ",{}]]},"cursor":{"x":87}}],[0.182564,{"cursor":{"x":76,"y":4}}],[0.003403,{"lines":{"4":[[" 26 ",{"fg":3}],["                                                                       │exec.c  ",{}],["primjer_1",{"fg":2,"bold":true}],["  primjer_1.c  ",{}],["primjer_2",{"fg":2,"bold":true}],["  primjer_2.c                     ",{}]],"5":[[" 25 ",{"fg":3}],["int",{"fg":4,"bold":true}],[" main(",{}],["int",{"fg":4,"bold":true}],[" argc, ",{}],["char",{"fg":4,"bold":true}],[" *argv[])                                       │nermin >                                                                   ",{}]]},"cursor":{"x":85,"y":5}}],[0.866462,{"lines":{"5":[[" 25 ",{"fg":3}],["int",{"fg":4,"bold":true}],[" main(",{}],["int",{"fg":4,"bold":true}],[" argc, ",{}],["char",{"fg":4,"bold":true}],[" *argv[])                                       │nermin > .                                                                 ",{}]]},"cursor":{"x":86}}],[0.257692,{"lines":{"5":[[" 25 ",{"fg":3}],["int",{"fg":4,"bold":true}],[" main(",{}],["int",{"fg":4,"bold":true}],[" argc, ",{}],["char",{"fg":4,"bold":true}],[" *argv[])                                       │nermin > ./                                                                ",{}]]},"cursor":{"x":87}}],[0.525995,{"lines":{"5":[[" 25 ",{"fg":3}],["int",{"fg":4,"bold":true}],[" main(",{}],["int",{"fg":4,"bold":true}],[" argc, ",{}],["char",{"fg":4,"bold":true}],[" *argv[])                                       │nermin > ./p                                                               ",{}]]},"cursor":{"x":88}}],[0.366358,{"lines":{"5":[[" 25 ",{"fg":3}],["int",{"fg":4,"bold":true}],[" main(",{}],["int",{"fg":4,"bold":true}],[" argc, ",{}],["char",{"fg":4,"bold":true}],[" *argv[])                                       │nermin > ./pr                                                              ",{}]]},"cursor":{"x":89}}],[0.135393,{"lines":{"5":[[" 25 ",{"fg":3}],["int",{"fg":4,"bold":true}],[" main(",{}],["int",{"fg":4,"bold":true}],[" argc, ",{}],["char",{"fg":4,"bold":true}],[" *argv[])                                       │nermin > ./pri                                                             ",{}]]},"cursor":{"x":90}}],[0.226431,{"lines":{"5":[[" 25 ",{"fg":3}],["int",{"fg":4,"bold":true}],[" main(",{}],["int",{"fg":4,"bold":true}],[" argc, ",{}],["char",{"fg":4,"bold":true}],[" *argv[])                                       │nermin > ./primjer_                                                        ",{}]]},"cursor":{"x":95}}],[0.817265,{"lines":{"5":[[" 25 ",{"fg":3}],["int",{"fg":4,"bold":true}],[" main(",{}],["int",{"fg":4,"bold":true}],[" argc, ",{}],["char",{"fg":4,"bold":true}],[" *argv[])                                       │nermin > ./primjer_2                                                       ",{}]]},"cursor":{"x":96}}],[1.428601,{"cursor":{"x":76,"y":6}}],[0.002051,{"lines":{"6":[[" 24 ",{"fg":3}],["{                                                                      │Nacin koristenja: ./primjer_2 command arg1 arg2 ...                        ",{}]],"7":[[" 23 ",{"fg":3}],["  ",{}],["int",{"fg":4,"bold":true}],[" status;                                                          │nermin >                                                                   ",{}]]},"cursor":{"x":85,"y":7}}],[1.935244,{"lines":{"0":[[" 30 ",{"fg":3}],["#include",{"fg":5}],["<stdio.h>",{"fg":2}],["                                                      ",{}],["│",{"fg":2}],["nermin > ls                                                                ",{}]],"1":[[" 29 ",{"fg":3}],["#include",{"fg":5}],["<unistd.h>",{"fg":2}],["                                                     ",{}],["│",{"fg":2}],["exec.c  ",{}],["primjer_1",{"fg":2,"bold":true}],["  primjer_1.c  primjer_2.c                                ",{}]],"2":[[" 28 ",{"fg":3}],["#include",{"fg":5}],["<sys/types.h>",{"fg":2}],["                                                  ",{}],["│",{"fg":2}],["nermin > gcc -o primjer_2 primjer_2.c                                      ",{}]],"3":[[" 27 ",{"fg":3}],["#include",{"fg":5}],["<sys/wait.h>",{"fg":2}],[" ",{}],["/* zaglavlje u kojem je deklarisana wait f-ja */",{"fg":1}],["  ",{}],["│",{"fg":2}],["nermin > ls                                                                ",{}]],"4":[[" 26 ",{"fg":3}],["                                                                       ",{}],["│",{"fg":2}],["exec.c  ",{}],["primjer_1",{"fg":2,"bold":true}],["  primjer_1.c  ",{}],["primjer_2",{"fg":2,"bold":true}],["  primjer_2.c                     ",{}]],"5":[[" 25 ",{"fg":3}],["int",{"fg":4,"bold":true}],[" main(",{}],["int",{"fg":4,"bold":true}],[" argc, ",{}],["char",{"fg":4,"bold":true}],[" *argv[])                                       ",{}],["│",{"fg":2}],["nermin > ./primjer_2                                                       ",{}]],"6":[[" 24 ",{"fg":3}],["{                                                                      ",{}],["│",{"fg":2}],["Nacin koristenja: ./primjer_2 command arg1 arg2 ...                        ",{}]],"7":[[" 23 ",{"fg":3}],["  ",{}],["int",{"fg":4,"bold":true}],[" status;                                                          ",{}],["│",{"fg":2}],["nermin >                                                                   ",{}]],"8":[[" 22 ",{"fg":3}],["  ",{}],["/* U ovu varijablu se zapisuje status terminiranja child",{"fg":1}],["             ",{}],["│",{"fg":2}],["                                                                           ",{}]],"9":[[" 21 ",{"fg":3}],["   * procesa na cije se izvrsenje ceka uz pomoc wait fje */",{"fg":1}],["            ",{}],["│",{"fg":2}],["                                                                           ",{}]],"10":[[" 20 ",{"fg":3}],["  ",{}],["if",{"fg":4,"bold":true}],[" (argc < ",{}],["2",{"fg":2}],[")                                                        ",{}],["│",{"fg":2}],["                                                                           ",{}]],"11":[[" 19 ",{"fg":3}],["  {                                                                    ",{}],["│",{"fg":2}],["                                                                           ",{}]],"12":[[" 18 ",{"fg":3}],["    ",{}],["/* validan broj argumenata s komandne linije? */",{"fg":1}],["                   ",{}],["│",{"fg":2}],["                                                                           ",{}]],"13":[[" 17 ",{"fg":3}],["    fprintf (",{}],["stderr",{"fg":2}],[", ",{}],["\"Nacin koristenja: ",{"fg":2}],["%s",{"fg":1,"bold":true}],[" command arg1 arg2 ...",{"fg":2}],["\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[", ar",{}],["│",{"fg":2}],["                                                                           ",{}]],"14":[["    ",{"fg":3}],["gv[",{}],["0",{"fg":2}],["]);                                                                ",{}],["│",{"fg":2}],["                                                                           ",{}]],"15":[[" 16 ",{"fg":3}],["    ",{}],["return",{"fg":4,"bold":true}],[" ",{}],["1",{"fg":2}],[";                                                          ",{}],["│",{"fg":2}],["                                                                           ",{}]],"16":[[" 15 ",{"fg":3}],["  }                                                                    ",{}],["│",{"fg":2}],["                                                                           ",{}]],"17":[[" 14 ",{"fg":3}],["  ",{}],["if",{"fg":4,"bold":true}],[" (fork())                                                          ",{}],["│",{"fg":2}],["                                                                           ",{}]],"18":[[" 13 ",{"fg":3}],["  {                                                                    ",{}],["│",{"fg":2}],["                                                                           ",{}]],"19":[[" 12 ",{"fg":3}],["    wait(&status);                                                     ",{}],["│",{"fg":2}],["                                                                           ",{}]],"20":[[" 11 ",{"fg":3}],["    printf(",{}],["\"",{"fg":2}],["\\n",{"fg":1,"bold":true}],["Parent proces sacekao izvrsenje child-a i sada zavrsava!",{"fg":2}],["\\",{"fg":1,"bold":true}],["│",{"fg":2}],["                                                                           ",{}]],"21":[["    ",{"fg":3}],["n",{"fg":1,"bold":true}],["\"",{"fg":2}],[");                                                                   │                                                                           ",{}]],"22":[[" 10 ",{"fg":3}],["    ",{}],["return",{"fg":4,"bold":true}],[" ",{}],["0",{"fg":2}],[";                                                          │                                                                           ",{}]],"23":[["  9 ",{"fg":3}],["  }                                                                    │                                                                           ",{}]],"24":[["  8 ",{"fg":3}],["  ",{}],["else",{"fg":4,"bold":true}],["                                                                 │                                                                           ",{}]],"25":[["  7 ",{"fg":3}],["  {                                                                    │                                                                           ",{}]],"26":[["  6 ",{"fg":3}],["    printf(",{}],["\"Sada se izvrsava child proces!",{"fg":2}],["\\n\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[");                      │                                                                           ",{}]],"27":[["  5 ",{"fg":3}],["    ",{}],["/* int execvp (const char *file, char *const argv[]); */",{"fg":1}],["           │                                                                           ",{}]],"28":[["  4 ",{"fg":3}],["    ",{}],["if",{"fg":4,"bold":true}],[" (execvp(argv[",{}],["1",{"fg":2}],["],&argv[",{}],["1",{"fg":2}],["]))                                      │                                                                           ",{}]],"29":[["  3 ",{"fg":3}],["    {                                                                  │                                                                           ",{}]],"30":[["  2 ",{"fg":3}],["      printf(",{}],["\"Upozorenje: execvp greska.",{"fg":2}],["\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[");                          │                                                                           ",{}]],"31":[["  1 ",{"fg":3}],["      ",{}],["return",{"fg":4,"bold":true}],[" ",{}],["1",{"fg":2}],[";                                                        │                                                                           ",{}]],"32":[["  0 ",{"fg":3}],["    }                                                                  │                                                                           ",{}]],"33":[["  1 ",{"fg":3}],["    printf(",{}],["\"Ovo nikad nece biti ispisano!!",{"fg":2}],["\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[");                        │                                                                           ",{}]],"34":[["  2 ",{"fg":3}],["  }                                                                    │                                                                           ",{}]],"35":[["  3 ",{"fg":3}],["}                                                                      │                                                                           ",{}]],"36":[["~                                                                          ",{"fg":4,"bold":true}],["│                                                                           ",{}]],"37":[["~                                                                          ",{"fg":4,"bold":true}],["│                                                                           ",{}]],"38":[["~                                                                          ",{"fg":4,"bold":true}],["│                                                                           ",{}]],"39":[["                                                         31,3          All │                                                                           ",{}]]},"cursor":{"x":28,"y":5,"visible":false}}],[0.000287,{"cursor":{"x":6,"y":32,"visible":true}}],[0.108801,{"lines":{"40":[["[0] 0:vim*                                                                                                     \"nermin-SATELLITE-C55-A\" 19:07 10-Okt-14",{"fg":0,"bg":2}]]}}],[3.474304,{"lines":{"0":[[" 11 ",{"fg":3}],["#include",{"fg":5}],["<stdio.h>",{"fg":2}],["                                                      ",{}],["│",{"fg":2}],["nermin > ls                                                                ",{}]],"1":[[" 10 ",{"fg":3}],["#include",{"fg":5}],["<unistd.h>",{"fg":2}],["                                                     ",{}],["│",{"fg":2}],["exec.c  ",{}],["primjer_1",{"fg":2,"bold":true}],["  primjer_1.c  primjer_2.c                                ",{}]],"2":[["  9 ",{"fg":3}],["#include",{"fg":5}],["<sys/types.h>",{"fg":2}],["                                                  ",{}],["│",{"fg":2}],["nermin > gcc -o primjer_2 primjer_2.c                                      ",{}]],"3":[["  8 ",{"fg":3}],["#include",{"fg":5}],["<sys/wait.h>",{"fg":2}],[" ",{}],["/* zaglavlje u kojem je deklarisana wait f-ja */",{"fg":1}],["  ",{}],["│",{"fg":2}],["nermin > ls                                                                ",{}]],"4":[["  7 ",{"fg":3}],["                                                                       ",{}],["│",{"fg":2}],["exec.c  ",{}],["primjer_1",{"fg":2,"bold":true}],["  primjer_1.c  ",{}],["primjer_2",{"fg":2,"bold":true}],["  primjer_2.c                     ",{}]],"5":[["  6 ",{"fg":3}],["int",{"fg":4,"bold":true}],[" main(",{}],["int",{"fg":4,"bold":true}],[" argc, ",{}],["char",{"fg":4,"bold":true}],[" *argv[])                                       ",{}],["│",{"fg":2}],["nermin > ./primjer_2                                                       ",{}]],"6":[["  5 ",{"fg":3}],["{                                                                      ",{}],["│",{"fg":2}],["Nacin koristenja: ./primjer_2 command arg1 arg2 ...                        ",{}]],"7":[["  4 ",{"fg":3}],["  ",{}],["int",{"fg":4,"bold":true}],[" status;                                                          ",{}],["│",{"fg":2}],["nermin >                                                                   ",{}]],"8":[["  3 ",{"fg":3}],["  ",{}],["/* U ovu varijablu se zapisuje status terminiranja child",{"fg":1}],["             ",{}],["│",{"fg":2}],["                                                                           ",{}]],"9":[["  2 ",{"fg":3}],["   * procesa na cije se izvrsenje ceka uz pomoc wait fje */",{"fg":1}],["            ",{}],["│",{"fg":2}],["                                                                           ",{}]],"10":[["  1 ",{"fg":3}],["  ",{}],["if",{"fg":4,"bold":true}],[" (argc < ",{}],["2",{"fg":2}],[")                                                        ",{}],["│",{"fg":2}],["                                                                           ",{}]],"11":[["  0 ",{"fg":3}],["  ",{}],["{",{"bg":6}],["                                                                    ",{}],["│",{"fg":2}],["                                                                           ",{}]],"12":[["  1 ",{"fg":3}],["    ",{}],["/* validan broj argumenata s komandne linije? */",{"fg":1}],["                   ",{}],["│",{"fg":2}],["                                                                           ",{}]],"13":[["  2 ",{"fg":3}],["    fprintf (",{}],["stderr",{"fg":2}],[", ",{}],["\"Nacin koristenja: ",{"fg":2}],["%s",{"fg":1,"bold":true}],[" command arg1 arg2 ...",{"fg":2}],["\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[", ar",{}],["│",{"fg":2}],["                                                                           ",{}]],"15":[["  3 ",{"fg":3}],["    ",{}],["return",{"fg":4,"bold":true}],[" ",{}],["1",{"fg":2}],[";                                                          ",{}],["│",{"fg":2}],["                                                                           ",{}]],"16":[["  4 ",{"fg":3}],["  ",{}],["}",{"bg":6}],["                                                                    ",{}],["│",{"fg":2}],["                                                                           ",{}]],"17":[["  5 ",{"fg":3}],["  ",{}],["if",{"fg":4,"bold":true}],[" (fork())                                                          ",{}],["│",{"fg":2}],["                                                                           ",{}]],"18":[["  6 ",{"fg":3}],["  {                                                                    ",{}],["│",{"fg":2}],["                                                                           ",{}]],"19":[["  7 ",{"fg":3}],["    wait(&status);                                                     ",{}],["│",{"fg":2}],["                                                                           ",{}]],"20":[["  8 ",{"fg":3}],["    printf(",{}],["\"",{"fg":2}],["\\n",{"fg":1,"bold":true}],["Parent proces sacekao izvrsenje child-a i sada zavrsava!",{"fg":2}],["\\",{"fg":1,"bold":true}],["│",{"fg":2}],["                                                                           ",{}]],"22":[["  9 ",{"fg":3}],["    ",{}],["return",{"fg":4,"bold":true}],[" ",{}],["0",{"fg":2}],[";                                                          │                                                                           ",{}]],"23":[[" 10 ",{"fg":3}],["  }                                                                    │                                                                           ",{}]],"24":[[" 11 ",{"fg":3}],["  ",{}],["else",{"fg":4,"bold":true}],["                                                                 │                                                                           ",{}]],"25":[[" 12 ",{"fg":3}],["  {                                                                    │                                                                           ",{}]],"26":[[" 13 ",{"fg":3}],["    printf(",{}],["\"Sada se izvrsava child proces!",{"fg":2}],["\\n\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[");                      │                                                                           ",{}]],"27":[[" 14 ",{"fg":3}],["    ",{}],["/* int execvp (const char *file, char *const argv[]); */",{"fg":1}],["           │                                                                           ",{}]],"28":[[" 15 ",{"fg":3}],["    ",{}],["if",{"fg":4,"bold":true}],[" (execvp(argv[",{}],["1",{"fg":2}],["],&argv[",{}],["1",{"fg":2}],["]))                                      │                                                                           ",{}]],"29":[[" 16 ",{"fg":3}],["    {                                                                  │                                                                           ",{}]],"30":[[" 17 ",{"fg":3}],["      printf(",{}],["\"Upozorenje: execvp greska.",{"fg":2}],["\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[");                          │                                                                           ",{}]],"31":[[" 18 ",{"fg":3}],["      ",{}],["return",{"fg":4,"bold":true}],[" ",{}],["1",{"fg":2}],[";                                                        │                                                                           ",{}]],"32":[[" 19 ",{"fg":3}],["    }                                                                  │                                                                           ",{}]],"33":[[" 20 ",{"fg":3}],["    printf(",{}],["\"Ovo nikad nece biti ispisano!!",{"fg":2}],["\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[");                        │                                                                           ",{}]],"34":[[" 21 ",{"fg":3}],["  }                                                                    │                                                                           ",{}]],"35":[[" 22 ",{"fg":3}],["}                                                                      │                                                                           ",{}]],"39":[["                                                         12,3          All │                                                                           ",{}]]},"cursor":{"y":11}}],[1.466434,{"lines":{"11":[["  0 ",{"fg":3}],["  ",{"inverse":true}],["{",{"bg":6}],[" ",{"inverse":true}],["                                                                   ",{}],["│",{"fg":2}],["                                                                           ",{}]],"39":[["-- VISUAL LINE --",{"bold":true}],["                                        12,3          All │                                                                           ",{}]]}}],[0.344201,{"lines":{"0":[[" 12 ",{"fg":3}],["#include",{"fg":5}],["<stdio.h>",{"fg":2}],["                                                      ",{}],["│",{"fg":2}],["nermin > ls                                                                ",{}]],"1":[[" 11 ",{"fg":3}],["#include",{"fg":5}],["<unistd.h>",{"fg":2}],["                                                     ",{}],["│",{"fg":2}],["exec.c  ",{}],["primjer_1",{"fg":2,"bold":true}],["  primjer_1.c  primjer_2.c                                ",{}]],"2":[[" 10 ",{"fg":3}],["#include",{"fg":5}],["<sys/types.h>",{"fg":2}],["                                                  ",{}],["│",{"fg":2}],["nermin > gcc -o primjer_2 primjer_2.c                                      ",{}]],"3":[["  9 ",{"fg":3}],["#include",{"fg":5}],["<sys/wait.h>",{"fg":2}],[" ",{}],["/* zaglavlje u kojem je deklarisana wait f-ja */",{"fg":1}],["  ",{}],["│",{"fg":2}],["nermin > ls                                                                ",{}]],"4":[["  8 ",{"fg":3}],["                                                                       ",{}],["│",{"fg":2}],["exec.c  ",{}],["primjer_1",{"fg":2,"bold":true}],["  primjer_1.c  ",{}],["primjer_2",{"fg":2,"bold":true}],["  primjer_2.c                     ",{}]],"5":[["  7 ",{"fg":3}],["int",{"fg":4,"bold":true}],[" main(",{}],["int",{"fg":4,"bold":true}],[" argc, ",{}],["char",{"fg":4,"bold":true}],[" *argv[])                                       ",{}],["│",{"fg":2}],["nermin > ./primjer_2                                                       ",{}]],"6":[["  6 ",{"fg":3}],["{                                                                      ",{}],["│",{"fg":2}],["Nacin koristenja: ./primjer_2 command arg1 arg2 ...                        ",{}]],"7":[["  5 ",{"fg":3}],["  ",{}],["int",{"fg":4,"bold":true}],[" status;                                                          ",{}],["│",{"fg":2}],["nermin >                                                                   ",{}]],"8":[["  4 ",{"fg":3}],["  ",{}],["/* U ovu varijablu se zapisuje status terminiranja child",{"fg":1}],["             ",{}],["│",{"fg":2}],["                                                                           ",{}]],"9":[["  3 ",{"fg":3}],["   * procesa na cije se izvrsenje ceka uz pomoc wait fje */",{"fg":1}],["            ",{}],["│",{"fg":2}],["                                                                           ",{}]],"10":[["  2 ",{"fg":3}],["  ",{}],["if",{"fg":4,"bold":true}],[" (argc < ",{}],["2",{"fg":2}],[")                                                        ",{}],["│",{"fg":2}],["                                                                           ",{}]],"11":[["  1 ",{"fg":3}],["  { ",{"inverse":true}],["                                                                   ",{}],["│",{"fg":2}],["                                                                           ",{}]],"12":[["  0 ",{"fg":3}],["  ",{"inverse":true}],[" ",{}],[" ",{"inverse":true}],["/* validan broj argumenata s komandne linije? */",{"fg":1,"inverse":true}],[" ",{"inverse":true}],["                  ",{}],["│",{"fg":2}],["                                                                           ",{}]],"13":[["  1 ",{"fg":3}],["    fprintf (",{}],["stderr",{"fg":2}],[", ",{}],["\"Nacin koristenja: ",{"fg":2}],["%s",{"fg":1,"bold":true}],[" command arg1 arg2 ...",{"fg":2}],["\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[", ar",{}],["│",{"fg":2}],["                                                                           ",{}]],"15":[["  2 ",{"fg":3}],["    ",{}],["return",{"fg":4,"bold":true}],[" ",{}],["1",{"fg":2}],[";                                                          ",{}],["│",{"fg":2}],["                                                                           ",{}]],"16":[["  3 ",{"fg":3}],["  }                                                                    ",{}],["│",{"fg":2}],["                                                                           ",{}]],"17":[["  4 ",{"fg":3}],["  ",{}],["if",{"fg":4,"bold":true}],[" (fork())                                                          ",{}],["│",{"fg":2}],["                                                                           ",{}]],"18":[["  5 ",{"fg":3}],["  {                                                                    ",{}],["│",{"fg":2}],["                                                                           ",{}]],"19":[["  6 ",{"fg":3}],["    wait(&status);                                                     ",{}],["│",{"fg":2}],["                                                                           ",{}]],"20":[["  7 ",{"fg":3}],["    printf(",{}],["\"",{"fg":2}],["\\n",{"fg":1,"bold":true}],["Parent proces sacekao izvrsenje child-a i sada zavrsava!",{"fg":2}],["\\",{"fg":1,"bold":true}],["│",{"fg":2}],["                                                                           ",{}]],"22":[["  8 ",{"fg":3}],["    ",{}],["return",{"fg":4,"bold":true}],[" ",{}],["0",{"fg":2}],[";                                                          │                                                                           ",{}]],"23":[["  9 ",{"fg":3}],["  }                                                                    │                                                                           ",{}]],"24":[[" 10 ",{"fg":3}],["  ",{}],["else",{"fg":4,"bold":true}],["                                                                 │                                                                           ",{}]],"25":[[" 11 ",{"fg":3}],["  {                                                                    │                                                                           ",{}]],"26":[[" 12 ",{"fg":3}],["    printf(",{}],["\"Sada se izvrsava child proces!",{"fg":2}],["\\n\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[");                      │                                                                           ",{}]],"27":[[" 13 ",{"fg":3}],["    ",{}],["/* int execvp (const char *file, char *const argv[]); */",{"fg":1}],["           │                                                                           ",{}]],"28":[[" 14 ",{"fg":3}],["    ",{}],["if",{"fg":4,"bold":true}],[" (execvp(argv[",{}],["1",{"fg":2}],["],&argv[",{}],["1",{"fg":2}],["]))                                      │                                                                           ",{}]],"29":[[" 15 ",{"fg":3}],["    {                                                                  │                                                                           ",{}]],"30":[[" 16 ",{"fg":3}],["      printf(",{}],["\"Upozorenje: execvp greska.",{"fg":2}],["\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[");                          │                                                                           ",{}]]},"cursor":{"y":12}}],[0.004543,{"lines":{"31":[[" 17 ",{"fg":3}],["      ",{}],["return",{"fg":4,"bold":true}],[" ",{}],["1",{"fg":2}],[";                                                        │                                                                           ",{}]],"32":[[" 18 ",{"fg":3}],["    }                                                                  │                                                                           ",{}]],"33":[[" 19 ",{"fg":3}],["    printf(",{}],["\"Ovo nikad nece biti ispisano!!",{"fg":2}],["\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[");                        │                                                                           ",{}]],"34":[[" 20 ",{"fg":3}],["  }                                                                    │                                                                           ",{}]],"35":[[" 21 ",{"fg":3}],["}                                                                      │                                                                           ",{}]],"39":[["-- VISUAL LINE --",{"bold":true}],["                                        13,3          All │                                                                           ",{}]]}}],[0.215521,{"lines":{"0":[[" 13 ",{"fg":3}],["#include",{"fg":5}],["<stdio.h>",{"fg":2}],["                                                      ",{}],["│",{"fg":2}],["nermin > ls                                                                ",{}]],"1":[[" 12 ",{"fg":3}],["#include",{"fg":5}],["<unistd.h>",{"fg":2}],["                                                     ",{}],["│",{"fg":2}],["exec.c  ",{}],["primjer_1",{"fg":2,"bold":true}],["  primjer_1.c  primjer_2.c                                ",{}]],"2":[[" 11 ",{"fg":3}],["#include",{"fg":5}],["<sys/types.h>",{"fg":2}],["                                                  ",{}],["│",{"fg":2}],["nermin > gcc -o primjer_2 primjer_2.c                                      ",{}]],"3":[[" 10 ",{"fg":3}],["#include",{"fg":5}],["<sys/wait.h>",{"fg":2}],[" ",{}],["/* zaglavlje u kojem je deklarisana wait f-ja */",{"fg":1}],["  ",{}],["│",{"fg":2}],["nermin > ls                                                                ",{}]],"4":[["  9 ",{"fg":3}],["                                                                       ",{}],["│",{"fg":2}],["exec.c  ",{}],["primjer_1",{"fg":2,"bold":true}],["  primjer_1.c  ",{}],["primjer_2",{"fg":2,"bold":true}],["  primjer_2.c                     ",{}]],"5":[["  8 ",{"fg":3}],["int",{"fg":4,"bold":true}],[" main(",{}],["int",{"fg":4,"bold":true}],[" argc, ",{}],["char",{"fg":4,"bold":true}],[" *argv[])                                       ",{}],["│",{"fg":2}],["nermin > ./primjer_2                                                       ",{}]],"6":[["  7 ",{"fg":3}],["{                                                                      ",{}],["│",{"fg":2}],["Nacin koristenja: ./primjer_2 command arg1 arg2 ...                        ",{}]],"7":[["  6 ",{"fg":3}],["  ",{}],["int",{"fg":4,"bold":true}],[" status;                                                          ",{}],["│",{"fg":2}],["nermin >                                                                   ",{}]],"8":[["  5 ",{"fg":3}],["  ",{}],["/* U ovu varijablu se zapisuje status terminiranja child",{"fg":1}],["             ",{}],["│",{"fg":2}],["                                                                           ",{}]],"9":[["  4 ",{"fg":3}],["   * procesa na cije se izvrsenje ceka uz pomoc wait fje */",{"fg":1}],["            ",{}],["│",{"fg":2}],["                                                                           ",{}]],"10":[["  3 ",{"fg":3}],["  ",{}],["if",{"fg":4,"bold":true}],[" (argc < ",{}],["2",{"fg":2}],[")                                                        ",{}],["│",{"fg":2}],["                                                                           ",{}]],"11":[["  2 ",{"fg":3}],["  { ",{"inverse":true}],["                                                                   ",{}],["│",{"fg":2}],["                                                                           ",{}]],"12":[["  1 ",{"fg":3}],["    ",{"inverse":true}],["/* validan broj argumenata s komandne linije? */",{"fg":1,"inverse":true}],[" ",{"inverse":true}],["                  ",{}],["│",{"fg":2}],["                                                                           ",{}]],"13":[["  0 ",{"fg":3}],["  ",{"inverse":true}],[" ",{}],[" fprintf (",{"inverse":true}],["stderr",{"fg":2,"inverse":true}],[", ",{"inverse":true}],["\"Nacin koristenja: ",{"fg":2,"inverse":true}],["%s",{"fg":1,"bold":true,"inverse":true}],[" command arg1 arg2 ...",{"fg":2,"inverse":true}],["\\n",{"fg":1,"bold":true,"inverse":true}],["\"",{"fg":2,"inverse":true}],[", ar",{"inverse":true}],["│",{"fg":2}],["                                                                           ",{}]],"14":[["    ",{"fg":3}],["gv[",{"inverse":true}],["0",{"fg":2,"inverse":true}],["]); ",{"inverse":true}],["                                                               ",{}],["│",{"fg":2}],["                                                                           ",{}]],"15":[["  1 ",{"fg":3}],["    ",{}],["return",{"fg":4,"bold":true}],[" ",{}],["1",{"fg":2}],[";                                                          ",{}],["│",{"fg":2}],["                                                                           ",{}]],"16":[["  2 ",{"fg":3}],["  }                                                                    ",{}],["│",{"fg":2}],["                                                                           ",{}]],"17":[["  3 ",{"fg":3}],["  ",{}],["if",{"fg":4,"bold":true}],[" (fork())                                                          ",{}],["│",{"fg":2}],["                                                                           ",{}]],"18":[["  4 ",{"fg":3}],["  {                                                                    ",{}],["│",{"fg":2}],["                                                                           ",{}]],"19":[["  5 ",{"fg":3}],["    wait(&status);                                                     ",{}],["│",{"fg":2}],["                                                                           ",{}]],"20":[["  6 ",{"fg":3}],["    printf(",{}],["\"",{"fg":2}],["\\n",{"fg":1,"bold":true}],["Parent proces sacekao izvrsenje child-a i sada zavrsava!",{"fg":2}],["\\",{"fg":1,"bold":true}],["│",{"fg":2}],["                                                                           ",{}]],"22":[["  7 ",{"fg":3}],["    ",{}],["return",{"fg":4,"bold":true}],[" ",{}],["0",{"fg":2}],[";                                                          │                                                                           ",{}]],"23":[["  8 ",{"fg":3}],["  }                                                                    │                                                                           ",{}]],"24":[["  9 ",{"fg":3}],["  ",{}],["else",{"fg":4,"bold":true}],["                                                                 │                                                                           ",{}]],"25":[[" 10 ",{"fg":3}],["  {                                                                    │                                                                           ",{}]],"26":[[" 11 ",{"fg":3}],["    printf(",{}],["\"Sada se izvrsava child proces!",{"fg":2}],["\\n\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[");                      │                                                                           ",{}]],"27":[[" 12 ",{"fg":3}],["    ",{}],["/* int execvp (const char *file, char *const argv[]); */",{"fg":1}],["           │                                                                           ",{}]],"28":[[" 13 ",{"fg":3}],["    ",{}],["if",{"fg":4,"bold":true}],[" (execvp(argv[",{}],["1",{"fg":2}],["],&argv[",{}],["1",{"fg":2}],["]))                                      │                                                                           ",{}]],"29":[[" 14 ",{"fg":3}],["    {                                                                  │                                                                           ",{}]],"30":[[" 15 ",{"fg":3}],["      printf(",{}],["\"Upozorenje: execvp greska.",{"fg":2}],["\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[");                          │                                                                           ",{}]],"31":[[" 16 ",{"fg":3}],["      ",{}],["return",{"fg":4,"bold":true}],[" ",{}],["1",{"fg":2}],[";                                                        │                                                                           ",{}]],"32":[[" 17 ",{"fg":3}],["    }                                                                  │                                                                           ",{}]],"33":[[" 18 ",{"fg":3}],["    printf(",{}],["\"Ovo nikad nece biti ispisano!!",{"fg":2}],["\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[");                        │                                                                           ",{}]],"34":[[" 19 ",{"fg":3}],["  }                                                                    │                                                                           ",{}]],"35":[[" 20 ",{"fg":3}],["}                                                                      │                                                                           ",{}]],"39":[["-- VISUAL LINE --",{"bold":true}],["                                        14,3          All │                                                                           ",{}]]},"cursor":{"y":13}}],[0.358587,{"lines":{"0":[[" 14 ",{"fg":3}],["#include",{"fg":5}],["<stdio.h>",{"fg":2}],["                                                      ",{}],["│",{"fg":2}],["nermin > ls                                                                ",{}]],"1":[[" 13 ",{"fg":3}],["#include",{"fg":5}],["<unistd.h>",{"fg":2}],["                                                     ",{}],["│",{"fg":2}],["exec.c  ",{}],["primjer_1",{"fg":2,"bold":true}],["  primjer_1.c  primjer_2.c                                ",{}]],"2":[[" 12 ",{"fg":3}],["#include",{"fg":5}],["<sys/types.h>",{"fg":2}],["                                                  ",{}],["│",{"fg":2}],["nermin > gcc -o primjer_2 primjer_2.c                                      ",{}]],"3":[[" 11 ",{"fg":3}],["#include",{"fg":5}],["<sys/wait.h>",{"fg":2}],[" ",{}],["/* zaglavlje u kojem je deklarisana wait f-ja */",{"fg":1}],["  ",{}],["│",{"fg":2}],["nermin > ls                                                                ",{}]],"4":[[" 10 ",{"fg":3}],["                                                                       ",{}],["│",{"fg":2}],["exec.c  ",{}],["primjer_1",{"fg":2,"bold":true}],["  primjer_1.c  ",{}],["primjer_2",{"fg":2,"bold":true}],["  primjer_2.c                     ",{}]],"5":[["  9 ",{"fg":3}],["int",{"fg":4,"bold":true}],[" main(",{}],["int",{"fg":4,"bold":true}],[" argc, ",{}],["char",{"fg":4,"bold":true}],[" *argv[])                                       ",{}],["│",{"fg":2}],["nermin > ./primjer_2                                                       ",{}]],"6":[["  8 ",{"fg":3}],["{                                                                      ",{}],["│",{"fg":2}],["Nacin koristenja: ./primjer_2 command arg1 arg2 ...                        ",{}]],"7":[["  7 ",{"fg":3}],["  ",{}],["int",{"fg":4,"bold":true}],[" status;                                                          ",{}],["│",{"fg":2}],["nermin >                                                                   ",{}]],"8":[["  6 ",{"fg":3}],["  ",{}],["/* U ovu varijablu se zapisuje status terminiranja child",{"fg":1}],["             ",{}],["│",{"fg":2}],["                                                                           ",{}]],"9":[["  5 ",{"fg":3}],["   * procesa na cije se izvrsenje ceka uz pomoc wait fje */",{"fg":1}],["            ",{}],["│",{"fg":2}],["                                                                           ",{}]],"10":[["  4 ",{"fg":3}],["  ",{}],["if",{"fg":4,"bold":true}],[" (argc < ",{}],["2",{"fg":2}],[")                                                        ",{}],["│",{"fg":2}],["                                                                           ",{}]],"11":[["  3 ",{"fg":3}],["  { ",{"inverse":true}],["                                                                   ",{}],["│",{"fg":2}],["                                                                           ",{}]],"12":[["  2 ",{"fg":3}],["    ",{"inverse":true}],["/* validan broj argumenata s komandne linije? */",{"fg":1,"inverse":true}],[" ",{"inverse":true}],["                  ",{}],["│",{"fg":2}],["                                                                           ",{}]],"13":[["  1 ",{"fg":3}],["    fprintf (",{"inverse":true}],["stderr",{"fg":2,"inverse":true}],[", ",{"inverse":true}],["\"Nacin koristenja: ",{"fg":2,"inverse":true}],["%s",{"fg":1,"bold":true,"inverse":true}],[" command arg1 arg2 ...",{"fg":2,"inverse":true}],["\\n",{"fg":1,"bold":true,"inverse":true}],["\"",{"fg":2,"inverse":true}],[", ar",{"inverse":true}],["│",{"fg":2}],["                                                                           ",{}]],"15":[["  0 ",{"fg":3}],["  ",{"inverse":true}],[" ",{}],[" ",{"inverse":true}],["return",{"fg":4,"bold":true,"inverse":true}],[" ",{"inverse":true}],["1",{"fg":2,"inverse":true}],["; ",{"inverse":true}],["                                                         ",{}],["│",{"fg":2}],["                                                                           ",{}]],"16":[["  1 ",{"fg":3}],["  }                                                                    ",{}],["│",{"fg":2}],["                                                                           ",{}]],"17":[["  2 ",{"fg":3}],["  ",{}],["if",{"fg":4,"bold":true}],[" (fork())                                                          ",{}],["│",{"fg":2}],["                                                                           ",{}]],"18":[["  3 ",{"fg":3}],["  {                                                                    ",{}],["│",{"fg":2}],["                                                                           ",{}]],"19":[["  4 ",{"fg":3}],["    wait(&status);                                                     ",{}],["│",{"fg":2}],["                                                                           ",{}]],"20":[["  5 ",{"fg":3}],["    printf(",{}],["\"",{"fg":2}],["\\n",{"fg":1,"bold":true}],["Parent proces sacekao izvrsenje child-a i sada zavrsava!",{"fg":2}],["\\",{"fg":1,"bold":true}],["│",{"fg":2}],["                                                                           ",{}]],"22":[["  6 ",{"fg":3}],["    ",{}],["return",{"fg":4,"bold":true}],[" ",{}],["0",{"fg":2}],[";                                                          │                                                                           ",{}]],"23":[["  7 ",{"fg":3}],["  }                                                                    │                                                                           ",{}]],"24":[["  8 ",{"fg":3}],["  ",{}],["else",{"fg":4,"bold":true}],["                                                                 │                                                                           ",{}]],"25":[["  9 ",{"fg":3}],["  {                                                                    │                                                                           ",{}]],"26":[[" 10 ",{"fg":3}],["    printf(",{}],["\"Sada se izvrsava child proces!",{"fg":2}],["\\n\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[");                      │                                                                           ",{}]],"27":[[" 11 ",{"fg":3}],["    ",{}],["/* int execvp (const char *file, char *const argv[]); */",{"fg":1}],["           │                                                                           ",{}]],"28":[[" 12 ",{"fg":3}],["    ",{}],["if",{"fg":4,"bold":true}],[" (execvp(argv[",{}],["1",{"fg":2}],["],&argv[",{}],["1",{"fg":2}],["]))                                      │                                                                           ",{}]],"29":[[" 13 ",{"fg":3}],["    {                                                                  │                                                                           ",{}]],"30":[[" 14 ",{"fg":3}],["      printf(",{}],["\"Upozorenje: execvp greska.",{"fg":2}],["\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[");                          │                                                                           ",{}]],"31":[[" 15 ",{"fg":3}],["      ",{}],["return",{"fg":4,"bold":true}],[" ",{}],["1",{"fg":2}],[";                                                        │                                                                           ",{}]],"32":[[" 16 ",{"fg":3}],["    }                                                                  │                                                                           ",{}]],"33":[[" 17 ",{"fg":3}],["    printf(",{}],["\"Ovo nikad nece biti ispisano!!",{"fg":2}],["\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[");                        │                                                                           ",{}]],"34":[[" 18 ",{"fg":3}],["  }                                                                    │                                                                           ",{}]],"35":[[" 19 ",{"fg":3}],["}                                                                      │                                                                           ",{}]],"39":[["-- VISUAL LINE --",{"bold":true}],["                                        15,3          All │                                                                           ",{}]]},"cursor":{"y":15}}],[0.468575,{"lines":{"0":[[" 15 ",{"fg":3}],["#include",{"fg":5}],["<stdio.h>",{"fg":2}],["                                                      ",{}],["│",{"fg":2}],["nermin > ls                                                                ",{}]],"1":[[" 14 ",{"fg":3}],["#include",{"fg":5}],["<unistd.h>",{"fg":2}],["                                                     ",{}],["│",{"fg":2}],["exec.c  ",{}],["primjer_1",{"fg":2,"bold":true}],["  primjer_1.c  primjer_2.c                                ",{}]],"2":[[" 13 ",{"fg":3}],["#include",{"fg":5}],["<sys/types.h>",{"fg":2}],["                                                  ",{}],["│",{"fg":2}],["nermin > gcc -o primjer_2 primjer_2.c                                      ",{}]],"3":[[" 12 ",{"fg":3}],["#include",{"fg":5}],["<sys/wait.h>",{"fg":2}],[" ",{}],["/* zaglavlje u kojem je deklarisana wait f-ja */",{"fg":1}],["  ",{}],["│",{"fg":2}],["nermin > ls                                                                ",{}]],"4":[[" 11 ",{"fg":3}],["                                                                       ",{}],["│",{"fg":2}],["exec.c  ",{}],["primjer_1",{"fg":2,"bold":true}],["  primjer_1.c  ",{}],["primjer_2",{"fg":2,"bold":true}],["  primjer_2.c                     ",{}]],"5":[[" 10 ",{"fg":3}],["int",{"fg":4,"bold":true}],[" main(",{}],["int",{"fg":4,"bold":true}],[" argc, ",{}],["char",{"fg":4,"bold":true}],[" *argv[])                                       ",{}],["│",{"fg":2}],["nermin > ./primjer_2                                                       ",{}]],"6":[["  9 ",{"fg":3}],["{                                                                      ",{}],["│",{"fg":2}],["Nacin koristenja: ./primjer_2 command arg1 arg2 ...                        ",{}]],"7":[["  8 ",{"fg":3}],["  ",{}],["int",{"fg":4,"bold":true}],[" status;                                                          ",{}],["│",{"fg":2}],["nermin >                                                                   ",{}]],"8":[["  7 ",{"fg":3}],["  ",{}],["/* U ovu varijablu se zapisuje status terminiranja child",{"fg":1}],["             ",{}],["│",{"fg":2}],["                                                                           ",{}]],"9":[["  6 ",{"fg":3}],["   * procesa na cije se izvrsenje ceka uz pomoc wait fje */",{"fg":1}],["            ",{}],["│",{"fg":2}],["                                                                           ",{}]],"10":[["  5 ",{"fg":3}],["  ",{}],["if",{"fg":4,"bold":true}],[" (argc < ",{}],["2",{"fg":2}],[")                                                        ",{}],["│",{"fg":2}],["                                                                           ",{}]],"11":[["  4 ",{"fg":3}],["  { ",{"inverse":true}],["                                                                   ",{}],["│",{"fg":2}],["                                                                           ",{}]],"12":[["  3 ",{"fg":3}],["    ",{"inverse":true}],["/* validan broj argumenata s komandne linije? */",{"fg":1,"inverse":true}],[" ",{"inverse":true}],["                  ",{}],["│",{"fg":2}],["                                                                           ",{}]],"13":[["  2 ",{"fg":3}],["    fprintf (",{"inverse":true}],["stderr",{"fg":2,"inverse":true}],[", ",{"inverse":true}],["\"Nacin koristenja: ",{"fg":2,"inverse":true}],["%s",{"fg":1,"bold":true,"inverse":true}],[" command arg1 arg2 ...",{"fg":2,"inverse":true}],["\\n",{"fg":1,"bold":true,"inverse":true}],["\"",{"fg":2,"inverse":true}],[", ar",{"inverse":true}],["│",{"fg":2}],["                                                                           ",{}]],"15":[["  1 ",{"fg":3}],["    ",{"inverse":true}],["return",{"fg":4,"bold":true,"inverse":true}],[" ",{"inverse":true}],["1",{"fg":2,"inverse":true}],["; ",{"inverse":true}],["                                                         ",{}],["│",{"fg":2}],["                                                                           ",{}]],"16":[["  0 ",{"fg":3}],["  ",{"inverse":true}],["}",{"bg":6}],[" ",{"inverse":true}],["                                                                   ",{}],["│",{"fg":2}],["                                                                           ",{}]],"17":[["  1 ",{"fg":3}],["  ",{}],["if",{"fg":4,"bold":true}],[" (fork())                                                          ",{}],["│",{"fg":2}],["                                                                           ",{}]],"18":[["  2 ",{"fg":3}],["  {                                                                    ",{}],["│",{"fg":2}],["                                                                           ",{}]],"19":[["  3 ",{"fg":3}],["    wait(&status);                                                     ",{}],["│",{"fg":2}],["                                                                           ",{}]],"20":[["  4 ",{"fg":3}],["    printf(",{}],["\"",{"fg":2}],["\\n",{"fg":1,"bold":true}],["Parent proces sacekao izvrsenje child-a i sada zavrsava!",{"fg":2}],["\\",{"fg":1,"bold":true}],["│",{"fg":2}],["                                                                           ",{}]],"22":[["  5 ",{"fg":3}],["    ",{}],["return",{"fg":4,"bold":true}],[" ",{}],["0",{"fg":2}],[";                                                          │                                                                           ",{}]],"23":[["  6 ",{"fg":3}],["  }                                                                    │                                                                           ",{}]],"24":[["  7 ",{"fg":3}],["  ",{}],["else",{"fg":4,"bold":true}],["                                                                 │                                                                           ",{}]],"25":[["  8 ",{"fg":3}],["  {                                                                    │                                                                           ",{}]],"26":[["  9 ",{"fg":3}],["    printf(",{}],["\"Sada se izvrsava child proces!",{"fg":2}],["\\n\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[");                      │                                                                           ",{}]],"27":[[" 10 ",{"fg":3}],["    ",{}],["/* int execvp (const char *file, char *const argv[]); */",{"fg":1}],["           │                                                                           ",{}]],"28":[[" 11 ",{"fg":3}],["    ",{}],["if",{"fg":4,"bold":true}],[" (execvp(argv[",{}],["1",{"fg":2}],["],&argv[",{}],["1",{"fg":2}],["]))                                      │                                                                           ",{}]],"29":[[" 12 ",{"fg":3}],["    {                                                                  │                                                                           ",{}]],"30":[[" 13 ",{"fg":3}],["      printf(",{}],["\"Upozorenje: execvp greska.",{"fg":2}],["\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[");                          │                                                                           ",{}]],"31":[[" 14 ",{"fg":3}],["      ",{}],["return",{"fg":4,"bold":true}],[" ",{}],["1",{"fg":2}],[";                                                        │                                                                           ",{}]],"32":[[" 15 ",{"fg":3}],["    }                                                                  │                                                                           ",{}]],"33":[[" 16 ",{"fg":3}],["    printf(",{}],["\"Ovo nikad nece biti ispisano!!",{"fg":2}],["\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[");                        │                                                                           ",{}]],"34":[[" 17 ",{"fg":3}],["  }                                                                    │                                                                           ",{}]],"35":[[" 18 ",{"fg":3}],["}                                                                      │                                                                           ",{}]],"39":[["-- VISUAL LINE --",{"bold":true}],["                                        16,3          All │                                                                           ",{}]]},"cursor":{"y":16}}],[3.232376,{"lines":{"11":[["  4 ",{"fg":3}],["  ",{}],["{",{"bg":6}],["                                                                    ",{}],["│",{"fg":2}],["                                                                           ",{}]],"12":[["  3 ",{"fg":3}],["    ",{}],["/* validan broj argumenata s komandne linije? */",{"fg":1}],["                   ",{}],["│",{"fg":2}],["                                                                           ",{}]],"13":[["  2 ",{"fg":3}],["    fprintf (",{}],["stderr",{"fg":2}],[", ",{}],["\"Nacin koristenja: ",{"fg":2}],["%s",{"fg":1,"bold":true}],[" command arg1 arg2 ...",{"fg":2}],["\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[", ar",{}],["│",{"fg":2}],["                                                                           ",{}]],"14":[["    ",{"fg":3}],["gv[",{}],["0",{"fg":2}],["]);                                                                ",{}],["│",{"fg":2}],["                                                                           ",{}]],"15":[["  1 ",{"fg":3}],["    ",{}],["return",{"fg":4,"bold":true}],[" ",{}],["1",{"fg":2}],[";                                                          ",{}],["│",{"fg":2}],["                                                                           ",{}]],"16":[["  0 ",{"fg":3}],["  ",{}],["}",{"bg":6}],["                                                                    ",{}],["│",{"fg":2}],["                                                                           ",{}]],"39":[["                                                         16,3          All │                                                                           ",{}]]}}],[0.883399,{"lines":{"0":[[" 15 ",{"fg":3}],["#include",{"fg":5}],["<stdio.h>",{"fg":2}],["                                                      │nermin > ls                                                                ",{}]],"1":[[" 14 ",{"fg":3}],["#include",{"fg":5}],["<unistd.h>",{"fg":2}],["                                                     │exec.c  ",{}],["primjer_1",{"fg":2,"bold":true}],["  primjer_1.c  primjer_2.c                                ",{}]],"2":[[" 13 ",{"fg":3}],["#include",{"fg":5}],["<sys/types.h>",{"fg":2}],["                                                  │nermin > gcc -o primjer_2 primjer_2.c                                      ",{}]],"3":[[" 12 ",{"fg":3}],["#include",{"fg":5}],["<sys/wait.h>",{"fg":2}],[" ",{}],["/* zaglavlje u kojem je deklarisana wait f-ja */",{"fg":1}],["  │nermin > ls                                                                ",{}]],"4":[[" 11 ",{"fg":3}],["                                                                       │exec.c  ",{}],["primjer_1",{"fg":2,"bold":true}],["  primjer_1.c  ",{}],["primjer_2",{"fg":2,"bold":true}],["  primjer_2.c                     ",{}]],"5":[[" 10 ",{"fg":3}],["int",{"fg":4,"bold":true}],[" main(",{}],["int",{"fg":4,"bold":true}],[" argc, ",{}],["char",{"fg":4,"bold":true}],[" *argv[])                                       │nermin > ./primjer_2                                                       ",{}]],"6":[["  9 ",{"fg":3}],["{                                                                      │Nacin koristenja: ./primjer_2 command arg1 arg2 ...                        ",{}]],"7":[["  8 ",{"fg":3}],["  ",{}],["int",{"fg":4,"bold":true}],[" status;                                                          │nermin >                                                                   ",{}]],"8":[["  7 ",{"fg":3}],["  ",{}],["/* U ovu varijablu se zapisuje status terminiranja child",{"fg":1}],["             │                                                                           ",{}]],"9":[["  6 ",{"fg":3}],["   * procesa na cije se izvrsenje ceka uz pomoc wait fje */",{"fg":1}],["            │                                                                           ",{}]],"10":[["  5 ",{"fg":3}],["  ",{}],["if",{"fg":4,"bold":true}],[" (argc < ",{}],["2",{"fg":2}],[")                                                        │                                                                           ",{}]],"11":[["  4 ",{"fg":3}],["  ",{}],["{",{"bg":6}],["                                                                    │                                                                           ",{}]],"12":[["  3 ",{"fg":3}],["    ",{}],["/* validan broj argumenata s komandne linije? */",{"fg":1}],["                   │                                                                           ",{}]],"13":[["  2 ",{"fg":3}],["    fprintf (",{}],["stderr",{"fg":2}],[", ",{}],["\"Nacin koristenja: ",{"fg":2}],["%s",{"fg":1,"bold":true}],[" command arg1 arg2 ...",{"fg":2}],["\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[", ar│                                                                           ",{}]],"14":[["    ",{"fg":3}],["gv[",{}],["0",{"fg":2}],["]);                                                                │                                                                           ",{}]],"15":[["  1 ",{"fg":3}],["    ",{}],["return",{"fg":4,"bold":true}],[" ",{}],["1",{"fg":2}],[";                                                          │                                                                           ",{}]],"16":[["  0 ",{"fg":3}],["  ",{}],["}",{"bg":6}],["                                                                    │                                                                           ",{}]],"17":[["  1 ",{"fg":3}],["  ",{}],["if",{"fg":4,"bold":true}],[" (fork())                                                          │                                                                           ",{}]],"18":[["  2 ",{"fg":3}],["  {                                                                    │                                                                           ",{}]],"19":[["  3 ",{"fg":3}],["    wait(&status);                                                     │                                                                           ",{}]],"20":[["  4 ",{"fg":3}],["    printf(",{}],["\"",{"fg":2}],["\\n",{"fg":1,"bold":true}],["Parent proces sacekao izvrsenje child-a i sada zavrsava!",{"fg":2}],["\\",{"fg":1,"bold":true}],["│                                                                           ",{}]],"21":[["    ",{"fg":3}],["n",{"fg":1,"bold":true}],["\"",{"fg":2}],[");                                                                   ",{}],["│",{"fg":2}],["                                                                           ",{}]],"22":[["  5 ",{"fg":3}],["    ",{}],["return",{"fg":4,"bold":true}],[" ",{}],["0",{"fg":2}],[";                                                          ",{}],["│",{"fg":2}],["                                                                           ",{}]],"23":[["  6 ",{"fg":3}],["  }                                                                    ",{}],["│",{"fg":2}],["                                                                           ",{}]],"24":[["  7 ",{"fg":3}],["  ",{}],["else",{"fg":4,"bold":true}],["                                                                 ",{}],["│",{"fg":2}],["                                                                           ",{}]],"25":[["  8 ",{"fg":3}],["  {                                                                    ",{}],["│",{"fg":2}],["                                                                           ",{}]],"26":[["  9 ",{"fg":3}],["    printf(",{}],["\"Sada se izvrsava child proces!",{"fg":2}],["\\n\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[");                      ",{}],["│",{"fg":2}],["                                                                           ",{}]],"27":[[" 10 ",{"fg":3}],["    ",{}],["/* int execvp (const char *file, char *const argv[]); */",{"fg":1}],["           ",{}],["│",{"fg":2}],["                                                                           ",{}]],"28":[[" 11 ",{"fg":3}],["    ",{}],["if",{"fg":4,"bold":true}],[" (execvp(argv[",{}],["1",{"fg":2}],["],&argv[",{}],["1",{"fg":2}],["]))                                      ",{}],["│",{"fg":2}],["                                                                           ",{}]],"29":[[" 12 ",{"fg":3}],["    {                                                                  ",{}],["│",{"fg":2}],["                                                                           ",{}]],"30":[[" 13 ",{"fg":3}],["      printf(",{}],["\"Upozorenje: execvp greska.",{"fg":2}],["\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[");                          ",{}],["│",{"fg":2}],["                                                                           ",{}]],"31":[[" 14 ",{"fg":3}],["      ",{}],["return",{"fg":4,"bold":true}],[" ",{}],["1",{"fg":2}],[";                                                        ",{}],["│",{"fg":2}],["                                                                           ",{}]],"32":[[" 15 ",{"fg":3}],["    }                                                                  ",{}],["│",{"fg":2}],["                                                                           ",{}]],"33":[[" 16 ",{"fg":3}],["    printf(",{}],["\"Ovo nikad nece biti ispisano!!",{"fg":2}],["\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[");                        ",{}],["│",{"fg":2}],["                                                                           ",{}]],"34":[[" 17 ",{"fg":3}],["  }                                                                    ",{}],["│",{"fg":2}],["                                                                           ",{}]],"35":[[" 18 ",{"fg":3}],["}                                                                      ",{}],["│",{"fg":2}],["                                                                           ",{}]],"36":[["~                                                                          ",{"fg":4,"bold":true}],["│",{"fg":2}],["                                                                           ",{}]],"37":[["~                                                                          ",{"fg":4,"bold":true}],["│",{"fg":2}],["                                                                           ",{}]],"38":[["~                                                                          ",{"fg":4,"bold":true}],["│",{"fg":2}],["                                                                           ",{}]],"39":[["                                                         16,3          All ",{}],["│",{"fg":2}],["                                                                           ",{}]]},"cursor":{"x":33,"y":5,"visible":false}}],[0.00027,{"cursor":{"x":85,"y":7,"visible":true}}],[0.072389,{"lines":{"40":[["[0] 0:bash*                                                                                                    \"nermin-SATELLITE-C55-A\" 19:07 10-Okt-14",{"fg":0,"bg":2}]]}}],[1.399485,{"lines":{"7":[["  8 ",{"fg":3}],["  ",{}],["int",{"fg":4,"bold":true}],[" status;                                                          │nermin > .                                                                 ",{}]]},"cursor":{"x":86}}],[0.219209,{"lines":{"7":[["  8 ",{"fg":3}],["  ",{}],["int",{"fg":4,"bold":true}],[" status;                                                          │nermin > ./                                                                ",{}]]},"cursor":{"x":87}}],[0.573316,{"lines":{"7":[["  8 ",{"fg":3}],["  ",{}],["int",{"fg":4,"bold":true}],[" status;                                                          │nermin > ./p                                                               ",{}]]},"cursor":{"x":88}}],[0.31819,{"lines":{"7":[["  8 ",{"fg":3}],["  ",{}],["int",{"fg":4,"bold":true}],[" status;                                                          │nermin > ./pr                                                              ",{}]]},"cursor":{"x":89}}],[0.116442,{"lines":{"7":[["  8 ",{"fg":3}],["  ",{}],["int",{"fg":4,"bold":true}],[" status;                                                          │nermin > ./pri                                                             ",{}]]},"cursor":{"x":90}}],[0.251807,{"lines":{"7":[["  8 ",{"fg":3}],["  ",{}],["int",{"fg":4,"bold":true}],[" status;                                                          │nermin > ./primjer_                                                        ",{}]]},"cursor":{"x":95}}],[0.698447,{"lines":{"7":[["  8 ",{"fg":3}],["  ",{}],["int",{"fg":4,"bold":true}],[" status;                                                          │nermin > ./primjer_2                                                       ",{}]]},"cursor":{"x":96}}],[0.720741,{"cursor":{"x":97}}],[0.795719,{"lines":{"7":[["  8 ",{"fg":3}],["  ",{}],["int",{"fg":4,"bold":true}],[" status;                                                          │nermin > ./primjer_2 l                                                     ",{}]]},"cursor":{"x":98}}],[0.417723,{"lines":{"7":[["  8 ",{"fg":3}],["  ",{}],["int",{"fg":4,"bold":true}],[" status;                                                          │nermin > ./primjer_2 ls                                                    ",{}]]},"cursor":{"x":99}}],[1.053923,{"cursor":{"x":76,"y":8}}],[0.002847,{"lines":{"8":[["  7 ",{"fg":3}],["  ",{}],["/* U ovu varijablu se zapisuje status terminiranja child",{"fg":1}],["             │Sada se izvrsava child proces!                                             ",{}]],"10":[["  5 ",{"fg":3}],["  ",{}],["if",{"fg":4,"bold":true}],[" (argc < ",{}],["2",{"fg":2}],[")                                                        │exec.c  primjer_1  primjer_1.c  primjer_2  primjer_2.c                     ",{}]],"12":[["  3 ",{"fg":3}],["    ",{}],["/* validan broj argumenata s komandne linije? */",{"fg":1}],["                   │Parent proces sacekao izvrsenje child-a i sada zavrsava!                   ",{}]],"13":[["  2 ",{"fg":3}],["    fprintf (",{}],["stderr",{"fg":2}],[", ",{}],["\"Nacin koristenja: ",{"fg":2}],["%s",{"fg":1,"bold":true}],[" command arg1 arg2 ...",{"fg":2}],["\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[", ar│nermin >                                                                   ",{}]]},"cursor":{"x":85,"y":13}}],[2.52432,{"lines":{"13":[["  2 ",{"fg":3}],["    fprintf (",{}],["stderr",{"fg":2}],[", ",{}],["\"Nacin koristenja: ",{"fg":2}],["%s",{"fg":1,"bold":true}],[" command arg1 arg2 ...",{"fg":2}],["\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[", ar│nermin > .                                                                 ",{}]]},"cursor":{"x":86}}],[0.269841,{"lines":{"13":[["  2 ",{"fg":3}],["    fprintf (",{}],["stderr",{"fg":2}],[", ",{}],["\"Nacin koristenja: ",{"fg":2}],["%s",{"fg":1,"bold":true}],[" command arg1 arg2 ...",{"fg":2}],["\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[", ar│nermin > ./                                                                ",{}]]},"cursor":{"x":87}}],[0.662856,{"lines":{"13":[["  2 ",{"fg":3}],["    fprintf (",{}],["stderr",{"fg":2}],[", ",{}],["\"Nacin koristenja: ",{"fg":2}],["%s",{"fg":1,"bold":true}],[" command arg1 arg2 ...",{"fg":2}],["\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[", ar│nermin > ./p                                                               ",{}]]},"cursor":{"x":88}}],[0.311372,{"lines":{"13":[["  2 ",{"fg":3}],["    fprintf (",{}],["stderr",{"fg":2}],[", ",{}],["\"Nacin koristenja: ",{"fg":2}],["%s",{"fg":1,"bold":true}],[" command arg1 arg2 ...",{"fg":2}],["\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[", ar│nermin > ./pr                                                              ",{}]]},"cursor":{"x":89}}],[0.148271,{"lines":{"13":[["  2 ",{"fg":3}],["    fprintf (",{}],["stderr",{"fg":2}],[", ",{}],["\"Nacin koristenja: ",{"fg":2}],["%s",{"fg":1,"bold":true}],[" command arg1 arg2 ...",{"fg":2}],["\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[", ar│nermin > ./pri                                                             ",{}]]},"cursor":{"x":90}}],[0.300982,{"lines":{"13":[["  2 ",{"fg":3}],["    fprintf (",{}],["stderr",{"fg":2}],[", ",{}],["\"Nacin koristenja: ",{"fg":2}],["%s",{"fg":1,"bold":true}],[" command arg1 arg2 ...",{"fg":2}],["\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[", ar│nermin > ./prim                                                            ",{}]]},"cursor":{"x":91}}],[0.241922,{"lines":{"13":[["  2 ",{"fg":3}],["    fprintf (",{}],["stderr",{"fg":2}],[", ",{}],["\"Nacin koristenja: ",{"fg":2}],["%s",{"fg":1,"bold":true}],[" command arg1 arg2 ...",{"fg":2}],["\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[", ar│nermin > ./primj                                                           ",{}]]},"cursor":{"x":92}}],[0.119845,{"lines":{"13":[["  2 ",{"fg":3}],["    fprintf (",{}],["stderr",{"fg":2}],[", ",{}],["\"Nacin koristenja: ",{"fg":2}],["%s",{"fg":1,"bold":true}],[" command arg1 arg2 ...",{"fg":2}],["\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[", ar│nermin > ./primje                                                          ",{}]]},"cursor":{"x":93}}],[0.214562,{"lines":{"13":[["  2 ",{"fg":3}],["    fprintf (",{}],["stderr",{"fg":2}],[", ",{}],["\"Nacin koristenja: ",{"fg":2}],["%s",{"fg":1,"bold":true}],[" command arg1 arg2 ...",{"fg":2}],["\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[", ar│nermin > ./primjer                                                         ",{}]]},"cursor":{"x":94}}],[0.56518,{"lines":{"13":[["  2 ",{"fg":3}],["    fprintf (",{}],["stderr",{"fg":2}],[", ",{}],["\"Nacin koristenja: ",{"fg":2}],["%s",{"fg":1,"bold":true}],[" command arg1 arg2 ...",{"fg":2}],["\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[", ar│nermin > ./primjer_                                                        ",{}]]},"cursor":{"x":95}}],[0.9694390000000001,{"lines":{"13":[["  2 ",{"fg":3}],["    fprintf (",{}],["stderr",{"fg":2}],[", ",{}],["\"Nacin koristenja: ",{"fg":2}],["%s",{"fg":1,"bold":true}],[" command arg1 arg2 ...",{"fg":2}],["\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[", ar│nermin > ./primjer_2                                                       ",{}]]},"cursor":{"x":96}}],[0.230756,{"cursor":{"x":97}}],[0.703312,{"lines":{"13":[["  2 ",{"fg":3}],["    fprintf (",{}],["stderr",{"fg":2}],[", ",{}],["\"Nacin koristenja: ",{"fg":2}],["%s",{"fg":1,"bold":true}],[" command arg1 arg2 ...",{"fg":2}],["\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[", ar│nermin > ./primjer_2 l                                                     ",{}]]},"cursor":{"x":98}}],[0.171573,{"lines":{"13":[["  2 ",{"fg":3}],["    fprintf (",{}],["stderr",{"fg":2}],[", ",{}],["\"Nacin koristenja: ",{"fg":2}],["%s",{"fg":1,"bold":true}],[" command arg1 arg2 ...",{"fg":2}],["\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[", ar│nermin > ./primjer_2 ls                                                    ",{}]]},"cursor":{"x":99}}],[0.359894,{"cursor":{"x":100}}],[0.46851,{"lines":{"13":[["  2 ",{"fg":3}],["    fprintf (",{}],["stderr",{"fg":2}],[", ",{}],["\"Nacin koristenja: ",{"fg":2}],["%s",{"fg":1,"bold":true}],[" command arg1 arg2 ...",{"fg":2}],["\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[", ar│nermin > ./primjer_2 ls -                                                  ",{}]]},"cursor":{"x":101}}],[1.567071,{"lines":{"13":[["  2 ",{"fg":3}],["    fprintf (",{}],["stderr",{"fg":2}],[", ",{}],["\"Nacin koristenja: ",{"fg":2}],["%s",{"fg":1,"bold":true}],[" command arg1 arg2 ...",{"fg":2}],["\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[", ar│nermin > ./primjer_2 ls -t                                                 ",{}]]},"cursor":{"x":102}}],[0.854943,{"cursor":{"x":76,"y":14}}],[0.005954000000000001,{"lines":{"14":[["    ",{"fg":3}],["gv[",{}],["0",{"fg":2}],["]);                                                                │Sada se izvrsava child proces!                                             ",{}]],"16":[["  0 ",{"fg":3}],["  ",{}],["}",{"bg":6}],["                                                                    │primjer_2  primjer_1  primjer_1.c  primjer_2.c  exec.c                     ",{}]],"18":[["  2 ",{"fg":3}],["  {                                                                    │Parent proces sacekao izvrsenje child-a i sada zavrsava!                   ",{}]],"19":[["  3 ",{"fg":3}],["    wait(&status);                                                     │nermin >                                                                   ",{}]]},"cursor":{"x":85,"y":19}}],[2.658642,{"lines":{"19":[["  3 ",{"fg":3}],["    wait(&status);                                                     │nermin > ./primjer_2 ls -t                                                 ",{}]]},"cursor":{"x":102}}],[0.400936,{"cursor":{"x":101}}],[0.824819,{"lines":{"19":[["  3 ",{"fg":3}],["    wait(&status);                                                     │nermin > ./primjer_2 ls -lt                                                ",{}]]},"cursor":{"x":102}}],[1.013957,{"cursor":{"x":76,"y":20}}],[0.002192,{"lines":{"20":[["  4 ",{"fg":3}],["    printf(",{}],["\"",{"fg":2}],["\\n",{"fg":1,"bold":true}],["Parent proces sacekao izvrsenje child-a i sada zavrsava!",{"fg":2}],["\\",{"fg":1,"bold":true}],["│Sada se izvrsava child proces!                                             ",{}]]},"cursor":{"y":22}}],[0.039896,{"lines":{"22":[["  5 ",{"fg":3}],["    ",{}],["return",{"fg":4,"bold":true}],[" ",{}],["0",{"fg":2}],[";                                                          ",{}],["│",{"fg":2}],["total 36                                                                   ",{}]]},"cursor":{"y":23}}],[0.001228,{"lines":{"23":[["  6 ",{"fg":3}],["  }                                                                    ",{}],["│",{"fg":2}],["-rwxrwxr-x 1 nermin nermin 8764 Okt 10 19:07 primjer_2                     ",{}]],"24":[["  7 ",{"fg":3}],["  ",{}],["else",{"fg":4,"bold":true}],["                                                                 ",{}],["│",{"fg":2}],["-rwxrwxr-x 1 nermin nermin 8670 Okt 10 19:05 primjer_1                     ",{}]],"25":[["  8 ",{"fg":3}],["  {                                                                    ",{}],["│",{"fg":2}],["-rw-rw-r-- 1 nermin nermin  685 Okt 10 19:05 primjer_1.c                   ",{}]],"26":[["  9 ",{"fg":3}],["    printf(",{}],["\"Sada se izvrsava child proces!",{"fg":2}],["\\n\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[");                      ",{}],["│",{"fg":2}],["-rw-rw-r-- 1 nermin nermin  883 Okt  8 21:58 primjer_2.c                   ",{}]],"27":[[" 10 ",{"fg":3}],["    ",{}],["/* int execvp (const char *file, char *const argv[]); */",{"fg":1}],["           ",{}],["│",{"fg":2}],["-rw-rw-r-- 1 nermin nermin  773 Okt  8 21:20 exec.c                        ",{}]],"29":[[" 12 ",{"fg":3}],["    {                                                                  ",{}],["│",{"fg":2}],["Parent proces sacekao izvrsenje child-a i sada zavrsava!                   ",{}]],"30":[[" 13 ",{"fg":3}],["      printf(",{}],["\"Upozorenje: execvp greska.",{"fg":2}],["\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[");                          ",{}],["│",{"fg":2}],["nermin >                                                                   ",{}]]},"cursor":{"x":85,"y":30}}],[5.04919,{"lines":{"40":[["[0] 0:bash*                                                                                                    \"nermin-SATELLITE-C55-A\" 19:08 10-Okt-14",{"fg":0,"bg":2}]]}}],[5.94146,{"lines":{"30":[[" 13 ",{"fg":3}],["      printf(",{}],["\"Upozorenje: execvp greska.",{"fg":2}],["\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[");                          ",{}],["│",{"fg":2}],["nermin > c                                                                 ",{}]]},"cursor":{"x":86}}],[0.16019,{"lines":{"30":[[" 13 ",{"fg":3}],["      printf(",{}],["\"Upozorenje: execvp greska.",{"fg":2}],["\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[");                          ",{}],["│",{"fg":2}],["nermin > cl                                                                ",{}]]},"cursor":{"x":87}}],[0.214438,{"lines":{"30":[[" 13 ",{"fg":3}],["      printf(",{}],["\"Upozorenje: execvp greska.",{"fg":2}],["\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[");                          ",{}],["│",{"fg":2}],["nermin > cle                                                               ",{}]]},"cursor":{"x":88}}],[0.215447,{"lines":{"30":[[" 13 ",{"fg":3}],["      printf(",{}],["\"Upozorenje: execvp greska.",{"fg":2}],["\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[");                          ",{}],["│",{"fg":2}],["nermin > clea                                                              ",{}]]},"cursor":{"x":89}}],[0.29932,{"lines":{"30":[[" 13 ",{"fg":3}],["      printf(",{}],["\"Upozorenje: execvp greska.",{"fg":2}],["\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[");                          ",{}],["│",{"fg":2}],["nermin > clear                                                             ",{}]]},"cursor":{"x":90}}],[0.442273,{"cursor":{"x":76,"y":31}}],[0.002892,{"lines":{"0":[[" 15 ",{"fg":3}],["#include",{"fg":5}],["<stdio.h>",{"fg":2}],["                                                      │nermin >                                                                   ",{}]],"1":[[" 14 ",{"fg":3}],["#include",{"fg":5}],["<unistd.h>",{"fg":2}],["                                                     │                                                                           ",{}]],"2":[[" 13 ",{"fg":3}],["#include",{"fg":5}],["<sys/types.h>",{"fg":2}],["                                                  │                                                                           ",{}]],"3":[[" 12 ",{"fg":3}],["#include",{"fg":5}],["<sys/wait.h>",{"fg":2}],[" ",{}],["/* zaglavlje u kojem je deklarisana wait f-ja */",{"fg":1}],["  │                                                                           ",{}]],"4":[[" 11 ",{"fg":3}],["                                                                       │                                                                           ",{}]],"5":[[" 10 ",{"fg":3}],["int",{"fg":4,"bold":true}],[" main(",{}],["int",{"fg":4,"bold":true}],[" argc, ",{}],["char",{"fg":4,"bold":true}],[" *argv[])                                       │                                                                           ",{}]],"6":[["  9 ",{"fg":3}],["{                                                                      │                                                                           ",{}]],"7":[["  8 ",{"fg":3}],["  ",{}],["int",{"fg":4,"bold":true}],[" status;                                                          │                                                                           ",{}]],"8":[["  7 ",{"fg":3}],["  ",{}],["/* U ovu varijablu se zapisuje status terminiranja child",{"fg":1}],["             │                                                                           ",{}]],"10":[["  5 ",{"fg":3}],["  ",{}],["if",{"fg":4,"bold":true}],[" (argc < ",{}],["2",{"fg":2}],[")                                                        │                                                                           ",{}]],"12":[["  3 ",{"fg":3}],["    ",{}],["/* validan broj argumenata s komandne linije? */",{"fg":1}],["                   │                                                                           ",{}]],"13":[["  2 ",{"fg":3}],["    fprintf (",{}],["stderr",{"fg":2}],[", ",{}],["\"Nacin koristenja: ",{"fg":2}],["%s",{"fg":1,"bold":true}],[" command arg1 arg2 ...",{"fg":2}],["\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[", ar│                                                                           ",{}]],"14":[["    ",{"fg":3}],["gv[",{}],["0",{"fg":2}],["]);                                                                │                                                                           ",{}]],"16":[["  0 ",{"fg":3}],["  ",{}],["}",{"bg":6}],["                                                                    │                                                                           ",{}]],"18":[["  2 ",{"fg":3}],["  {                                                                    │                                                                           ",{}]],"19":[["  3 ",{"fg":3}],["    wait(&status);                                                     │                                                                           ",{}]],"20":[["  4 ",{"fg":3}],["    printf(",{}],["\"",{"fg":2}],["\\n",{"fg":1,"bold":true}],["Parent proces sacekao izvrsenje child-a i sada zavrsava!",{"fg":2}],["\\",{"fg":1,"bold":true}],["│                                                                           ",{}]],"22":[["  5 ",{"fg":3}],["    ",{}],["return",{"fg":4,"bold":true}],[" ",{}],["0",{"fg":2}],[";                                                          ",{}],["│",{"fg":2}],["                                                                           ",{}]],"23":[["  6 ",{"fg":3}],["  }                                                                    ",{}],["│",{"fg":2}],["                                                                           ",{}]],"24":[["  7 ",{"fg":3}],["  ",{}],["else",{"fg":4,"bold":true}],["                                                                 ",{}],["│",{"fg":2}],["                                                                           ",{}]],"25":[["  8 ",{"fg":3}],["  {                                                                    ",{}],["│",{"fg":2}],["                                                                           ",{}]],"26":[["  9 ",{"fg":3}],["    printf(",{}],["\"Sada se izvrsava child proces!",{"fg":2}],["\\n\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[");                      ",{}],["│",{"fg":2}],["                                                                           ",{}]],"27":[[" 10 ",{"fg":3}],["    ",{}],["/* int execvp (const char *file, char *const argv[]); */",{"fg":1}],["           ",{}],["│",{"fg":2}],["                                                                           ",{}]],"29":[[" 12 ",{"fg":3}],["    {                                                                  ",{}],["│",{"fg":2}],["                                                                           ",{}]],"30":[[" 13 ",{"fg":3}],["      printf(",{}],["\"Upozorenje: execvp greska.",{"fg":2}],["\\n",{"fg":1,"bold":true}],["\"",{"fg":2}],[");                          ",{}],["│",{"fg":2}],["                                                                           ",{}]]},"cursor":{"x":85,"y":0}}],[4.498684,{"lines":{"0":[[" 15 ",{"fg":3}],["#include",{"fg":5}],["<stdio.h>",{"fg":2}],["                                                      │nermin > c                                                                 ",{}]]},"cursor":{"x":86}}],[0.187535,{"lines":{"0":[[" 15 ",{"fg":3}],["#include",{"fg":5}],["<stdio.h>",{"fg":2}],["                                                      │nermin > cd                                                                ",{}]]},"cursor":{"x":87}}],[0.457208,{"cursor":{"x":88}}],[0.456937,{"lines":{"0":[[" 15 ",{"fg":3}],["#include",{"fg":5}],["<stdio.h>",{"fg":2}],["                                                      │nermin > cd .                                                              ",{}]]},"cursor":{"x":89}}],[0.192318,{"lines":{"0":[[" 15 ",{"fg":3}],["#include",{"fg":5}],["<stdio.h>",{"fg":2}],["                                                      │nermin > cd ..                                                             ",{}]]},"cursor":{"x":90}}],[1.632699,{"lines":{"0":[[" 15 ",{"fg":3}],["#include",{"fg":5}],["<stdio.h>",{"fg":2}],["                                                      │nermin > cd .                                                              ",{}]]},"cursor":{"x":89}}],[0.254268,{"lines":{"0":[[" 15 ",{"fg":3}],["#include",{"fg":5}],["<stdio.h>",{"fg":2}],["                                                      │nermin > cd                                                                ",{}]]},"cursor":{"x":88}}],[0.298141,{"cursor":{"x":87}}],[0.204461,{"lines":{"0":[[" 15 ",{"fg":3}],["#include",{"fg":5}],["<stdio.h>",{"fg":2}],["                                                      │nermin > c                                                                 ",{}]]},"cursor":{"x":86}}],[0.190292,{"lines":{"0":[[" 15 ",{"fg":3}],["#include",{"fg":5}],["<stdio.h>",{"fg":2}],["                                                      │nermin >                                                                   ",{}]]},"cursor":{"x":85}}],[0.170178,{}],[0.179626,{}],[0.241943,{}],[0.778128,{"lines":{"0":[[" 15 ",{"fg":3}],["#include",{"fg":5}],["<stdio.h>",{"fg":2}],["                                                      │                                                                           ",{}]]},"cursor":{"x":97,"y":12}}],[0.000127,{"lines":{"0":[[" 15 ",{"fg":3}],["#include",{"fg":5}],["<stdio.h>",{"fg":2}],["                                                      │nermin >                                                                   ",{}]]},"cursor":{"x":85,"y":0}}],[0.299054,{"lines":{"0":[[" 15 ",{"fg":3}],["#include",{"fg":5}],["<stdio.h>",{"fg":2}],["                                                      │nermin > l                                                                 ",{}]]},"cursor":{"x":86}}],[0.150206,{"lines":{"0":[[" 15 ",{"fg":3}],["#include",{"fg":5}],["<stdio.h>",{"fg":2}],["                                                      │nermin > ls                                                                ",{}]]},"cursor":{"x":87}}],[0.240324,{"cursor":{"x":76,"y":1}}],[0.004227,{"lines":{"1":[[" 14 ",{"fg":3}],["#include",{"fg":5}],["<unistd.h>",{"fg":2}],["                                                     │exec.c  ",{}],["primjer_1",{"fg":2,"bold":true}],["  primjer_1.c  ",{}],["primjer_2",{"fg":2,"bold":true}],["  primjer_2.c                     ",{}]],"2":[[" 13 ",{"fg":3}],["#include",{"fg":5}],["<sys/types.h>",{"fg":2}],["                                                  │nermin >                                                                   ",{}]]},"cursor":{"x":85,"y":2}}],[5.321249,{"lines":{"0":[[" 15 ",{"fg":3}],["#include",{"fg":5}],["<stdio.h>",{"fg":2}],["                                                      │                                                                           ",{}]],"1":[[" 14 ",{"fg":3}],["#include",{"fg":5}],["<unistd.h>",{"fg":2}],["                                                     │                                                                           ",{}]],"2":[[" 13 ",{"fg":3}],["#include",{"fg":5}],["<sys/types.h>",{"fg":2}],["                                                  │                                                                           ",{}]]},"cursor":{"x":97,"y":12}}],[0.000144,{"lines":{"0":[[" 15 ",{"fg":3}],["#include",{"fg":5}],["<stdio.h>",{"fg":2}],["                                                      │nermin >                                                                   ",{}]]},"cursor":{"x":85,"y":0}}],[1.605219,{"lines":{"0":[[" 15 ",{"fg":3}],["#include",{"fg":5}],["<stdio.h>",{"fg":2}],["                                                      │nermin > l                                                                 ",{}]]},"cursor":{"x":86}}],[0.169249,{"lines":{"0":[[" 15 ",{"fg":3}],["#include",{"fg":5}],["<stdio.h>",{"fg":2}],["                                                      │nermin > ls                                                                ",{}]]},"cursor":{"x":87}}],[0.35986,{"cursor":{"x":76,"y":1}}],[0.001199,{"lines":{"1":[[" 14 ",{"fg":3}],["#include",{"fg":5}],["<unistd.h>",{"fg":2}],["                                                     │exec.c  ",{}],["primjer_1",{"fg":2,"bold":true}],["  primjer_1.c  ",{}],["primjer_2",{"fg":2,"bold":true}],["  primjer_2.c                     ",{}]],"2":[[" 13 ",{"fg":3}],["#include",{"fg":5}],["<sys/types.h>",{"fg":2}],["                                                  │nermin >                                                                   ",{}]]},"cursor":{"x":85,"y":2}}],[35.903639,{"lines":{"40":[["[0] 0:bash*                                                                                                    \"nermin-SATELLITE-C55-A\" 19:09 10-Okt-14",{"fg":0,"bg":2}]]}}],[16.784352,{"lines":{"2":[[" 13 ",{"fg":3}],["#include",{"fg":5}],["<sys/types.h>",{"fg":2}],["                                                  │nermin > c                                                                 ",{}]]},"cursor":{"x":86}}],[0.325889,{"lines":{"2":[[" 13 ",{"fg":3}],["#include",{"fg":5}],["<sys/types.h>",{"fg":2}],["                                                  │nermin > cl                                                                ",{}]]},"cursor":{"x":87}}],[0.155916,{"lines":{"2":[[" 13 ",{"fg":3}],["#include",{"fg":5}],["<sys/types.h>",{"fg":2}],["                                                  │nermin > cle                                                               ",{}]]},"cursor":{"x":88}}],[0.153797,{"lines":{"2":[[" 13 ",{"fg":3}],["#include",{"fg":5}],["<sys/types.h>",{"fg":2}],["                                                  │nermin > clea                                                              ",{}]]},"cursor":{"x":89}}],[0.254227,{"lines":{"2":[[" 13 ",{"fg":3}],["#include",{"fg":5}],["<sys/types.h>",{"fg":2}],["                                                  │nermin > clear                                                             ",{}]]},"cursor":{"x":90}}],[1.221383,{"cursor":{"x":76,"y":3}}],[0.0045,{"lines":{"0":[[" 15 ",{"fg":3}],["#include",{"fg":5}],["<stdio.h>",{"fg":2}],["                                                      │nermin >                                                                   ",{}]],"1":[[" 14 ",{"fg":3}],["#include",{"fg":5}],["<unistd.h>",{"fg":2}],["                                                     │                                                                           ",{}]],"2":[[" 13 ",{"fg":3}],["#include",{"fg":5}],["<sys/types.h>",{"fg":2}],["                                                  │                                                                           ",{}]]},"cursor":{"x":85,"y":0}}],[0.786605,{"lines":{"0":[[" 15 ",{"fg":3}],["#include",{"fg":5}],["<stdio.h>",{"fg":2}],["                                                      │nermin > l                                                                 ",{}]]},"cursor":{"x":86}}],[0.173313,{"lines":{"0":[[" 15 ",{"fg":3}],["#include",{"fg":5}],["<stdio.h>",{"fg":2}],["                                                      │nermin > ls                                                                ",{}]]},"cursor":{"x":87}}],[0.290592,{"cursor":{"x":76,"y":1}}],[0.0009519999999999999,{"lines":{"1":[[" 14 ",{"fg":3}],["#include",{"fg":5}],["<unistd.h>",{"fg":2}],["                                                     │exec.c  ",{}],["primjer_1",{"fg":2,"bold":true}],["  primjer_1.c  ",{}],["primjer_2",{"fg":2,"bold":true}],["  primjer_2.c                     ",{}]],"2":[[" 13 ",{"fg":3}],["#include",{"fg":5}],["<sys/types.h>",{"fg":2}],["                                                  │nermin >                                                                   ",{}]]},"cursor":{"x":85,"y":2}}],[7.916685,{"lines":{"40":[["kill-window bash? (y/n) ",{"fg":0,"bg":3}],[" ",{"fg":0,"bg":3,"inverse":true}],["                                                                                                                              ",{"fg":0,"bg":3}]]},"cursor":{"visible":false}}],[1.22703,{"lines":{"0":[["nermin > tmux                                                                                                                                          ",{}]],"1":[["                                                                                                                                                       ",{}]],"2":[["                                                                                                                                                       ",{}]],"3":[["                                                                                                                                                       ",{}]],"4":[["                                                                                                                                                       ",{}]],"5":[["                                                                                                                                                       ",{}]],"6":[["                                                                                                                                                       ",{}]],"7":[["                                                                                                                                                       ",{}]],"8":[["                                                                                                                                                       ",{}]],"9":[["                                                                                                                                                       ",{}]],"10":[["                                                                                                                                                       ",{}]],"11":[["                                                                                                                                                       ",{}]],"12":[["                                                                                                                                                       ",{}]],"13":[["                                                                                                                                                       ",{}]],"14":[["                                                                                                                                                       ",{}]],"15":[["                                                                                                                                                       ",{}]],"16":[["                                                                                                                                                       ",{}]],"17":[["                                                                                                                                                       ",{}]],"18":[["                                                                                                                                                       ",{}]],"19":[["                                                                                                                                                       ",{}]],"20":[["                                                                                                                                                       ",{}]],"21":[["                                                                                                                                                       ",{}]],"22":[["                                                                                                                                                       ",{}]],"23":[["                                                                                                                                                       ",{}]],"24":[["                                                                                                                                                       ",{}]],"25":[["                                                                                                                                                       ",{}]],"26":[["                                                                                                                                                       ",{}]],"27":[["                                                                                                                                                       ",{}]],"28":[["                                                                                                                                                       ",{}]],"29":[["                                                                                                                                                       ",{}]],"30":[["                                                                                                                                                       ",{}]],"31":[["                                                                                                                                                       ",{}]],"32":[["                                                                                                                                                       ",{}]],"33":[["                                                                                                                                                       ",{}]],"34":[["                                                                                                                                                       ",{}]],"35":[["                                                                                                                                                       ",{}]],"36":[["                                                                                                                                                       ",{}]],"37":[["                                                                                                                                                       ",{}]],"38":[["                                                                                                                                                       ",{}]],"39":[["                                                                                                                                                       ",{}]],"40":[["                                                                                                                                                       ",{}]]},"cursor":{"x":0,"y":1,"visible":true}}],[0.00129,{"lines":{"1":[["[exited]                                                                                                                                               ",{}]],"2":[["nermin >                                                                                                                                               ",{}]]},"cursor":{"x":9,"y":2}}],[0.95102,{"lines":{"2":[["nermin > e                                                                                                                                             ",{}]]},"cursor":{"x":10}}],[0.313476,{"lines":{"2":[["nermin > ex                                                                                                                                            ",{}]]},"cursor":{"x":11}}],[0.2057,{"lines":{"2":[["nermin > exi                                                                                                                                           ",{}]]},"cursor":{"x":12}}],[0.247573,{"lines":{"2":[["nermin > exit                                                                                                                                          ",{}]]},"cursor":{"x":13}}],[0.421511,{"lines":{"3":[["exit                                                                                                                                                   ",{}]]},"cursor":{"x":0,"y":4}}]]